[{"model": "blog.blogpage", "pk": 3, "fields": {"description": "I often write tutorials on fun, beginner web stuff as well as about how I produce my books and videos."}}, {"model": "blog.postpage", "pk": 5, "fields": {"excerpt": "Had I released Hello Web App as digital files only (as a lot of other self-publishers do), my life would have been a lot easier. However, I just couldn't say no to having and selling a gorgeous paperback book.", "featured": true, "body": "[{\"type\": \"paragraph\", \"value\": \"Had I released Hello Web App as digital files only (as a lot of other self-publishers do), my life would have been a lot easier. However, __I just couldn't say no to having and selling a gorgeous paperback book.__\", \"id\": \"e641a232-3e04-4a60-bd72-4746a5ff964f\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/13/hwa.jpeg\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"0b59263d-1436-4f55-b0ad-315f79322b56\"}, {\"type\": \"paragraph\", \"value\": \"I've been traveling through Europe and being able to whip out my book at any meetup and show it off has been so much fun. \\r\\n\\r\\n__Unfortunately, creating a paperback book (compared to digital books) is a pain in the ass.__ At least I had experience with the process from my degree \\u2014 I have a BFA in Art &amp; Design with a concentration in Graphic Design. My favorite class was editorial design. My final portfolio was a hand-bound book. Now you can see why I can't resist releasing a physical book.\\r\\n\\r\\nI can't detail exactly how to design a book, but here's a look into my process of designing Hello Web App.\\r\\n\\r\\n## Interior design\", \"id\": \"534904ff-2e35-4d4b-a948-c126f30d5721\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/13/interior.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"b8f81d02-280d-49bc-b456-63cd166a70a4\"}, {\"type\": \"paragraph\", \"value\": \"I haven't done any editorial design in about 10 years (egads, I'm old) so the first things I did was go to a local bookstore to check out other programming books and see how they were formatted. __Turns out, it's really hard to find well-designed programming books.__\\r\\n\\r\\nI found a small few that I liked and took notes about what I thought worked well and what would be a good idea to implement in my own book. I also own quite a few books (including a few by [A Book Apart](http://abookapart.com/), which has fantastic design) and used them for reference, and browsed book designs and typography on [Dribbble](http://dribbble.com/). __All of these sources influenced the design of my book.__\", \"id\": \"5c331b09-3dfb-42ba-9a52-86e1d879511f\"}, {\"type\": \"html\", \"value\": \"<blockquote class=\\\"twitter-tweet\\\" lang=\\\"en\\\"><p lang=\\\"en\\\" dir=\\\"ltr\\\">Oh ho I thought I was done with the print design, and then I figure out baseline grids. Updating everything AGAIN! <a href=\\\"http://t.co/7SJQ2oQ7yh\\\">pic.twitter.com/7SJQ2oQ7yh</a></p>&mdash; Hello Web App (@hellowebapp) <a href=\\\"https://twitter.com/hellowebapp/status/572601138505129985\\\">March 3, 2015</a></blockquote>\\r\\n<script async src=\\\"//platform.twitter.com/widgets.js\\\" charset=\\\"utf-8\\\"></script>\", \"id\": \"38aeecef-29aa-42cd-9e65-4b34153eea52\"}, {\"type\": \"paragraph\", \"value\": \"I also paid for a [Skillshare](http://www.skillshare.com/) account for a bit and watched some classes on typography, editorial design, and working in InDesign \\u2014 leading to revelations like the above. I highly recommend Skillshare's online design classes.\", \"id\": \"cc86bca3-6e0c-49a6-86c9-5ffe2072c11d\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/13/urls.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"f0b9e224-53b6-44d7-9db9-2a65479f4a35\"}, {\"type\": \"paragraph\", \"value\": \"Styling the code blocks was the hardest part. I wanted the code readable, but I didn't want the book to be a rainbow of colors, so in the end I settled with blue text to set it apart, bolding the important parts, and greying out comments. __In future editions, I'd like to add line numbers but it was too much of a pain for this edition.__\", \"id\": \"69cf3aa8-3b14-4867-bcc1-c758aa751e5f\"}, {\"type\": \"html\", \"value\": \"<blockquote class=\\\"twitter-tweet\\\" lang=\\\"en\\\"><p lang=\\\"en\\\" dir=\\\"ltr\\\">Don&#39;t know if I&#39;ll ever be 100% happy with the <a href=\\\"https://twitter.com/hellowebapp\\\">@hellowebapp</a> typefaces. Wondering if I should have a by-hand feel\\u2026 <a href=\\\"http://t.co/lQh7txQfa7\\\">pic.twitter.com/lQh7txQfa7</a></p>&mdash; Tracy Osborn (@limedaring) <a href=\\\"https://twitter.com/limedaring/status/563873376851079168\\\">February 7, 2015</a></blockquote>\", \"id\": \"661174e9-a67d-41ae-8c5d-555a4066b420\"}, {\"type\": \"paragraph\", \"value\": \"The headlines went through quite a few iterations before I was (mostly-)happy with them. A few rejects can be seen above.\\r\\n\\r\\n__I ended up using quite a melang\\u00e9 of fonts__ \\u2014 the text is set in Tisa Pro with Tisa Sans Pro for sub-headlines, headlines are set in Alternate Gothic No. 3 D, the code is set in Inconsolata, and the cover headline and page footers are set in Avenir. Generally I don't recommend having so many fonts in one book but it does seem to work okay with Hello Web App.\\r\\n\\r\\n### Cover Design\\r\\n\\r\\nI wanted something that was eye-catching and \\\"design-y\\\" but also something simple and clean since that's more my style. So I used the oldest trick in the book \\u2014 making the title gigantic and slightly oversetting the text.\", \"id\": \"7d45139d-b72d-4a15-9db0-997f1291f48b\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/13/comparison.jpeg\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"c9848302-fe8b-4a69-8d99-571112a2faaa\"}, {\"type\": \"paragraph\", \"value\": \"<p>I printed a preliminary version of the book so I could get photos up on the website as well as have an object I could bring to events and workshops, which you can see on the left. I was mostly happy with the title text, but made some major updates to the sub-headline. I wanted something a bit less literal and dropped mentioning \\\"Python and Django\\\" to say simply \\\"web apps.\\\"</p>\", \"id\": \"b12a716a-6960-485b-b349-dab3c63e970d\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/13/cover.jpeg\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"9700c9c5-1359-410f-91ec-cc8732eb00f3\"}, {\"type\": \"paragraph\", \"value\": \"The spine and back cover took me a long time to design. Of course, I needed to add an ugly barcode (more on that below) as well as froo-froo about-the-author-why-i'm-awesome text. I'm fairly pleased that I was able to extend the white of the \\\"H\\\" in the cover title and wrap it around to the back cover for some visual interest. It also helps the spine stand out.\\r\\n\\r\\n### Barcode and ISBN\\r\\n\\r\\nKeep in mind that if you're thinking of trying to sell your book at a bookstore, you'll need to get a barcode as well as a different ISBN number than your digital edition. Both of these can be bought for a ridiculous amount of money from Bowker, a very annoying company that has a monopoly on selling these things in the US. Individual ISBNs are horribly expensive \\u2014 $125 \\u2014 but the price drastically goes down for bulk orders (100 ISBNs are only $575). \\r\\n\\r\\n__ISBN's are cheap for the big publishers but ridiculous for the self-publisher.__ Bowker will try to upsell you to other unneeded services during checkout too. This whole thing is a necessary evil, and something I really hope gets disrupted soon.\\r\\n\\r\\n## Printing\", \"id\": \"664482c0-b904-40cc-806e-85b2aefdd138\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/13/cover.jpg\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"47a188bc-ca5f-4eaf-bd31-acfdc736fd76\"}, {\"type\": \"paragraph\", \"value\": \"I really wanted to support a local printing company, I really did. I was recommended [Edition One Books](http://www.editiononebooks.com/) in Berkeley, California, and each book (if I ordered 1,000) would run me ~$10. Unfortunately, if each individual book cost that much, I wouldn't be able to sell them on Amazon and still see any sort of profit since Amazon takes 55% of every purchase.\\r\\n\\r\\nI ended up working with [Print Ninja](http://www.printninja.com/) which does its printing in China. For my order of 1,000 books, with additional charges for rush shipping of 200 as well as heavier cover paper weight, interior paper weight, as well as a spot gloss on the cover, __I ended up with a cost of $3.60 per book.__ Print Ninja also has some of the best email support I've ever used.\\r\\n\\r\\nThe biggest downside was shipping time \\u2014 books are transported via cargo ship, which meant 800 books took two months to get to me (I paid a big premium to ship 200 by air). I was rushing to get the books out as fast as possible and this significantly delayed everything. __So if you work with Print Ninja (and I recommend you do) keep in mind the shipping time.__\\r\\n\\r\\n## Photographing\\r\\n\\r\\nQuick note on this subject \\u2014 the books were photographed with a [basic Canon DSL](http://amzn.to/1TrKSpP_ with a [fixed 50mm f/1.8 lens](http://amzn.to/1Cvjx1Y) on some random wooden boards I found in my yard. __A good-enough cheap-enough camera to create good-enough shots to use in my marketing and website.__\", \"id\": \"303e9b87-fcaa-4986-9ff8-c60c90aac7f7\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/13/photographing.jpg\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"d688639c-8ff1-4143-8090-5e24c476b71e\"}, {\"type\": \"paragraph\", \"value\": \"I stood on a chair to get most of the shots. I wanted a nice textured background and these boards worked well. Previously for photographs I've used a well-worn picnic table as well. You can also photograph in a bathtub for a clean, smooth white background. Professional photos are not that hard, and make a big difference over mockups.\\r\\n\\r\\n## Conclusion\\r\\n\\r\\n__I labored for weeks on the Hello Web App design and I am super pleased with how it came out.__ Thankfully, the design framework I built for the book is reusable for the future books I'm looking into creating (same type and layout, update the colors, new headline, done with design \\u2014 hopefully.)\\r\\n\\r\\n__Next up, I'm going to [review the fulfillment process](https://hellowebapp.com/news/my-adventures-and-advice-on-fulfilling-orders-for-a-printed-self-published-book)__ \\u2014 from packaging the books securely for shipping, hiring an assistant to help out, and buying labels online to ship a mass amount of books each week without losing my mind.\\r\\n\\r\\n-------\\r\\n\\r\\nI have quite a few other articles about the Hello Web App design and production process that you might want to read:\\r\\n\\r\\n* [I self-published a learn-to-code book and made nearly $5,000 in pre-orders](https://hellowebapp.com/news/how-i-launched-my-learn-to-code-book-and-made-nearly-5000-in-pre-orders)\\r\\n* [Hello Web App's Kickstarter campaign: How I did it, what I regret.](https://hellowebapp.com/news/reviewing-hello-web-apps-kickstarter-campaign)\\r\\n* [Economics of self-publishing a book via Kickstarter: Hello Web App's story](https://hellowebapp.com/news/economics-of-self-publishing-on-kickstarter)\\r\\n* [My adventures and advice on fulfilling orders for a printed self-published book](https://hellowebapp.com/news/my-adventures-and-advice-on-fulfilling-orders-for-a-printed-self-published-book)\\r\\n\\r\\nOf course, you should [buy Hello Web App](http://hellowebapp.com/order) if you're interested in learning web app development. You can download a sample of the book by signing up for the newsletter at the bottom of this page.\\r\\n\\r\\nYou should follow me on Twitter for more fun self-publishing tidbits, startup whining, and dorkiness: [@limedaring](http://twitter.com/limedaring)\", \"id\": \"c38d4a2d-9b8d-4532-9fc7-957ac9417c11\"}]", "date": "2015-07-13T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/7/13/banner.jpeg", "categories": [2, 5, 8]}}, {"model": "blog.postpage", "pk": 7, "fields": {"excerpt": "Well, that was quick. The 200 expedited books I ordered (out of a 1,000 order shipment) have been consumed by Kickstarter backers, Amazon orders, and Gumroad orders (Amazon shows that it's out of stock right now \u2014 I actually just sent 81 so it should come back in stock next week but it might sell out again quickly.) These orders will ship out tomorrow or early next week.", "featured": false, "body": "[{\"type\": \"paragraph\", \"value\": \"Well, that was quick. The 200 expedited books I ordered (out of a 1,000 order shipment) have been consumed by Kickstarter backers, Amazon orders, and Gumroad orders (Amazon shows that it's out of stock right now \\u2014 I actually just sent 81 so it should come back in stock next week but it might sell out again quickly.) These orders will ship out tomorrow or early next week.\\r\\n\\r\\nAny paperback orders from today on out will be shipped when the rest of my 800 books arrive in early June. They're currently noodling around on a cargo ship in the Pacific somewhere.\\r\\n\\r\\n[That said, all orders get a copy of the digital books](https://hellowebapp.com/preorder), so don't let this stop you from ordering and starting your web app journey!\", \"id\": \"be71fe3f-b2a4-49fa-8661-db4d09489f2c\"}]", "date": "2015-05-07T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/5/7/shipments.jpeg", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 8, "fields": {"excerpt": "My goal with Hello Web App was to create a small, easily digestible book that walks you through everything you would need to launch your first web app \u2014 albeit, a very basic web app. Since launch, I've had nothing but great feedback and so many people have shared with me their first web apps!", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/9/4/ks.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Still from the fabulous Kickstarter video!</figcaption>\\r\\n</figure>\", \"id\": \"f761cab2-c5f3-4469-9407-50fb1365a148\"}, {\"type\": \"paragraph\", \"value\": \"There were a lot of concepts that didn't make it into the first book due to their complexity, things that most web apps would probably need at some point, like:\\r\\n\\r\\n* Taking payments from customers.\\r\\n* Adding an API.\\r\\n* Allowing user-uploaded images and editing/resizing those images automatically.\\r\\n* Adding alerts and admin emails.\\r\\n\\r\\nThere also wasn't a lot of theory in Hello Web App by design, but there are quite a few things that are great to know as you grow as a web app developer, such as:\\r\\n\\r\\n* Database schema design and reducing queries.\\r\\n* Class-based views.\\r\\n* How and why we should read source code.\\r\\n\\r\\n**All of this and more will be in [Hello Web App: Intermediate Concepts](https://hellowebapp.com/intermediate-concepts)**, the perfect follow-up book to those who've gone through the original Hello Web App tutorial or anyone who has built their first web app and are looking for the next step.\\r\\n\\r\\nBecause I love having a physical book, and physical books cost many thousands in up-front moolas, I'm running another Kickstarter campaign to fund the book!\\r\\n\\r\\n**Check out the Kickstarter campaign here:\\r\\n[https://www.kickstarter.com/projects/1868398473/hello-web-app-intermediate-concepts](https://www.kickstarter.com/projects/1868398473/hello-web-app-intermediate-concepts)**\\r\\n\\r\\n(Highly recommend you check out the video because it was a blast to film.)\\r\\n\\r\\n**Hello Web App: Intermediate Concepts will be released in December to all backers of the Kickstarter** \\u2014 the first draft is already finished and I am so excited to release this new book to everyone!\", \"id\": \"6e03f92b-a5b4-485b-944e-8bb12b5900a4\"}]", "date": "2015-09-04T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/9/4/ks.png", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 9, "fields": {"excerpt": "Black Friday (and Cyber Monday, and Small Business Saturday, and all those other things) is almost here! From Friday starting 12:01am until Monday 11:59pm, I'll be selling all three of my video courses for 25% off (only $59 for each package).", "featured": true, "body": "[{\"type\": \"paragraph\", \"value\": \"Black Friday (and Cyber Monday, and Small Business Saturday, and all those other things) is almost here!\\r\\n\\r\\nFrom Friday starting 12:01am until Monday 11:59pm, I'll be selling all three of my video courses for 25% off **(only $59 for each package)**.\\r\\n\\r\\n* [Hello Web App](https://hellowebbooks.withcoach.com/hello-web-app-video-course), my videos + eBook teaching beginner web app development with Django.\\r\\n* [Hello Web App: Intermediate Concepts](https://hellowebbooks.withcoach.com/hello-web-app-intermediate-concepts-video-course), which teaches intermediate Django concepts.\\r\\n* [Hello Web Design](https://hellowebbooks.withcoach.com/hello-web-design-video-course), my **brand new** video + eBook series teaching design for non-designers.\\r\\n\\r\\nI'll share the coupon code here as soon as it's time!\\r\\n\\r\\n**Also** I'll be sharing an _even better_ coupon code to anyone who is on the Hello Web Books newsletter list. If you're not on the list yet, you can join at the bottom of the page.\\r\\n\\r\\nHappy Thanksgiving to all my fellow Americans!\", \"id\": \"e542a72e-0cc4-4a72-8d7e-46b3c36b6c2c\"}]", "date": "2017-11-21T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2017/11/mockup.jpg", "categories": [1]}}, {"model": "blog.postpage", "pk": 10, "fields": {"excerpt": "I love Stripe, the customer payment solution I advocate using in Hello Web App: Intermediate Concepts, but I wish the Stripe's dashboard came with a bit more information about the state of your project and revenue. Here's my script for pulling in that information for your Django project.", "featured": true, "body": "[{\"type\": \"paragraph\", \"value\": \"I love [Stripe](http://stripe.com) (the customer payment solution I advocate using in [Hello Web App: Intermediate Concepts](http://hellowebapp.com/intermediate-concepts)), but I wish the Stripe's dashboard came with a bit more information about the state of your project and revenue.\", \"id\": \"b66bf3fd-aec2-4ade-b504-ae86ea633aea\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2016/8/6/stripe.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Actually the current WeddingLovely dashboard. #YOLO</figcaption>\\r\\n</figure>\", \"id\": \"07e36f45-e2ef-4f16-9961-2958169d6547\"}, {\"type\": \"paragraph\", \"value\": \"In particular, I wish it had MRR (monthly recurring revenue), which is a good indicator of health for your app's revenue. For [WeddingLovely](http://weddinglovely.com), my wedding planning and vendor marketplace app, I have people on monthly *and* (mostly) yearly subscriptions, not to mention a lot of folks with discounts. Calculating MRR just based on the number of customers I have would be fairly inaccurate. So I need to query Stripe and calculate MRR based on the subscriptions and discounts applied to my actual customers, and I wrote a script to do this.\\r\\n\\r\\nNote: This does not comply with generally accepted accounting principles, so don't use this for your accounting. It's just a quick estimation of your Stripe subscriptions.\\r\\n\\r\\n__Prerequisites__: Django app with an active Stripe account (with the [Stripe Python library](https://pypi.python.org/pypi/stripe/) installed), with at least a few active customers (can be test data).\\r\\n\\r\\nI recommend reading [Hello Web App: Intermediate Concepts](http://hellowebapp.com/intermediate-concepts)'s Stripe chapter if you're looking to learn how to tie in Stripe to your Django app.\\r\\n\\r\\n## The code:\\r\\nThe necessary bits of code to calculate and return MRR:\", \"id\": \"3630bbf2-4d34-4900-ba22-74da3d821ec3\"}, {\"type\": \"html\", \"value\": \"<pre><code class=\\\"python\\\">\\r\\n# Import me at the top.\\r\\nimport stripe\\r\\nfrom django.conf import settings\\r\\nstripe.api_key = settings.STRIPE_SECRET\\r\\n\\r\\n# Grab all your customers from Stripe.\\r\\n# I have about 200 customers so I set the limit to 50 - the \\r\\n# default is 10.\\r\\nstripe_customers = stripe.Customer.list(\\r\\n    limit=50,\\r\\n    expand=['data.subscription'],\\r\\n)\\r\\n\\r\\n# The results are auto-paginated, so you need to loop over \\r\\n# the pages.\\r\\nfor customer in stripe_customers.auto_paging_iter():\\r\\n\\r\\n    # Grab the subscriptions for the specific customer.\\r\\n    subscriptions = customer.subscriptions\\r\\n\\r\\n    # Start tracking revenue for that customer.\\r\\n    rev = 0\\r\\n    for sub in subscriptions:\\r\\n        # Year subscriptions need to be divided by 12. Update\\r\\n        # this to match your specific subscription intervals.\\r\\n        if sub.plan.interval == \\\"year\\\":\\r\\n            rev += sub.plan.amount / 12.0\\r\\n        elif sub.plan.interval == \\\"month\\\":\\r\\n            rev += sub.plan.amount\\r\\n\\r\\n    # If your customer has a coupon attached, make sure to take \\r\\n    # that into account for your revenue.\\r\\n    if customer.discount:\\r\\n        percent_off = customer.discount.coupon.percent_off\\r\\n        discount = rev * (percent_off / 100.0)\\r\\n        rev = rev - discount\\r\\n\\r\\n    # Add this customer's revenue to your total.\\r\\n    monthly_rev += rev\\r\\n\\r\\n# Total monthly revenue, divided by 100 because Stripe gives \\r\\n# revenue in cents\\r\\nmonthly_rev = monthly_rev / 100\\r\\n</code></pre>\", \"id\": \"0d9b16b4-bedf-44f6-ae83-997fe7232392\"}, {\"type\": \"paragraph\", \"value\": \"This looks deceptively simple, but it took me a couple of hours to figure out that I need to loop over the results returned from Stripe, and that I can't `len(stripe_customers)` because it actually isn't a simple list (It'll always return `4` because that's the number of keys in the underlying dict structure.)\\r\\n\\r\\n## The Django management command:\\r\\nHere's my full script if you'd like to copy my Django management command that has nice printouts and whatnot. There is also a chapter on scripts in [Hello Web App: Intermediate Concepts](http://hellowebapp.com/intermediate-concepts) if you're interested in learning more!\\r\\n\\r\\n*mrr.py*\", \"id\": \"f8caf166-e1d9-4e78-82d5-2e97bd2dde22\"}, {\"type\": \"html\", \"value\": \"<pre><code class=\\\"python\\\">\\r\\nimport stripe\\r\\n\\r\\nfrom django.conf import settings\\r\\nfrom django.core.management.base import BaseCommand\\r\\nstripe.api_key = settings.STRIPE_SECRET\\r\\n\\r\\nclass Command(BaseCommand):\\r\\n    def handle(self, *args, **options):\\r\\n        monthly_rev = 0\\r\\n        stripe_customers = stripe.Customer.list(\\r\\n            limit=50,\\r\\n            expand=['data.subscription'],\\r\\n        )\\r\\n\\r\\n        print \\\"------\\\"\\r\\n        for customer in stripe_customers.auto_paging_iter():\\r\\n            print \\\"Profile: %s\\\" % customer.description\\r\\n            subscriptions = customer.subscriptions\\r\\n\\r\\n            rev = 0\\r\\n            for sub in subscriptions:\\r\\n                print \\\"Interval: %s\\\" % sub.plan.interval\\r\\n                if sub.plan.interval == \\\"year\\\":\\r\\n                    rev += sub.plan.amount / 12.0\\r\\n                elif sub.plan.interval == \\\"month\\\":\\r\\n                    rev += sub.plan.amount\\r\\n                else:\\r\\n                    print \\\"ISSUE\\\"\\r\\n            if customer.discount:\\r\\n                percent_off = customer.discount.coupon.percent_off\\r\\n                discount = rev * (percent_off / 100.0)\\r\\n                rev = rev - discount\\r\\n                print \\\"Rev with discount: %f (%f off)\\\" % (rev, percent_off)\\r\\n            else:\\r\\n                print \\\"Revenue: %f\\\" % rev \\r\\n\\r\\n            monthly_rev += rev\\r\\n            print \\\"Total revenue now: %f\\\" % monthly_rev\\r\\n            print \\\"&gt;\\\"\\r\\n\\r\\n        print \\\"------\\\"\\r\\n\\r\\n        # because Stripe gives us revenue in cents...\\r\\n        monthly_rev = monthly_rev / 100\\r\\n\\r\\n        print \\\"MRR: $%f\\\" % monthly_rev\\r\\n</code></pre>\", \"id\": \"edfdddbc-715f-4960-a95d-8b1e85687428\"}, {\"type\": \"paragraph\", \"value\": \"After all this work, I figured out that WeddingLovely's MRR is $1568.25. Not bad, not bad at all.\\r\\n\\r\\nGo forth and conquer with your new datapoint for your app's health!\\r\\n\\r\\n**Update**: Discovered [Stripe's \\\"expanding objects\\\" feature on API calls](https://stripe.com/docs/api#expanding_objects), so we can grab subscriptions as well when we're making the API call for customers, so we don't have to do additional API calls.\", \"id\": \"8dfd496a-250b-4f64-9b1b-10dc4b2c0356\"}]", "date": "2016-08-06T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2016/8/6/stripe.png", "categories": [3, 7]}}, {"model": "blog.postpage", "pk": 11, "fields": {"excerpt": "Coming to DjangoCon EU in Cardiff, Wales later this month? You can order a copy of Hello Web App and get it at registration, saving ~$12 USD on international shipping! I'm also donating a portion of the sales to DjangoCon's diversity fund.", "featured": false, "body": "[{\"type\": \"paragraph\", \"value\": \"Coming to [DjangoCon EU](http://2015.djangocon.eu/) in Cardiff, Wales later this month? You can order a copy of Hello Web App and get it at registration, saving ~$12 USD on international shipping! I'm also donating a portion of the sales to DjangoCon's diversity fund. \\r\\n\\r\\n[Click here to order a copy for US$19.95 (\\u00a313.50)](http://2015.djangocon.eu/news/hello-web-app/) to be picked up at DjangoCon registration.\\r\\n\\r\\nI'll also be running a workshop at DjangoCon on the Open Day called [Django for Designers](http://2015.djangocon.eu/event/django-web-designers/) based on the Hello Web App content. If you're at DjangoCon, come say hi, would love to meet you!\", \"id\": \"5437799b-866a-4992-937e-3235aad84875\"}]", "date": "2015-05-12T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/5/12/djangocon.png", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 12, "fields": {"excerpt": "Over the last few weeks, I've been working on a little project to go along with the Kickstarter campaign for Hello Web App (one week left!) I've punted around the idea of releasing little mini-books or zines on small ideas, like pairing fonts or working with git. Today I'm releasing my first project, A Really Friendly Command Line Intro for MacOS!", "featured": true, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <a href=\\\"https://hellowebbooks.com/learn-command-line\\\">\\r\\n        <img src=\\\"/static/images/blog/2018/03/cmd-line-page.png\\\" alt=\\\"Really Friendly Command Line Intro\\\" style=\\\"border-color: #000;\\\"/>\\r\\n    </a>\\r\\n</figure>\", \"id\": \"add05bb4-0e87-41de-bdff-5d419f5345fb\"}, {\"type\": \"paragraph\", \"value\": \"Today I'm releasing my first project, [A Really Friendly Command Line Intro](https://hellowebbooks.com/learn-command-line) for MacOS! For free! This is a great addition to _Hello Web App_ (and will be bundled with it moving forward). I walk through all the basic UNIX/command line commands that a beginner might need to learn when they start coding for the first time.\\r\\n\\r\\nRight now, you can:\\r\\n\\r\\n* [Read the HTML online here.](https://hellowebbooks.com/learn-command-line)\\r\\n* [Download the PDF.](http://hellobks.com/cmd-line-pdf)\\r\\n* [Download the printable PDF](http://hellobks.com/cmd-line-printable), set up to be folded together and stapled.\\r\\n* [Buy .mobi/.ePub versions on Leanpub for $2.99.](https://leanpub.com/really-friendly-command-line-intro)\\r\\n\\r\\nUpcoming, I'm working on some additional formats (like a video) as well as creating Windows and Linux versions of the zine.\\r\\n\\r\\nThanks friends! Go check out [A Really Friendly Command Line Intro](https://hellowebbooks.com/learn-command-line).\", \"id\": \"7a9d4891-2cc6-4237-b6db-706a70a726f2\"}]", "date": "2018-03-26T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2018/03/cmd-line-page.png", "categories": [1, 7, 10]}}, {"model": "blog.postpage", "pk": 13, "fields": {"excerpt": "Mashed up a few of the videos contained in the Complete Hello Web App Package. Complete listing of videos in the package: Complete code walkthrough of Hello Web App (broken down by chapter.)", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"full video\\\">\\r\\n    <iframe src=\\\"https://player.vimeo.com/video/124640285?byline=0&portrait=0\\\" width=\\\"900\\\" height=\\\"506\\\" frameborder=\\\"0\\\" webkitallowfullscreen='webkitallowfullscreen' mozallowfullscreen='mozallowfullscreen' allowfullscreen='allowfullscreen'></iframe>\\r\\n</figure>\", \"id\": \"fbc431bb-a701-4a4a-9b01-36536c0e7ee1\"}, {\"type\": \"paragraph\", \"value\": \"Mashed up a few of the videos contained in the Complete Hello Web App Package ([http://gum.co/hellowebapp-videos](http://gum.co/hellowebapp-videos)).\\r\\n\\r\\nComplete listing of videos in the package:\\r\\n\\r\\n* Complete code walkthrough of Hello Web App (broken down by chapter.)\\r\\n* How to use Git for version control.\\r\\n* Using the command line.\\r\\n* Walkthrough of real life web app code (taking a look at [WeddingLovely](http://weddinglovely.com/), my startup's code.)\\r\\n* Walkthrough of creating a feature not mentioned in Hello Web App.\\r\\n\\r\\nThe video package starts at $79 \\u2014 [pre-order today](http://gum.co/hellowebapp-videos)!\", \"id\": \"48cc0b34-6c4a-4dfb-b889-1ddcfd93d3bc\"}]", "date": "2015-04-12T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/4/12/1.png", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 14, "fields": {"excerpt": "About a year ago, I ran a Kickstarter for Hello Web App \u2014 and now that the book has officially launched, I thought it would be useful to run down how much money the Kickstarter raised and where it went!", "featured": true, "body": "[{\"type\": \"paragraph\", \"value\": \"About a year ago, I ran a [Kickstarter for Hello Web App](https://www.kickstarter.com/projects/1868398473/hello-web-app-intro-to-building-web-apps-with-djan) \\u2014 and now that [the book has officially launched](https://hellowebapp.com/preorder), I thought it would be useful to run down how much money the Kickstarter raised and where it went!\", \"id\": \"efe2ae9e-90bb-4a44-b7c3-96180e02289f\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/14/kickstarter.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>The Hello Web App Kickstarter campaign page.</figcaption>\\r\\n</figure>\", \"id\": \"94c5a375-04ee-446d-8c06-af9725235fd6\"}, {\"type\": \"paragraph\", \"value\": \"__Note__: There will be another post after this one covering setting up the campaign and the regrets I have about the rewards and other details, but the economics of a project is such a long topic already that I wanted to devote an entire post to it.\\r\\n\\r\\n([Big thanks to Cameron Moll for being the inspiration for this post.](https://medium.com/@cameronmoll/the-economics-of-a-kickstarter-project-5b374cfeb43c))\", \"id\": \"dfdcb75a-1ba5-4bb9-9d2d-5eade93f05a9\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/14/graph.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\\r\\n\\r\\n<p>\\r\\nThe Hello Web App Kickstarter campaign raised $12,136 (173% of the original $7,000 goal) from 540 backers. </p>\\r\\n\\r\\n<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/14/barchart.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\\r\\n\\r\\n<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/14/piechart.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"8e46a449-38cc-48e1-92ce-0c8cf09ea3f5\"}, {\"type\": \"paragraph\", \"value\": \"It's interesting to note that while the average pledge amount was $22.48, the vast majority of backers (322 total out of 540 backers) chose the $10 pledge.\\r\\n\\r\\n## Economics breakdown\\r\\n\\r\\n### Total amount deposited after fees: $10,806\\r\\n\\r\\nKickstarter takes 5% and Amazon Payments (which Kickstarter used at the time of my campaign) takes 3-5% depending on region. \\r\\n\\r\\n### Taxes: -$2,000 ($8,806 profit remaining)\\r\\n\\r\\nAs soon as I got my deposit, I squirreled away $2,000 for my eventual taxes. Unfortunately shipping the books happened in the next calendar year, so I had to pay taxes on my entire payment since I couldn't claim any deductions. Note that this is a guesstimate \\u2014 my taxes were combined with my husband's.\", \"id\": \"84a6b019-6dc6-4ef5-93e2-1f0d0652024f\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/14/shipping.jpeg\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Piles of books at my home ready to be shipped.</figcaption>\\r\\n</figure>\", \"id\": \"8b563a36-4332-4b04-a714-de891b98b496\"}, {\"type\": \"paragraph\", \"value\": \"### Book printing: -$1,037 ($7,769 profit remaining)\\r\\n\\r\\nI almost printed the books for ~$10 per book, which (in hindsight) would have been devastating. I ended up going with [Print Ninja](http://printninja.com/) for the paperback printing, __which ended up giving me a per-book cost of $3.60__ (I ordered 1,000 copies, 200 expedited, with additional costs for color pages, thicker cover and paper stock, and a spot-gloss on the cover.)\\r\\n\\r\\nKickstarter backers ended up \\\"ordering\\\" a total of 288 paperback books, __which comes out to about $1,037 in printing costs.__\\r\\n\\r\\n### Book shipping though Amazon: -$655 ($7,114 profit remaining)\\r\\n\\r\\nI'm selling Hello Web App through a number of different channels ([Gumroad](http://gumroad.com/limedaring), which has the least fees, [Amazon](http://amzn.to/1yLsHFH), where I get the least profit but theoretically bigger distribution, and [Leanpub](https://leanpub.com/hellowebapp)). I read in a few sources that it was worth it to order a bunch of copies of your own book for your Kickstarter backers so you can get on Amazon's best-selling lists, which I did the day of launch.\\r\\n\\r\\nI ended up ordering 55 copies of the book for various backers, which cost overall $1,159 at approximately $21 per book (the $19.95 book price plus sales tax.) I'll eventually receive money back from Amazon for the books ($8.98 per book, so $494), which brings the total cost of shipping via Amazon to $665. (There is also the cost per book for shipping to Amazon, but that ended up being around $0.30 per book so I didn't include it here.)\\r\\n\\r\\nWas it worth it? I'm not sure \\u2014 Amazon didn't order enough from me to cover the launch day rush (and I didn't realize at the time I could ask for an increased order) so the books went out of stock immediately. I have no way of telling, but I am __pretty sure this negated the effect my book buying had on the ranking of the book.__\", \"id\": \"7a579c5c-69ad-4516-803d-5d47c0a4e720\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/14/packing.jpeg\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Hours of prepping and packing went into shipping the books.</figcaption>\\r\\n</figure>\", \"id\": \"6279322a-8b49-4332-aca9-4d67160e4c34\"}, {\"type\": \"paragraph\", \"value\": \"### Book shipping myself domestically: -$164 ($6,950 profit remaining)\\r\\n\\r\\n[Did you know you can ship books domestically using USPS's \\\"Media Mail\\\" option for __much__ lower shipping costs?](http://www.ebay.com/gds/Making-the-Most-of-Media-Mail-Save-Cents-on-Shipping-/10000000000902588/g.html) I didn't before this project. Media Mail is slower than typical shipments through USPS but the cost savings is ginormous. Shipping one book costs $2.92, and the total cost to ship books domestically $164.\\r\\n\\r\\nAlso \\u2014 you can't print Media Mail labels from USPS.com, but you can through Paypal. However, Paypal's system is really buggy and I kept getting random errors. I also tried stamps.com, but their system seemed even worse and they required me to call them to cancel my account (and answer a survey augh), which is a terrible business practice so they're now boycotted.\", \"id\": \"56e84475-71c9-4a31-9071-338fb546737c\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/14/boxes.jpeg\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>The post office was more understanding than I thought they would be.</figcaption>\\r\\n</figure>\", \"id\": \"993e473a-fa95-4d6a-9bb4-266ed585d49b\"}, {\"type\": \"paragraph\", \"value\": \"### Book shipping myself internationally: -$744 ($6,206 profit remaining)\\r\\n\\r\\nI made a huge mistake when I chose the additional amounts for shipping for the Kickstarter pledges. I set international shipping at $5 extra, but turns out that shipping a book internationally is much more than that \\u2014 ~$8 for Canada, and $13 for overseas shipments. \\r\\n\\r\\nI ended up sending a message to Kickstarter backers of the $25 tier, hat in hand, asking if people won't mind sending over the extra money to cover shipping, and a few did, some much more than I asked. The generosity of strangers always amazes me \\u2014 thanks again to everyone who sent over more money.\\r\\n\\r\\nThe approximate total for international shipping ended up being around $844. I received around $100 in donations for shipping from various backers, which brings the total cost of shipping to $744.\", \"id\": \"5e483992-c8f2-4ffe-bf05-60f6b08be972\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/14/happ.jpeg\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Box ready to be taken to the post office.</figcaption>\\r\\n</figure>\", \"id\": \"88743575-42b7-402b-8f40-60159f73788a\"}, {\"type\": \"paragraph\", \"value\": \"### Packaging supplies for shipping: -$100 ($6,106 profit remaining)\\r\\n\\r\\nOf course I needed to buy supplies for packaging my books for shipment \\u2014 toner, printing labels, bags, and bubble wrap came to approximately $100.\\r\\n\\r\\n## $6,000 Profit?\\r\\n\\r\\nHaving ~$6,000 left on a $12,000 Kickstarter raise isn't that bad. __However, the entire process took about a year, and I probably spent thousands of hours on researching, writing, editing, designing, and marketing the book before the public release.__ I don't actually make that much money from my [day job](http://weddinglovely.com/) (~$20,000/year), so this profit went directly into my living expenses and __I actually fell into debt the last few months because I didn't have enough money left over to pay my bills.__ Had I actually produced the book within the few months time period I originally estimated, $6,000 on top of producing and shipping fees isn't bad, but didn't last when stretched over a year. \\r\\n\\r\\nMy intent is not to complain, rather, note that while the numbers above sound great, __the number of hours I spent on the project probably meant I earned less than minimum wage.__ Yeehah.\\r\\n\\r\\n*But* \\u2014 the book is now selling and hopefully the debt hole I dug myself into will slowly get filled. I'm getting great reviews on the book (yay!) and have been booking [workshops](https://hellowebapp.com/workshops) on the book's content.\", \"id\": \"2fd0fde7-cd83-4e6b-af4f-4640fb19caeb\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/14/packing.gif\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"1e4e755e-7a2a-44cc-8ecf-669f9868a882\"}, {\"type\": \"paragraph\", \"value\": \"-------\\r\\n\\r\\nI have quite a few other articles about the Hello Web App design and production process that you might want to read:\\r\\n\\r\\n* [I self-published a learn-to-code book and made nearly $5,000 in pre-orders](https://hellowebapp.com/news/how-i-launched-my-learn-to-code-book-and-made-nearly-5000-in-pre-orders)\\r\\n* [Hello Web App's Kickstarter campaign: How I did it, what I regret.](https://hellowebapp.com/news/reviewing-hello-web-apps-kickstarter-campaign)\\r\\n* [Designing and printing Hello Web App's PDF and paperback editions](https://hellowebapp.com/news/all-about-hello-web-apps-paperback-book-fulfillment)\\r\\n* [My adventures and advice on fulfilling orders for a printed self-published book](https://hellowebapp.com/news/my-adventures-and-advice-on-fulfilling-orders-for-a-printed-self-published-book)\\r\\n\\r\\nOf course, you should [buy Hello Web App](http://hellowebapp.com/order) if you're interested in learning web app development. You can download a sample of the book by signing up for the newsletter at the bottom of this page.\\r\\n\\r\\nYou should follow me on Twitter for more fun self-publishing tidbits, startup whining, and dorkiness: [@limedaring](http://twitter.com/limedaring)\\r\\n\\r\\nThanks for reading!\", \"id\": \"4825889d-21e3-44df-8d4e-c2c8123791ba\"}]", "date": "2015-05-14T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/5/14/shipping.jpeg", "categories": [2, 4, 8]}}, {"model": "blog.postpage", "pk": 15, "fields": {"excerpt": "Apologies for the potato quality \u2014 a friend took these for me! Unfortunately the expedited books I ordered from the printers arrived after I left for Toronto for family obligations, so a dear friend of mine picked up the books for me.", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/4/27/box.jpeg\\\" alt=\\\"\\\"/>\\r\\n</figure>\\r\\n\\r\\n<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/4/27/book.jpeg\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"671e10c5-f049-4f69-a622-6e4dc61f7547\"}, {\"type\": \"paragraph\", \"value\": \"Apologies for the potato quality \\u2014 a friend took these for me! Unfortunately the expedited books I ordered from the printers arrived after I left for Toronto for family obligations, so a dear friend of mine picked up the books for me. She's also taking care of sending the books to Amazon ([because the paperback books now have been added to the Amazon listing](http://amzn.to/1OvNLH3) woohoo!)\\r\\n\\r\\nClearer images will be taken as soon as I get home. Just wanted to share the good news!\", \"id\": \"87bc7a21-86c4-453a-b259-a80fd92120b4\"}]", "date": "2015-04-27T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/4/27/box.jpeg", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 16, "fields": {"excerpt": "Since I\u2019ve moved to Toronto, Canada, I\u2019ve had to set up a completely new fulfillment system, so now that blog post is completely out of date. My current solution still has some kinks but lately I\u2019ve had a few big \u201cah ha\u201d moments (and a few shipping disasters, costing me $$$) that I thought it was time to give an update.", "featured": true, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"caption video\\\" style=\\\"padding-bottom: 50%;\\\">\\r\\n    <iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/Z-BwLmkdAeg?rel=0\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen='allowfullscreen'></iframe>\\r\\n    <figcaption>Video/vlog version of this post. Experimenting with formats!</figcaption>\\r\\n</figure>\", \"id\": \"201a48bc-b471-4710-b8c9-d23733ab1c2e\"}, {\"type\": \"paragraph\", \"value\": \"Back when I was in California, I got a pretty good system down for fulfilling books ([which you can see here](https://hellowebbooks.com/news/my-adventures-and-advice-on-fulfilling-orders-for-a-printed-self-published-book/)).\\r\\n\\r\\nSince I\\u2019ve moved to Toronto, Canada, I\\u2019ve had to set up a completely new fulfillment system, so now that blog post is completely out of date. My current solution still has some kinks but lately I\\u2019ve had a few big \\u201cah ha\\u201d moments (and a few shipping disasters, costing me $$$) that I thought it was time to give an update.\\r\\n\\r\\n**Current system: Amazon FBA for fulfillment to the US and self-packed Canada Post for Canada/overseas.** I\\u2019m in the process of sending books to Amazon.ca so I can sell there as well (and Amazon.com is already set up with Amazon FBA). Generally, the majority of my revenue comes from selling on my website (HelloWebBooks.com) using [Gumroad](https://gumroad.com) as the selling middleman.\\r\\n\\r\\n## On Amazon FBA and lessons learned\\r\\nMoving to Canada meant I was forced to find a fulfillment center, as it wouldn\\u2019t make sense for me to pack and ship books to the US anymore (you know, since it\\u2019s international and all.)\\r\\n\\r\\nFinding a fulfillment center was way more annoying than I thought it would be. I first turned to [Print Ninja](http://www.printninja.com/)\\u2019s fulfillment service, which was great \\u2014 until they shut down that part of their business. Sigh.\\r\\n\\r\\nThey had a preferred partner to transfer my fulfillment to, but this partner charged _extra_ for objects shipped using USPS\\u2019s Media Mail option (a much cheaper way to ship books in the US) which annoyed me so much that I immediately took them out of my fulfillment search. I would already pay a fulfillment/handling fee per book \\u2014 why charge me extra for shipping when it shouldn\\u2019t be more work on their end?\\r\\n\\r\\nIn the end, I decided to go with a big wig fulfillment center \\u2014 [Amazon FBA](https://services.amazon.com/fulfillment-by-amazon/benefits.html). The downside is that I\\u2019m dealing with a _huge_ corporation, so I don\\u2019t have a rep I work with directly to answer questions. And believe me, the Amazon FBA backend experience is one of the most confusing websites I\\u2019ve ever used.\", \"id\": \"4844fe44-0bd7-42a9-916f-82c8cd64b874\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2018/fba.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>My Amazon Seller Central dashboard.</figcaption>\\r\\n</figure>\", \"id\": \"72515c2a-0ac5-41f0-9d68-a0c9405642b9\"}, {\"type\": \"paragraph\", \"value\": \"(I also used to use [Amazon Advantage](https://www.amazon.com/gp/seller-account/mm-product-page.html?topic=200329780), which is more like consignment and has an even more terrible back-end system, but now I\\u2019m 100% using the FBA system. The advantages/disadvantages between the two systems is still mostly a mystery to me but at least things are slightly more streamlined.)\\r\\n\\r\\nA month ago, I noticed that I wasn\\u2019t making any revenue on FBA. Instead of getting a check at the end of the month, I was charged $600.\", \"id\": \"a02dabf1-8a73-4fc1-a670-4242d9252dd6\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2018/email.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Not what you want to see when you're trying to make money, not lose money.</figcaption>\\r\\n</figure>\", \"id\": \"c4096c33-0824-4bf1-af7b-bc01d8f86d03\"}, {\"type\": \"paragraph\", \"value\": \"Because I don\\u2019t have a dedicated rep, I had to navigate support who kept answering questions I didn\\u2019t ask and ignoring the ones I did ask. But eventually I got a refund for my fees and the correct information entered for my account.\\r\\n\\r\\nTo this day, I don\\u2019t know whether I put in the wrong info or they did, but at least it\\u2019s fixed now.\\r\\n\\r\\n**Lesson learned: Scrutinize the charges on your credit card and whine until errors get fixed. Amazon was certainly not going to catch this error (or care) unless I brought it up.**\\r\\n\\r\\nOverall, I\\u2019m mostly happy with fulfillment through Amazon FBA, but I\\u2019m keeping my eye out for better solutions still.\\r\\n\\r\\n## Lessons learned for overseas/Canadian fulfillment and shipping with Canada Post\\r\\nMy original plan was to use Amazon FBA for every shipment, Canada/overseas included. That was until I shipped some books using it, and it not only _took forever_ to arrive (I could only choose ground/boat shipping), I got no tracking numbers AND it cost buckets. And at least two books got lost during this time.\\r\\n\\r\\nIt was a happy day when I discovered that [EasyPost](easypost.com) has a Canada Post API, so I switched to fulfilling all Canada/overseas orders myself. So I keep boxes of books, pack them up, pay and print labels at home, and lug them over to the nearest Canada Post kiosk to ship.\", \"id\": \"5d73c064-f8b3-4e51-af4f-51f782d9b89b\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2018/easypost.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Yay shipping APIs!</figcaption>\\r\\n</figure>\", \"id\": \"531d4bf8-e94f-4b18-bd16-ac5b37f2ebc7\"}, {\"type\": \"paragraph\", \"value\": \"USPS First Class International worked well for me in the US, so I chose to ship out my Kickstarter international orders through the equivalent with Canada Post \\u2014 Canada Post Ground.\\r\\n\\r\\nAlas, I didn\\u2019t realize how horribly slow it would be! Orders shipped on 10/31/2017 are only *now* starting to arrive in Australia \\u2014 three months later.\\r\\n\\r\\nI now ship using their slightly more expensive Air shipping, and cuts the shipping time from months to around 10 days. I only regret I didn\\u2019t know about this when I shipped out my books to my Kickstarter backers.\\r\\n\\r\\n**Lesson learned: Really, really investigate shipping speeds vs. cost. The cheapest rate might be ridiculously slow.**\\r\\n\\r\\n---\\r\\n\\r\\nAfter 1.5 years of living in Toronto (sheesh, time flies), I\\u2019m finally getting my logistics nailed down for sending books. I keep wondering whether it would be better if I went all digital (like most courses online), since I\\u2019d save myself a lot of time and money with designing and shipping\\u2026 but it truly is nice to have a real book and be able to share something physical with my readers.\\r\\n\\r\\nThanks everyone! If you have any questions about writing a book, leave me a comment below.\", \"id\": \"a3a5b91d-5e3b-45f9-95ae-5be3e4013929\"}]", "date": "2018-01-23T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2018/fba.png", "categories": [2]}}, {"model": "blog.postpage", "pk": 17, "fields": {"excerpt": "I have about 45 of my original Hello Web App printing run left so I'm doing a mini-giveaway!", "featured": false, "body": "[{\"type\": \"paragraph\", \"value\": \"Hello Web App is on its second printing run, and for the reprint, I updated the text for Django 1.8 (which changed how the *urls.py* file is formatted) and fixed up some minor details in text and design.\\r\\n\\r\\nI have about 45 of the original printing run left so I'm doing a mini-giveaway!\\r\\n\\r\\nIdeally I'd like to give these to community organizations. I'm happy to give a license for the eBooks along with the paperbacks (so you'll also get the up-to-date digital version of the book). You can also use this reference for updating from Django 1.7 to 1.8 to use with the paperbacks: [https://hellowebapp.com/migrate/](https://hellowebapp.com/migrate/)\\r\\n\\r\\nMinimum \\\"order\\\" of 5 please! I'll cover shipping as thanks for taking these off my hands. :)\\r\\n\\r\\nEmail me tracy@hellowebapp.com if you're interested!\\r\\n\\r\\n**All books have been given away, sorry I can't send more!**\", \"id\": \"9548c237-165f-4888-8233-026fc0e36e5e\"}]", "date": "2016-05-13T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/5/7/shipments.jpeg", "categories": [8]}}, {"model": "blog.postpage", "pk": 18, "fields": {"excerpt": "The new Hello Web App just finished its Kickstarter campaign making over 200% of goal! Thank you so much to everyone who backed the campaign, shared it with friends and family, and supported the re-release of my first book.", "featured": true, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"caption video\\\" style=\\\"padding-bottom: 50%;\\\">\\r\\n    <iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/l8QgJGuq8_4\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen=\\\"allowfullscreen\\\"></iframe>\\r\\n    <figcaption>Video thank you!</figcaption>\\r\\n</figure>\", \"id\": \"2704297e-52fa-44dd-b0dd-bae43907394b\"}, {\"type\": \"paragraph\", \"value\": \"The new _[Hello Web App](https://hellowebbooks.com/learn-django)_ just finished its [Kickstarter campaign](https://www.kickstarter.com/projects/1868398473/hello-web-app-20-build-your-first-web-app-with-dja/) making over 200% of goal!\", \"id\": \"30e4fdeb-6b54-4579-9f81-d23656188758\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <a href=\\\"https://www.kickstarter.com/projects/1868398473/hello-web-app-20-build-your-first-web-app-with-dja\\\"><img src=\\\"/static/images/blog/2018/03/ks.png\\\" alt=\\\"Hello Web App 2.0 on Kickstarter\\\"/></a>\\r\\n    <figcaption>Super duper awesome.</figcaption>\\r\\n</figure>\", \"id\": \"8fee5100-e8db-4fda-82f7-4acf27ed26bb\"}, {\"type\": \"paragraph\", \"value\": \"Thank you _so much_ to everyone who backed the campaign, shared it with friends and family, and supported the re-release of my first book.\\r\\n\\r\\nThe files have been at the printer for awhile already, so I should be getting the paperbacks soon to send out to everyone. I'm also finishing up the videos and will be releasing the digital packages super soon.\\r\\n\\r\\nThank you again! Super excited to get this out. \\ud83c\\udf89\", \"id\": \"d43e1a65-0121-4bcc-aecd-6ec9fb2b2ff8\"}]", "date": "2018-03-31T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2018/03/ks.png", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 19, "fields": {"excerpt": "The first book I wrote was Hello Web App, teaching web app development using Python and Django. It's since been read by thousands of readers around the world, and I'm super excited to announce a new edition of the book, fundraising on Kickstarter!", "featured": true, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <a href=\\\"https://www.kickstarter.com/projects/1868398473/hello-web-app-20-build-your-first-web-app-with-dja\\\"><img src=\\\"/static/images/blog/2018/ks.png\\\" alt=\\\"Hello Web App 2.0 on Kickstarter\\\"/></a>\\r\\n    <figcaption>Hello Web App on Kickstarter \\u2014 go back the campaign!</figcaption>\\r\\n</figure>\", \"id\": \"825920a0-fa34-4942-b7a6-87c413cbcb58\"}, {\"type\": \"paragraph\", \"value\": \"The first book I wrote was _Hello Web App_, teaching web app development using Python and Django. It's since been read by thousands of readers around the world, and I'm super excited to announce a new edition of the book, fundraising on Kickstarter!\\r\\n\\r\\n[https://www.kickstarter.com/projects/1868398473/hello-web-app-20-build-your-first-web-app-with-dja](https://www.kickstarter.com/projects/1868398473/hello-web-app-20-build-your-first-web-app-with-dja)\\r\\n\\r\\nSome of the big changes:\\r\\n\\r\\n* The books are now packaged together as a unit, no longer selling them individually.\\r\\n* The content has been updated to Python 3 + Django 2.0.\\r\\n* The videos are getting a complete revamp.\\r\\n* Various bits of pieces of the content has been updated as well.\\r\\n* The Kindle edition has some snazzier graphics.\\r\\n\\r\\nI love Python and Django because I find them way simpler than Javascript to launch web apps \\u2014 Python is easier for me to read and parse and Django includes most of the parts you need for a web app (with login, registration, etc) by default. It's been a joy working with these two technologies over the years (especially since I'm a designer with no computer science background).\\r\\n\\r\\nIf you've been curious about working with Python or creating your own web app from scratch, I wrote this book for you. Any help or shares you can give are super appreciated!\\r\\n\\r\\n**Kickstarter campaign, products will start shipping in April:\\r\\n[https://www.kickstarter.com/projects/1868398473/hello-web-app-20-build-your-first-web-app-with-dja](https://www.kickstarter.com/projects/1868398473/hello-web-app-20-build-your-first-web-app-with-dja)**\\r\\n\\r\\nThanks everyone, I hope you share and back!\", \"id\": \"04c71483-783a-41c5-9465-ba2824caa76d\"}]", "date": "2018-03-01T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2018/ks.png", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 20, "fields": {"excerpt": "Hello Web App (the original book) has been updated! The changes are fairly minor (no worries if you have the old paperback, which is still completely usable). With Django 1.8 and 1.9, there were a few things I needed to update in the content as well as fix some typos and formatting issues with the text.", "featured": false, "body": "[{\"type\": \"paragraph\", \"value\": \"Hello Web App (the original book) has been updated!\\r\\n\\r\\nThe changes are fairly minor (no worries if you have the old paperback, which is still completely usable). With Django 1.8 and 1.9, there were a few things I needed to update in the content as well as fix some typos and formatting issues with the text.\\r\\n\\r\\nFull list of changes:\\r\\n\\r\\n* The registration chapter has been split in two, between adding registration and then associating users with objects. The chapter was giant before so this makes it more managable.\\r\\n* Screenshots of the admin have been updated to reflect the new Django 1.9 styles.\\r\\n* The few minor typos have been fixed.\\r\\n* A few recommendations in the \\\"Moving Forward\\\" chapter has been added, most notably recommending the Django Girls tutorial as well as now mentioning *Hello Web App: Intermediate Concepts*.\\r\\n* Template code has been reformatted for better readability.\\r\\n* *base.html* has been moved from its own directory to in the main templates directory.\\r\\n* Updated the version of *django-registration-redux* that we use to 1.3.\\r\\n* Introduction has been updated.\\r\\n\\r\\nAdditionally, the code repo on GitHub has been updated to reflect the new version of the book as well: [https://github.com/hellowebapp/hellowebapp-code](https://github.com/hellowebapp/hellowebapp-code)\\r\\n\\r\\nYou should be able to download the new version of the files if you bought on Gumroad or through Leanpub. All Kickstarter backers have been messaged a link to download the new files as well.\\r\\n\\r\\nThanks everyone!\", \"id\": \"46454b8e-ec15-4260-a9d0-3c775436cc6f\"}]", "date": "2016-01-26T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2016/1/26/interior.png", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 21, "fields": {"excerpt": "After a year+ (oy) and thousands of hours of work, Hello Web App v1.0 has now been released. Yay!", "featured": false, "body": "[{\"type\": \"paragraph\", \"value\": \"After a year+ (oy) and thousands of hours of work, Hello Web App v1.0 has now been released. Yay!\\r\\n\\r\\nYou can order your copies from Gumroad ([http://gumroad.com/limedaring](http://gumroad.com/limedaring)), Amazon ([http://amzn.to/1yLsHFH](http://amzn.to/1yLsHFH)), or Leanpub ([https://leanpub.com/hellowebapp/](https://leanpub.com/hellowebapp/)).\\r\\n\\r\\nFYI Amazon is showing the paperback book as being out of stock. I have been fighting with their automated system but they still didn't order enough. It should be back in stock by the end of the week, and I encourage you to order today even though it's out of stock so Amazon will learn to order more from me at a time. Gumroad paperback orders will be shipped by yours truly on Wednesday.\\r\\n\\r\\nI am so excited that the book is finally live! Would love any feedback you have (and Amazon reviews too, of course.)\\r\\n\\r\\nKeep an eye out on the blog, I'll be writing posts on:\\r\\n\\r\\n* **Kickstarter:** Marketing, breakdown of orders, what I did well and what I regret.\\r\\n* **Marketing the book:** Overview of the pre-order campaign, payment breakdown from the three platforms I launched on, where I shared the book, and how well the pre-order campaign went overall.\\r\\n* **Writing the book:** How I wrote the book, platforms I used and platforms I wish I didn't, why I used Markdown.\\r\\n* Design of the book:** Overview of taking my Markdown files and creating the print paperback and eBooks.\\r\\n\\r\\nLots of explanations and shiny graphs coming up!\", \"id\": \"8549a1fa-c575-474a-8e34-f300ebc915b9\"}]", "date": "2015-05-04T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/5/7/hellowebapp1.jpeg", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 22, "fields": {"excerpt": "I'm ridiculously excited to announce that my second book, Hello Web App: Intermediate Concepts, launches to the public today!", "featured": true, "body": "[{\"type\": \"paragraph\", \"value\": \"I wrote *[Hello Web App](/original/)* (by which I mean the original book \\u2014 I know I made the titles a little confusing) to teach basic web app programming to people who were more visually-oriented or had a web background. I deliberately kept the book very short because I wanted it to be non-intimidating, so it has the bare-minimum you need to launch a working app: a website, login, a database, basic browse pages and object pages. Just enough to launch something.\\r\\n\\r\\nOf course, web apps usually end up needing more components, like payments, user-uploaded images, and more. *Hello Web App: Intermediate Concepts* helps you build more complex features onto your app, as well as teaching a bit of theory (like proper database design).\", \"id\": \"15cb497e-8e41-4024-9b3e-f401e2ebb66b\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/12/7/2.jpg\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>The full Hello Web App set.</figcaption>\\r\\n</figure>\", \"id\": \"1058f39e-6d36-4088-bd73-506a8dd12203\"}, {\"type\": \"paragraph\", \"value\": \"You can buy *Hello Web App: Intermediate Concepts* on the [order page](/order/), or on [Amazon](http://amzn.to/1lsXlxL) or [Leanpub](https://leanpub.com/hellowebapp-intermediate-concepts).\\r\\n\\r\\nThanks to everyone who backed the [Kickstarter campaign](http://kickstarter.com/projects/1868398473/hello-web-app-intermediate-concepts) \\u2014 without you, this wouldn't have been possible.\\r\\n\\r\\nSo excited to finally have this book out!\", \"id\": \"c5265a34-2da6-4189-9d6b-8ce3035f22d6\"}]", "date": "2015-12-07T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/12/7/1.jpg", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 23, "fields": {"excerpt": "Woke up this morning to Hello Web App: Intermediate Concepts being featured on Product Hunt Books today!", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <a href=\\\"https://www.producthunt.com/books/hello-web-app-intermediate-concepts\\\"><img src=\\\"/static/images/blog/2016/1/25/product-hunt.jpg\\\" alt=\\\"\\\"/></a>\\r\\n</figure>\", \"id\": \"0ed7d010-2f6a-40df-8946-79e0abfe65a2\"}, {\"type\": \"paragraph\", \"value\": \"Woke up this morning to Hello Web App: Intermediate Concepts being featured on\\r\\nProduct Hunt Books today!\\r\\n\\r\\n[https://www.producthunt.com/books/hello-web-app-intermediate-concepts](https://www.producthunt.com/books/hello-web-app-intermediate-concepts)\\r\\n\\r\\nWould appreciate any and all \\\"upvotes\\\" that you can spare. I'm working on updating the description of the book now with the Product Hunt people. :)\", \"id\": \"5e8f7155-7e2a-4f1c-a41e-d1faf57a841a\"}]", "date": "2016-01-25T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2016/1/25/product-hunt.jpg", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 24, "fields": {"excerpt": "Hello Web App is on Product Hunt today, check it out! Product Hunt, if you're unaware, is a community celebrating new products and they're incredible in sending a ton of traffic and new users. It's a great place to find awesome new things.", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/4/9/hello-web-app-product-hunt.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Hey hey there we are!</figcaption>\\r\\n</figure>\", \"id\": \"4258aa30-1dda-4e76-b88f-4711d9b448b3\"}, {\"type\": \"paragraph\", \"value\": \"[Hello Web App is on Product Hunt today, check it out!](http://www.producthunt.com/posts/hello-web-app)\\r\\n\\r\\n[Product Hunt](http://producthunt.com/), if you're unaware, is a community celebrating new products and they're incredible in sending a ton of traffic and new users. It's a great place to find awesome new things, so it's an honor to be up for voting today. [If you get a chance, please check out the discussion too!](http://www.producthunt.com/posts/hello-web-app)\", \"id\": \"95ac0f71-9257-43fe-a1cf-a45942d1410a\"}]", "date": "2015-04-09T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/4/9/hello-web-app-product-hunt.png", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 25, "fields": {"excerpt": "Happy days! The online version of Hello Web App is officially online to read.", "featured": false, "body": "[{\"type\": \"paragraph\", \"value\": \"As some folks have noticed, I said I was going to only [keep Hello Web App up to read online for free](https://hellowebbooks.com/news/hello-web-app-online/) during the [Hello Web Design Kickstarter](https://www.kickstarter.com/projects/1868398473/hello-web-design-design-basics-for-non-designers)... and then I didn't take it down. I was already leaning towards just keeping it online forever anyways, and then I got overwhelmed with HWD work, so...\\r\\n\\r\\n...it's official, [Hello Web App (the original) will stay online to read for free!](https://hellowebbooks.com/tutorial/)\\r\\n\\r\\nAt some point (after [Hello Web Design](https://hellowebbooks.com/learn-design/) is done) I'm going to make a bunch of updates to the book, mainly ensuring it works with Python 3 and the latest versions of Django. I'll also reflect those updates on the online version. [Hello Web App will also continue to be sold](https://hellowebbooks.com/order/) as an eBook bundle, paperback, or video package for those who prefer the designed or paperback versions of the book (or want to support my work, thank you thank you.)\\r\\n\\r\\n(Don't forget that [Hello Web App: Intermediate Concepts](https://hellowebbooks.com/django-intermediate-concepts/) [can also be ordered!](https://hellowebbooks.com/order/))\\r\\n\\r\\nThere you have it. Enjoy Hello Web App, and prepare yourself for a bunch of Hello Web Design annoucements soon!\", \"id\": \"e6ac7100-2ebf-4c79-8f3a-12bc96da7717\"}]", "date": "2017-08-03T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2017/8/tutorial.png", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 26, "fields": {"excerpt": "This is a quick note that Hello Web App is back in stock! The full story of the hullabaloo is coming soon (ships from China, remote packaging assistants, usps.com woes, oh my!) But in the meanwhile, if you were holding back on ordering Hello Web App, now's the time \u2014 new paperback orders will be fulfilled and shipped within a week!", "featured": false, "body": "[{\"type\": \"paragraph\", \"value\": \"This is a quick note that Hello Web App is back in stock! The full story of the hullabaloo is coming soon (ships from China, remote packaging assistants, usps.com woes, oh my!) But in the meanwhile, if you were holding back on ordering Hello Web App, now's the time \\u2014 __new paperback orders will be fulfilled and shipped within a week!__\", \"id\": \"f23f0892-7851-4b2f-8bc5-6c4d0f40e8ef\"}, {\"type\": \"html\", \"value\": \"<a href=\\\"https://hellowebapp.com/order\\\" class=\\\"btn btn-primary btn-lg\\\">Order Hello Web App Here</a>\", \"id\": \"cb3d9192-6232-4a36-9648-9873c1583e2d\"}]", "date": "2015-06-08T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/6/8/hellowebapp3.jpeg", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 27, "fields": {"excerpt": "I have had so much fun with Hello Web App over the last couple of years, and after teaching beginner web app development for so long, I've started thinking about teaching beginner design skills. I love being a generalist with design, development, marketing, and sales skills, and I love helping others learn just enough to be dangerous. After a year of giving my Design for Non-Designers talk around the world, I'm now working on a book!", "featured": true, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <a href=\\\"https://www.kickstarter.com/projects/1868398473/hello-web-design-design-basics-for-non-designers/\\\"><img src=\\\"/static/images/blog/2017/1/hwd-ks.jpg\\\" alt=\\\"\\\"/></a>\\r\\n    <figcaption>Still from the fabulous Kickstarter video!</figcaption>\\r\\n</figure>\", \"id\": \"a3d8aaa3-3531-4038-85ed-f21c385ea73a\"}, {\"type\": \"paragraph\", \"value\": \"I have had so much fun with Hello Web App over the last couple of years, and after teaching beginner web app development for so long, I've started thinking about teaching beginner design skills.\\r\\n\\r\\nI love being a generalist with design, development, marketing, and sales skills, and I love helping others learn just enough to be dangerous. After a year of giving my [Design for Non-Designers](https://www.youtube.com/watch?v=lsPrhA_m6ss) talk around the world, I'm now working on a book!\\r\\n\\r\\nTopics in the book will include:\\r\\n\\r\\n* Visual web design and cutting down on clutter. \\r\\n* Design principles (like color and layout) and shortcuts you can use.\\r\\n* Writing and perfecting content. \\r\\n* User experience and what it means. \\r\\n* Training your design eye. \\r\\n* Best web resources for learning more. \\r\\n\\r\\nHello Web Design leans on common website patterns as examples, but everything you'll learn will apply to other kinds of design too.\\r\\n\\r\\nCheck out the Kickstarter campaign here:  \\r\\n[https://www.kickstarter.com/projects/1868398473/hello-web-design-design-basics-for-non-designers/](https://www.kickstarter.com/projects/1868398473/hello-web-design-design-basics-for-non-designers/)\", \"id\": \"63b7e563-2208-4698-8383-71eca52ea8e7\"}, {\"type\": \"html\", \"value\": \"<iframe width=\\\"480\\\" height=\\\"270\\\" src=\\\"https://www.kickstarter.com/projects/1868398473/hello-web-design-design-basics-for-non-designers/widget/video.html\\\" frameborder=\\\"0\\\" scrolling=\\\"no\\\"> </iframe>\", \"id\": \"08894e34-d4e0-408e-bc1b-6f6d60e6c469\"}, {\"type\": \"paragraph\", \"value\": \"Eventually, Hello Web Design will also be sold with Hello Web App, creating one awesome \\\"create a web app from scratch\\\" bundle.\\r\\n\\r\\nThanks everyone, I hope you support!\", \"id\": \"3f15a3c5-b06c-4d36-a2ff-b0d8c4dc3053\"}]", "date": "2017-01-21T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2017/1/hwd-ks.jpg", "categories": [1, 9]}}, {"model": "blog.postpage", "pk": 28, "fields": {"excerpt": "I'm so excited to announce that Hello Web Design is out today! I've been thinking about this book for at least two years. These thoughts lead to a conference talk I gave at many conferences, including...", "featured": true, "body": "[{\"type\": \"paragraph\", \"value\": \"**I'm so excited to announce that *[Hello Web Design](https://hellowebbooks.com/learn-design)* is out today!**\\r\\n\\r\\nI've been thinking about this book for at least two years. With [Hello Web App](https://hellowebbooks.com/learn-django), I taught beginner programming the way I thought it should be taught to those without programming experience. After thousands of orders and readers around the world, naturally I started thinking about **how I could teach design fundamentals and shortcuts to folks without design experience**.\\r\\n\\r\\nThese thoughts lead to a conference talk I gave at many conferences, including [Mozilla's View Source Conference in Berlin 2016](https://www.youtube.com/watch?v=lsPrhA_m6ss) and [O'Reilly's Fluent Conference 2016](https://www.youtube.com/watch?v=IyHTYmSYJz8).\", \"id\": \"ce7a4378-9660-4df2-9964-6e57f5f41a83\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption video\\\">\\r\\n    <iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/lsPrhA_m6ss\\\" frameborder=\\\"0\\\" allowfullscreen=\\\"allowfullscreen\\\"></iframe>\\r\\n    <figcaption>My conference talk at Mozilla's View Source</figcaption>\\r\\n</figure>\", \"id\": \"1a9016a4-d7cf-4828-a084-94e406fdcb4f\"}, {\"type\": \"paragraph\", \"value\": \"After raising almost [$23,000 on Kickstarter last January](https://www.kickstarter.com/projects/1868398473/hello-web-design-design-basics-for-non-designers/), I've been hard at work writing, designing, and publishing my third book. And you can buy it today!\\r\\n\\r\\n**Three package options are available:**\", \"id\": \"ff028d62-d8a4-4064-af59-ff0903eb6511\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <div class=\\\"row\\\" id=\\\"hwd\\\" name=\\\"hwd\\\">\\r\\n        <div class=\\\"col-md-4 text-center\\\">\\r\\n            <a href=\\\"https://gum.co/hwd-pb\\\">\\r\\n                <img src=\\\"https://hellowebbooks.com/static/images/products/hwd-books.jpg\\\" alt=\\\"Hello Web Design paperback package\\\" style=\\\"margin-bottom:10px;\\\"/>\\r\\n            </a>\\r\\n            <h3>Paperback Package</h3>\\r\\n            <p>The eBook in three formats (PDF, .mobi, and .ePub) as well as the gorgeous paperback book.</p>\\r\\n            <a href=\\\"https://gum.co/hwd-pb\\\" class=\\\"btn btn-secondary buy-button\\\" data-title=\\\"Hello Web Design Paperback\\\" data-price=\\\"29.95\\\">Buy for $29.95</a>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 text-center\\\">\\r\\n            <a href=\\\"https://gum.co/hwd-videos\\\">\\r\\n                <img src=\\\"https://hellowebbooks.com/static/images/products/hwd-videos.jpg\\\" alt=\\\"Hello Web Design video package\\\" style=\\\"margin-bottom:10px;\\\"/>\\r\\n            </a>\\r\\n            <h3>Video Package</h3>\\r\\n            <p>All eBook files <em>and</em> 17 screencasts and videos, walking you through every chapter of the book.</p>\\r\\n            <a href=\\\"https://gum.co/hwd-videos\\\" class=\\\"btn btn-primary buy-button\\\" data-title=\\\"Hello Web Design Videos\\\" data-price=\\\"79\\\">Buy for $79</a>\\r\\n            <p><small>Add the paperback for $10 + shipping</small></p>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 text-center\\\">\\r\\n            <a href=\\\"https://gum.co/hwd-ebook\\\">\\r\\n                <img src=\\\"https://hellowebbooks.com/static/images/products/hwd-ebook.jpg\\\" alt=\\\"Hello Web Design ebook package\\\" style=\\\"margin-bottom:10px;\\\"/>\\r\\n            </a>\\r\\n            <h3>eBook Package</h3>\\r\\n            <p>The eBook in three formats (custom designed PDF, .mobi/Kindle, and .ePub).</p>\\r\\n            <a href=\\\"https://gum.co/hwd-ebook\\\" class=\\\"btn btn-secondary buy-button\\\" data-title=\\\"Hello Web Design eBooks\\\" data-price=\\\"14.95\\\">Buy for $14.95</a>\\r\\n        </div>\\r\\n    </div>\\r\\n</figure>\", \"id\": \"d160cb89-f187-4173-8493-339e9af4ce53\"}, {\"type\": \"paragraph\", \"value\": \"You can read more about [Hello Web Design here](https://hellowebbooks.com/learn-design).\\r\\n\\r\\nThanks for everyone who has supported me in writing this book &#8212; it's been a long journey and I am so excited to bring this book to the world!\", \"id\": \"3fc81b08-97a5-40f2-85cd-0d763cb6b8d4\"}]", "date": "2017-11-07T08:00:00Z", "header_image": null, "header_image_link": "/images/heros/hwd.jpg", "categories": [1, 9]}}, {"model": "blog.postpage", "pk": 29, "fields": {"excerpt": "Hello Web Design is on Product Hunt today, check it out! It's a great place to find awesome new things, so it's an honor to be up for voting today.", "featured": false, "body": "[{\"type\": \"paragraph\", \"value\": \"[Hello Web Design is on Product Hunt today, check it out!](http://www.producthunt.com/posts/hello-web-design)\", \"id\": \"6897feef-ea0b-42f9-9312-8fb345c6170c\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <a href=\\\"http://www.producthunt.com/posts/hello-web-design\\\"><img src=\\\"/static/images/blog/2018/product-hunt.jpg\\\" alt=\\\"\\\"/></a>\\r\\n    <figcaption>Woohoo!</figcaption>\\r\\n</figure>\", \"id\": \"ad5804f2-00b7-4c69-b196-8cab88c1c48a\"}, {\"type\": \"paragraph\", \"value\": \"[Product Hunt](http://producthunt.com/) is a community celebrating new products and they're incredible in sending a ton of traffic and new users. It's a great place to find awesome new things, so it's an honor to be up for voting today. [If you get a chance, please check out the discussion too!](http://www.producthunt.com/posts/hello-web-design)\", \"id\": \"d98490f5-62f8-46b2-b292-9584aa91ab60\"}]", "date": "2018-01-18T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2018/product-hunt.jpg", "categories": [1, 9]}}, {"model": "blog.postpage", "pk": 30, "fields": {"excerpt": "On May 4th, my book Hello Web App was released. Since then, hundreds of people used it to learn how to build web apps using Python and Django. Today I share a breakdown of all my sales numbers across all the platforms I used, and some of the lessons I learned:", "featured": true, "body": "[{\"type\": \"paragraph\", \"value\": \"__On May 4th, my book [Hello Web App](https://hellowebapp.com/) was released. Since then, hundreds of people used it to learn how to build web apps using Python and Django.__\\r\\n\\r\\n__Today I share a breakdown of all my sales numbers across all the platforms I used, and some of the lessons I learned:__\\r\\n\\r\\n* Sales by package: eBook vs Physical Book vs Complete Video Package\\r\\n* Sales by platform: Amazon vs Gumroad vs Leanpub\\r\\n* Sales by news aggregator: Reddit vs Hacker News vs Product Hunt\\r\\n\\r\\nFirst, a bit of background \\u2014 [I taught myself how to code](http://www.limedaring.com/articles/im-a-designer-who-learned-django-and-launched-her-first-webapp-in-6-weeks/) and in the process I was constantly annoyed at tutorials. Once I finally figured a step out, I'd think, \\\"why the hell do they teach it this way when they could teach it that way?\\\" After four years, not much changed in the Django tutorial eco-system, so I decided to write my ideal tutorial myself. A tutorial that teaches that way.\\r\\n\\r\\n__I made $4,612.38 in pre-orders plus the launch day__ (not including the Kickstarter, see below). My ideal readers are folks who are thinking about building web apps, but haven't learned how yet \\u2014 a fairly small amount of people. So that number might not be as large as other self-published authors who post their stats, but I am still very, very happy with how the book is doing.\\r\\n\\r\\n## Being real about the process and my results\\r\\n\\r\\nAll of my projects (my startup and this book) stem from a love of helping and supporting folks working for themselves. I started [WeddingLovely](http://weddinglovely.com/) to help those who run wedding-related local/small-businesses, and I wrote Hello Web App so I can help people learn how to launch web apps and build their own online businesses.\\r\\n\\r\\n__I'm publishing these results because I'd love to support those who are thinking of writing their own book__ \\u2014 I've learned a lot and this process was super enjoyable, and I hope these notes help others make the leap into authorship.\\r\\n\\r\\n## Note about the Kickstarter campaign\", \"id\": \"cd93bb24-48d9-4fb6-9812-5c75da8b2866\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/7/kickstarter.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"39d577bc-f1bd-46c3-86bb-59abd59befea\"}, {\"type\": \"paragraph\", \"value\": \"I wrote a little bit about the Kickstarter process:\\r\\n\\r\\n* [Hello Web App's Kickstarter campaign: How I did it, what I regret.](https://hellowebapp.com/news/reviewing-hello-web-apps-kickstarter-campaign)\\r\\n* [Economics of self-publishing a book via Kickstarter: Hello Web App's story](https://hellowebapp.com/news/economics-of-self-publishing-on-kickstarter)\\r\\n\\r\\nHowever, other than some revenue runway, the biggest contribution that the Kickstarter campaign had were emails of interested buyers. __By the time I was ready to launch, my email list for Hello Web App was around 800 potential readers__, which definitely contributed to the pre-order and launch day sales. \\r\\n\\r\\n## Breakdown of pricing and sales numbers\\r\\n\\r\\n### Pricing\\r\\n\\r\\nI ended up selling Hello Web App on three different platforms with a few different pricing tiers:\\r\\n\\r\\n* Gumroad\\r\\n  * __$79__ videos + eBook (.mobi, .ePub, and PDF) package\\r\\n    * $10 option to add the paperback book (plus shipping for international sales)\\r\\n  * __$29.95__ paperback + eBook package (plus shipping for international)\\r\\n  * __$14.95__ eBook package\\r\\n* Amazon\\r\\n  * __$19.95__ Paperback book\\r\\n  * __$9.95__ Kindle eBook\\r\\n* Leanpub\\r\\n  * __$9.95__ minimum price, $19.95 suggested price (all Leanpub formatted files.)\\r\\n\\r\\nA lot of advice articles for self-publishers recommend choosing Amazon or Gumroad, not doing both \\u2014 since selling on Amazon is going to require a lower price, and you can sell less books for more money on Gumroad. I decided to do both for this release just to test it out, and the jury is still out on whether that was a good decision or not. It certainly means I have to update and track a bunch of different platforms.\\r\\n\\r\\n### Revenue\\r\\n\\r\\nOverall, I earned in pre-orders and launch day:\\r\\n\\r\\n* __Gumroad: $3,618.74__\\r\\n  * Complete package: $1,788\\r\\n  * Paperback package: $1,348.34\\r\\n  * eBook package: $478.40\\r\\n* __Amazon: $993.64__\\r\\n  * Kindle: $230.34\\r\\n  * Paperbacks: $763.30\\r\\n* __Leanpub: $0__ (unfortunately since you can't sell pre-sell books.) \\r\\n\\r\\nWhich comes to $4,612.38 in total of pre-orders.\\r\\n\\r\\n## Breakdown\\r\\n\\r\\n### Gumroad\", \"id\": \"4727ef83-98c9-4877-82e4-df89fa6c1848\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/7/gumroad.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Analytics on Gumroad, from the creation of the pre-order page through launch day.</figcaption>\\r\\n</figure>\", \"id\": \"7ab81ae3-f937-46d5-bc00-1faa7b0df002\"}, {\"type\": \"paragraph\", \"value\": \"__[Gumroad](http://gumroad.com/) is a platform for selling products, and their small fee (5% + $0.25) is their biggest advantage.__ My profit from selling my products on Gumroad is literally 10x than it is on Amazon. Of course, Gumroad doesn't sell your products for you like Amazon does, so marketing is up to you.\\r\\n\\r\\nThe giant spike in orders a few weeks into the campaign is [my launch on Product Hunt (more on that below).](http://www.producthunt.com/tech/hello-web-app)\\r\\n\\r\\n__Overall, I've had nothing but good experiences using Gumroad to sell my book__, and they've made selling a book even easier by adding features to sell physical products too, so I can easily sell both the digital and paperback versions of Hello Web App on one platform.\\r\\n\\r\\n### Leanpub\\r\\n\\r\\nI love [Leanpub](http://leanpub.com/) \\u2014 their platform for writing and creating eBooks is simply superb. In particular, [they have a great attitude towards creating your book using their platform and reselling](https://leanpub.com/help/author_faq):\\r\\n\\r\\n> Leanpub authors can sell their books wherever they want. In particular, we encourage all Leanpub authors to also sell their books on Amazon KDP and Apple once the books are done... We want you to use our store in addition to any others that you use because it's better, not because you're forced to.\\r\\n\\r\\nInstead of struggling through .mobi and .epub creation on my own or paying someone to make the files for me from my Markdown files (which sounds easy, but really, really wasn't), I used Leanpub to create my eBook files that I'm selling on Amazon and Gumroad (minus the PDF \\u2014 Gumroad has my design-y one.)\\r\\n\\r\\n__Unfortunately Leanpub doesn't do \\\"pre-orders\\\" and instead allows visitors to indicate they're interested in the book without taking payment information.__ I've ended up selling ~$100 in orders since launch, but none day-of so I'm not including those numbers here.\\r\\n\\r\\n### Amazon Direct Publishing (Amazon Kindle)\", \"id\": \"78fa2060-b950-4d0d-831a-d542243b51e4\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/7/amazon.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"f8f1151f-6542-402c-801f-550260a41c5e\"}, {\"type\": \"paragraph\", \"value\": \"33 pre-orders feels kind of low, and at $6.98 royalties per book, this lead to $230.34 revenue through Amazon Direct Publishing.\\r\\n\\r\\n### Amazon Advantage\\r\\n\\r\\n__[Amazon Advantage](http://advantage.amazon.com/) (the interface for selling physical products through Amazon) is one of the worst interfaces I've ever used.__ Setting up the product listing, getting analytics from sales, getting orders from their automatic interface, trying to set up pre-orders \\u2014 it's given me nothing but pain. Noticed how this is the only section that does not have a graph? I can't even figure out how to display a nice graph to show you my revenue. Ugh.\\r\\n\\r\\nAmazon Advantage also has similar royalties to Kindle Direct Publishing: __I keep only 45% of my sale price, meaning when I sell my paperback book for $19.95, I get $8.98.__ Each book costs me $3.60 to produce plus I also have to pay to ship the books to Amazon. So I keep very little of the sale price of the paperback through Amazon.\\r\\n\\r\\nThe number of pre-orders for Hello Web App is a little hard to calculate since there were a few books I bought through Amazon myself, but essentially __I made $763.30 in revenue from the paperback book on Amazon__ (not counting some affiliate revenue I made), and my profit is that number minus shipping and printing costs. \\r\\n\\r\\n## Marketing\\r\\n\\r\\n### Product Hunt\\r\\n\\r\\nBy far, the best results on marketing was through [Product Hunt](http://www.producthunt.com/tech/hello-web-app).\", \"id\": \"1366777c-b275-4686-a960-f577b1420f00\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/7/producthunt.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\\r\\n\\r\\n<p>I didn't receive an astounding amount of traffic, but it still lead to a large chunk of the revenue from the pre-order:</p>\\r\\n\\r\\n<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/7/preorder.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>The Product Hunt launch day is highlighted.</figcaption>\\r\\n</figure>\\r\\n\\r\\n<p>About a 1,000 visits for 17 sales isn't that much, but the majority of the buyers bought the video package for $79, leading to the high revenue numbers for that day.</p>\\r\\n\\r\\n<h3>Hacker News</h3>\\r\\n\\r\\n<p><a href=\\\"https://news.ycombinator.com/item?id=9329942\\\">Got a few points on Hacker News</a>, nothing astounding. Probably since most of the readers on Hacker News already know the basics of web app development, so it's not the best audience.</p>\\r\\n\\r\\n<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/7/hackernews.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\\r\\n\\r\\n<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/7/hackernews2.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>16 points.</figcaption>\\r\\n</figure>\", \"id\": \"68ae5796-5ef8-4cfc-8684-8f08ebf86943\"}, {\"type\": \"paragraph\", \"value\": \"### Reddit\\r\\n\\r\\nThe second largest marketing boost was through various postings on [Reddit](http://reddit.com/), specifically [/r/learnprogramming](http://reddit.com/r/learnprogramming) and [/r/learnpython](http://reddit.com/r/learnpython). \\r\\n\\r\\n__I reached out to one of the mod's of /r/learnprogramming first, since I knew my post would come across as \\\"smarmy marketing\\\" and there was a good chance the post would be downvoted to oblivion.__ The mod warned that if the post got too many flags, it would be removed but I otherwise got the go-ahead. Note to others: self-posts (text posts) on Reddit with personal stories are best when posting your product \\u2014 directly linking to your product page will come across as too marketing-y and will be downvoted/removed.\", \"id\": \"03abce24-aa39-4d80-9e2d-f780896f7ccc\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/7/reddit.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>What I ended up posting to the /r/learnprogramming subreddit.</figcaption>\\r\\n</figure>\\r\\n\\r\\n<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/7/reddit2.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>About 1,000 page views overall over the days the post was at the top.</figcaption>\\r\\n</figure>\", \"id\": \"bf5c7195-8a49-4ca8-87d8-4c944932eec8\"}, {\"type\": \"paragraph\", \"value\": \"Still got a few comments accusing me of writing a bot to upvote my post, which have since been deleted (sigh).\\r\\n\\r\\n## Launch day until now\\r\\n\\r\\nSales have dropped off a fair bit:\", \"id\": \"8330f330-c793-4c32-bae2-647b49ac13a3\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/7/launch.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>This is total revenue through Gumroad over a period just longer than two months.</figcaption>\\r\\n    \\r\\n</figure>\\r\\n\\r\\n<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/7/launch2.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Kindle sales over the same period of time \\u2014 a bit over two months. Selling 1-2 per day.</figcaption>\\r\\n</figure>\", \"id\": \"7c9b8128-f134-40fb-91dd-7bbeeb5c12da\"}, {\"type\": \"paragraph\", \"value\": \"So, Hello Web App is definitely not paying the bills just yet.\\r\\n\\r\\n__Would I do it again? Definitely.__ The process of writing a book as a side project was surprisingly enjoyable. If I can write a few more books or improve the marketing of Hello Web App, it's possible I could support myself through writing. Not to mention the conference speaking, workshops, and travel benefits. For example, I just ran a workshop at DjangoCon EU in Wales and will be [speaking and workshopping at DjangoCon US](http://www.limedaring.com/speaking/) this September in Austin.\\r\\n\\r\\n__Overall: A nice chunk of change. Nothing mind-blowing. Worth it.__\\r\\n\\r\\nI'm considering \\\"Hello Web App: Intermediate Concepts\\\" or maybe \\\"Hello Web Design\\\" for engineers or \\\"Hello Startup\\\" as some next topics I could write about. Prefer one or have another idea? I'd love to hear your thoughts in the comments below!\\r\\n\\r\\n-------\\r\\n\\r\\nI have quite a few other articles about the Hello Web App design and production process that you might want to read:\\r\\n\\r\\n* [Hello Web App's Kickstarter campaign: How I did it, what I regret.](https://hellowebapp.com/news/reviewing-hello-web-apps-kickstarter-campaign)\\r\\n* [Economics of self-publishing a book via Kickstarter: Hello Web App's story](https://hellowebapp.com/news/economics-of-self-publishing-on-kickstarter)\\r\\n* [Designing and printing Hello Web App's PDF and paperback editions](https://hellowebapp.com/news/all-about-hello-web-apps-paperback-book-fulfillment)\\r\\n* [My adventures and advice on fulfilling orders for a printed self-published book](https://hellowebapp.com/news/my-adventures-and-advice-on-fulfilling-orders-for-a-printed-self-published-book)\\r\\n\\r\\nOf course, you should [buy Hello Web App](http://hellowebapp.com/order) if you're interested in learning web app development. You can download a sample of the book by signing up for the newsletter at the bottom of this page.\\r\\n\\r\\n[See more discussion about this post on Hacker News.](https://news.ycombinator.com/item?id=9847965)\\r\\n\\r\\nYou should follow me on Twitter for more fun self-publishing tidbits, startup whining, and dorkiness: [@limedaring](http://twitter.com/limedaring)\\r\\n\\r\\nThanks for reading!\", \"id\": \"ea8ec6df-28a5-48a2-828a-ae8bc67f8d7d\"}]", "date": "2015-07-07T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/7/7/banner.png", "categories": [2, 4, 8]}}, {"model": "blog.postpage", "pk": 31, "fields": {"excerpt": "When I first started learning Django, I used Kenneth Love's excellent Django video series. Kenneth now works at Treehouse as a Django instructor. For this chapter, I decided to pass the torch and let him tell you all about class-based views, as I know what an excellent instructor he is with this more complicated subject. Thank you Kenneth for your help!", "featured": false, "body": "[{\"type\": \"paragraph\", \"value\": \"> When I first started learning Django, I used Kenneth Love's excellent Django\\r\\n> video series. Kenneth now works at Treehouse as a Django\\r\\n> instructor. For this chapter, I decided to pass the torch and let him tell you\\r\\n> all about class-based views, as I know what an excellent instructor he is with\\r\\n> this more complicated subject. Thank you Kenneth for your help!\\r\\n\\r\\nAs you build more and more with Django, you'll find that your views start to\\r\\nlook very similar. For views that show a form, you create a blank form and then\\r\\nsend it to the template. When a view processes a form, again, you create the\\r\\nform, but this time you fill it with the submitted data. If the data is correct,\\r\\nyou create a model object or send an email. This is exhilarating the first time\\r\\nyou do it, but not so much the fiftieth.\\r\\n\\r\\nIn programming, we use classes to group together a bunch of related behaviors.\\r\\nThis sounds exactly like what we're doing with views: repeating the same\\r\\nbehavior over and over again. Django provides us with some built-in views\\r\\ncalled [generic class-based\\r\\nviews](https://docs.djangoproject.com/en/1.9/topics/class-based-views/), which\\r\\nyou'll often see mentioned as GCBVs. These views help us stop repeating our\\r\\nview code so much. Django also provides some ready-made classes for non-generic\\r\\nviews but we're going to focus on just the generic ones for now.\\r\\n\\r\\n## Introducing Template View \\r\\n\\r\\nThe simplest of the generic views is `TemplateView`. It just renders a template,\\r\\nbut also lets us provide an optional context dictionary. Let's see how we'd set\\r\\nthis up to render an \\\"About Us\\\" page.\\r\\n\\r\\n### Set up the URL\\r\\n\\r\\nWe register URLs for class-based views a little differently than we have for all\\r\\nof the function-based views we've done so far:\", \"id\": \"293380ec-8f17-44ba-a8c5-5dfccfcd563c\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">urls.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\nfrom collection import views\\r\\n\\r\\nurlpatterns = [\\r\\n    ...\\r\\n    # we're using a class-based view here!\\r\\n    url(r'^about-us/$', views.AboutUsView.as_view(), name='about_us'),\\r\\n</code></pre>\", \"id\": \"6d4f143d-d282-4e77-9ed2-ae0f3aa2e2d8\"}, {\"type\": \"paragraph\", \"value\": \"Instead of just using the name of the function, we'll call the `as_view()` method\\r\\nof our view. This method causes our view to act like a view. This means\\r\\nDjango will send the request to the view and expect the view to return a\\r\\nresponse of some sort, usually a rendered template. Other than using the\\r\\n`as_view()` method, though, our URL pattern is exactly the same as the ones\\r\\nwe've been using.\\r\\n\\r\\n### Set up the View\\r\\n\\r\\nBut what about the view itself? Class-based views have a lot of code under the\\r\\nhood and are sometimes a little hard to wrap your head around. `TemplateView` is\\r\\nprobably the easiest one to understand that does something useful. Let's write\\r\\nit and then I'll go back and explain what's going on.\", \"id\": \"44674d15-5d8f-4f44-a56b-c259f10ab14c\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">views.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\nfrom django.views.generic import TemplateView\\r\\n\\r\\nclass AboutUsView(TemplateView):\\r\\n    template_name = 'about_us.html'\\r\\n</code></pre>\\r\\n\\r\\n<p class=\\\"code-page\\\">about_us.html</p>\\r\\n<pre><code class=\\\"django\\\">\\r\\n{% extends 'base.html' %}\\r\\n{% block title %}About Us - {{ block.super }}{% endblock %}\\r\\n{% block content %}\\r\\n&lt;h1&gt;About Us&lt;/h1&gt;\\r\\n&lt;p&gt;Hi!&lt;/p&gt;\\r\\n{% endblock %}\\r\\n</code></pre>\", \"id\": \"3cfcd1a6-9de8-4fb4-a386-310aa91ebd6f\"}, {\"type\": \"paragraph\", \"value\": \"The first thing we do is import the `TemplateView` class. This class gives us all\\r\\nof the functionality we need for the view, including how to handle incoming\\r\\nrequests, render a template, and return the response. All of this comes from\\r\\nDjango, we don't have to write any of it ourselves. Since we don't need to do\\r\\nanything special, we just specify the `template_name` attribute which tells Django\\r\\nwhich template we'd like to use to render the view.\\r\\n\\r\\nOur template is a pretty standard one, too. We're extending the *base.html*\\r\\ntemplate and overriding a couple of blocks.\\r\\n\\r\\nIf we go to our URL at this point, we see the rendered template with our \\\"Hi!\\\"\\r\\nmessage.\", \"id\": \"d0306582-a493-4d8c-a266-0435ba2f44d9\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/12/4/class-based-view.png\\\" alt=\\\"\\\" style=\\\"border: 1px solid #e1e1e1;\\\" />\\r\\n    <figcaption>We're successfully using TemplateView!</figcaption>\\r\\n</figure>\", \"id\": \"15b32689-263f-4fdf-8fc9-762803648d4f\"}, {\"type\": \"paragraph\", \"value\": \"### Passing variables to the template\\r\\n\\r\\nWhat if we need to pass in a few variables to the template, though? Right now,\\r\\nwe're just rendering a template and don't have any special variables available\\r\\nto us. Let's use the `timezone` module from Django's `utils` package to find out if\\r\\nwe're currently in our business hours and use that to control a \\\"We're open!\\\" or\\r\\n\\\"We're closed!\\\" message. \\r\\n\\r\\nWe'll need to update our view a little for this:\", \"id\": \"7fe52e60-fbe3-4c2c-a30c-8fcfefbe11f1\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">views.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\nfrom django.utils.timezone import now\\r\\n\\r\\nclass AboutUsView(TemplateView):\\r\\n    template_name = 'about_us.html'\\r\\n\\r\\ndef get_context_data(self, **kwargs):\\r\\n    context = super(AboutUsView, self).get_context_data(**kwargs)\\r\\n    if now().weekday() &lt; 5 and 8 &lt; now().hour &lt; 18:\\r\\n        context['open'] = True\\r\\n    else:\\r\\n        context['open'] = False\\r\\n    return context\\r\\n</code></pre>\\r\\n\\r\\n<p class=\\\"code-page\\\">about_us.html</p>\\r\\n<pre><code class=\\\"django\\\">\\r\\n{% block content %}\\r\\n&lt;p&gt;Hi!&lt;/p&gt;\\r\\n\\r\\n{% if open %}\\r\\n&lt;p&gt;We are currently open!&lt;/p&gt;\\r\\n{% else %}\\r\\n&lt;p&gt;We are currently closed! Feel free to contact us!&lt;/p&gt;\\r\\n{% endif %}\\r\\n</code></pre>\", \"id\": \"095f4755-7357-479d-8183-df5e29d72d73\"}, {\"type\": \"paragraph\", \"value\": \"All of the generic class-based views have a method named `get_context_data` that generates the context dictionary that the view uses to render the template. In a function-based view, we do something like:\", \"id\": \"972f6424-82cd-4b59-9186-89950ae04c6f\"}, {\"type\": \"html\", \"value\": \"<pre><code class=\\\"python\\\">\\r\\nreturn render(request, 'about_us.html', {'open': True})\\r\\n</code></pre>\", \"id\": \"b7b03612-6223-4e4a-98c9-2c9e022f4253\"}, {\"type\": \"paragraph\", \"value\": \"And Django would use the `{'open': True}` dictionary when it renders the template.\\r\\n`get_context_data` creates that dictionary so to add custom values into the\\r\\ndictionary, we have to have our own version of the method.\\r\\n\\r\\n1. When we call `super()`, that tells Django to call the `get_context_data` method\\r\\nfrom the parent class, `TemplateView`, and get the dictionary from that class,\\r\\nwhich is empty by default. \\r\\n2. Then we check the current date and time to make sure it's not the weekend\\r\\n(Saturday is 5 and Sunday is 6), and that it's after 8:00am but before 6:00pm. \\r\\n3. If it is, we set the `\\\"open\\\"` key in the context dictionary to be `True`. \\r\\n4. Otherwise, we set it to `False`. \\r\\n5. Finally, we return the dictionary so Django can use it.\\r\\n\\r\\nNow, when we're writing our template, we have a new variable available to us\\r\\nnamed open; the same as the key name that we used in our dictionary!\\r\\n\\r\\n## Now for a FormView\\r\\n\\r\\nDjango provides a lot of other generic views for us to use, too. `CreateView` and\\r\\n`UpdateView`, for example, let us create and update model instances. We've already\\r\\ncreated a view to handle letting users contact us in Chapter 1, *Creating a\\r\\nContact Form and Working with Custom Forms*. Let's see about turning that\\r\\nfunction-based view into a class-based one.\", \"id\": \"9d9ba03c-4d51-4f35-b62e-5742112bb601\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">urls.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\nurlpatterns = [\\r\\n    ...\\r\\n    url(r'^contact/$', views.ContactView.as_view(), name='contact'),\\r\\n</code></pre>\", \"id\": \"ed4720c7-f8a5-4d41-b279-a2ea3f4dba8c\"}, {\"type\": \"paragraph\", \"value\": \"First, let's change our URL pattern so it points to our soon-to-be-created\\r\\n`ContactView`'s `as_view()` method. We don't have to change anything in our existing\\r\\nURL rule other than the view that's being pointed to.\\r\\n\\r\\nThe rest of our work will be done in *views.py*. We already have our form imported\\r\\nso we don't have to do anything there. We do need to import `FormView` though, the\\r\\ngeneric view to handle displaying and processing forms.\\r\\n\\r\\nMuch like when we first used `TemplateView`, we don't have to write too much code\\r\\nto get our view to work in a very basic manner. We need to make a new class and\\r\\nset a couple of attributes.\\r\\n\\r\\nThe beginning to our new view:\", \"id\": \"b0d6d8e4-c6a4-447f-b87f-02a7ebb9fd08\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">views.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\nfrom django.views.generic import FormView, TemplateView\\r\\n\\r\\nclass ContactView(FormView):\\r\\n    form_class = ContactForm\\r\\n    template_name = 'contact.html'\\r\\n</code></pre>\", \"id\": \"9337ef47-3a02-4532-93bd-b936d23d831b\"}, {\"type\": \"paragraph\", \"value\": \"We've set two attributes, `form_class` and `template_name`. Thankfully, most of the\\r\\nattributes for Django's class-based generic views are obviously named. The\\r\\n`form_class` attribute tells the view what form it should instantiate for the\\r\\nview. It'll create a blank instance of the form for GET requests and then a\\r\\nversion of the form with data filled in for POST requests.\\r\\n\\r\\nIf we look at our existing contact view, we can see that we're already doing\\r\\nthis ourselves by checking request.method!\\r\\n\\r\\nAnd the `template_name` attribute tells Django what template to render for the\\r\\nview. You might be wondering if we need to update the context to include the\\r\\nform. Django already does this for us and, by default, sends it to the template\\r\\nas the variable `form`. This is the variable we're already using in our template,\\r\\nso we don't have to change it at all.\\r\\n\\r\\nIf you refresh your Contact page now, you should see your form just like before.\\r\\nIf you submit the form, though, you'll get an error about a missing success URL.\\r\\nWe need to set one more attribute on our view.\\r\\n\\r\\nWe need to import the `reverse_lazy` function so we can specify the URL name\\r\\ninstead of the actual path. We can't use `reverse` because our views may be loaded\\r\\nby Django before the URLs are. Using this lazy version makes sure that Django\\r\\ndoesn't care which order the views and URLs are processed in. Now we need to use\\r\\nit in our view.\", \"id\": \"308efdff-bd2e-49c3-88e2-d587e863bee0\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">views.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\nfrom django.core.urlresolvers import reverse_lazy\\r\\n\\r\\nclass ContactView(FormView):\\r\\n    form_class = ContactForm\\r\\n    success_url = reverse_lazy('contact')\\r\\n    template_name = 'contact.html'\\r\\n</code></pre>\", \"id\": \"b94053e8-623e-4946-ba98-4dff98af1205\"}, {\"type\": \"paragraph\", \"value\": \"Loading the view and submitting the form now won't show any errors but also\\r\\ndoesn't seem to do anything. We just get back to our original contact page with\\r\\na clean form. We need to set what the form does when it's submitted.\\r\\n\\r\\nWe can, thankfully, reuse a lot of our work from before. `FormView` provides a\\r\\nmethod named `form_valid` that is run whenever the form is valid. Let's take our\\r\\ncode from the function-based version of our contact view and use it here.\", \"id\": \"fe220981-d7d1-4012-9639-66eb5e620e94\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">views.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\nclass ContactView(FormView):\\r\\n    form_class = ContactForm\\r\\n    success_url = reverse_lazy('contact')\\r\\n    template_name = 'contact.html'\\r\\n\\r\\n    # our new code\\r\\n    def form_valid(self, form):\\r\\n        contact_name = self.form.cleaned_data['contact_name']\\r\\n        contact_email = self.form.cleaned_data['contact_email']\\r\\n        form_content = self.form.cleaned_data['content']\\r\\n\\r\\n        template = get_template('contact_template.txt')\\r\\n        context = Context({\\r\\n            'contact_name': contact_name,\\r\\n            'contact_email': contact_email,\\r\\n            'form_content': form_content\\r\\n        })\\r\\n        content = template.render(context)\\r\\n\\r\\n        email = EmailMessage(\\r\\n            'New contact form submission',\\r\\n            content,\\r\\n            'Your website ' + '<hi@weddinglovely.com>',\\r\\n            ['youremail@gmail.com'],\\r\\n            headers = {'Reply-To': contact_email}\\r\\n        )\\r\\n        email.send()\\r\\n        return super(ContactView, self).form_valid(form)\\r\\n</code></pre>\", \"id\": \"2731a77d-ebda-4193-be63-5d9e00a34925\"}, {\"type\": \"paragraph\", \"value\": \"Most of this code should be familiar. The main differences between the old\\r\\nversion and this one are that we're inside the `form_valid` method instead of in\\r\\nan `if` block. Also, we're using `self.form` to get the submitted information\\r\\ninstead of looking at the request object.\\r\\n\\r\\nAnd, finally, at the end, we're returning this `super()` call. This will let\\r\\nDjango keep doing its usual work, redirecting to the success view, without us\\r\\nhaving to specify it. \\r\\n\\r\\nLet's check out the different between our old function-based view and our new\\r\\nclass-based view:\", \"id\": \"a7abce96-55bf-4891-9987-48205786f0bc\"}, {\"type\": \"html\", \"value\": \"<pre><code class=\\\"python\\\">\\r\\ndef contact(request): \\r\\n    form_class = ContactForm\\r\\n    if request.method == 'POST':\\r\\n        form = form_class(data=request.POST)\\r\\n\\r\\n        if form.is_valid():\\r\\n            contact_name = form.cleaned_data['contact_name']\\r\\n            contact_email = form.cleaned_data['contact_email']\\r\\n            form_content = form.cleaned_data['content']\\r\\n\\r\\n            template = get_template('contact_template.txt')\\r\\n\\r\\n            context = Context({\\r\\n                'contact_name': contact_name,\\r\\n                'contact_email': contact_email,\\r\\n                'form_content': form_content,\\r\\n            })\\r\\n            content = template.render(context)\\r\\n\\r\\n            email = EmailMessage(\\r\\n                \\\"New contact form submission\\\",\\r\\n                content,\\r\\n                \\\"Your website\\\" +'<hi@weddinglovely.com>',\\r\\n                ['youremail@gmail.com'],\\r\\n                headers = {'Reply-To': contact_email }\\r\\n            )\\r\\n            email.send()\\r\\n            return redirect('contact')\\r\\n\\r\\n    return render(request, 'contact.html', {\\r\\n        'form': form_class,\\r\\n    })\\r\\n</code></pre>\\r\\n\\r\\n<p class=\\\"code-page\\\">Class-based view:</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\nclass ContactView(FormView):\\r\\n    form_class = ContactForm\\r\\n    success_url = reverse_lazy('contact')\\r\\n    template_name = 'contact.html'\\r\\n\\r\\n    def form_valid(self, form):\\r\\n        contact_name = self.form.cleaned_data['contact_name']\\r\\n        contact_email = self.form.cleaned_data['contact_email']\\r\\n    form_content = self.form.cleaned_data['content']\\r\\n\\r\\n    template = get_template('contact_template.txt')\\r\\n\\tcontext = Context({\\r\\n\\t    'contact_name': contact_name,\\r\\n\\t    'contact_email': contact_email,\\r\\n\\t    'form_content': form_content\\r\\n\\t})\\r\\n\\tcontent = template.render(context)\\r\\n\\r\\n\\temail = EmailMessage(\\r\\n\\t    'New contact form submission',\\r\\n\\t    content,\\r\\n\\t    'Your website ' + '<hi@weddinglovely.com>',\\r\\n\\t    ['youremail@gmail.com'],\\r\\n\\t    headers = {'Reply-To': contact_email}\\r\\n\\t)\\r\\n\\temail.send()\\r\\n\\treturn super(ContactView, self).form_valid(form)\\r\\n</code></pre>\", \"id\": \"6532f1f8-0fa7-4bd6-abf1-526f940b75b1\"}, {\"type\": \"paragraph\", \"value\": \"Everything works just like it did in the original version of the view. Why\\r\\nchange it to a class-based view, then? \\r\\n\\r\\nMost of the time, you want all of your views to be created in the same manner. \\r\\nIf you're using classes for 95% of your views, you should go ahead and convert\\r\\nthe remaining 5%. Also, making it a class-based view often makes it easier to\\r\\nrefactor later. For example, you could take all of the `form_valid` functionality\\r\\nout of the view, put it into a function, and just call that function from inside\\r\\nof `form_valid`. Now, if you need to update how the contact form submissions are\\r\\nhandled, you can update just that function instead of the whole view.\\r\\n\\r\\nYou'll also find yourself developing patterns as you build a site or app. You'll\\r\\nhave several views that all have the same characteristics or behaviors. When you\\r\\nuse class-based views and their mixins, you'll find yourself able to build that\\r\\nbehavior much more consistently and quickly. Work smarter, not harder!\\r\\n\\r\\n## Mixins: peanut butter for your chocolate views\\r\\n\\r\\nWhen we need to protect a function-based view, we can use the `@login_required`\\r\\ndecorator. Decorators don't work easily or cleanly on class-based views, though.\\r\\n\\r\\nStarting with version 1.9, Django provides mixins that we can use to protect\\r\\nour class-based views. Mixins are simple classes that provide a small amount of\\r\\nfunctionality for another, larger class to use. [More info\\r\\nhere](https://docs.djangoproject.com/en/1.9/topics/class-based-views/mixins/).\\r\\n\\r\\nDjango 1.9 gives us three mixins but one of them\\r\\nwill be used way more often than the other two, at least in most projects. That\\r\\nmixin is the `LoginRequiredMixin`.\\r\\n\\r\\n### Secret view and URL\\r\\n\\r\\nLet's create a new view that we want to protect. This would be a view that you\\r\\nwant you and your staff to have access to, but not your customers and site\\r\\nvisitors.\\r\\n\\r\\nFirst, we'll build our template:\", \"id\": \"a8cf5cf0-60d5-4523-a62e-731fe5453df5\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">secret.html</p>\\r\\n<pre><code class=\\\"django\\\">\\r\\n{% extends 'base.html' %}\\r\\n\\r\\n{% block title %}Secret - {{ block.super }}{% endblock %}\\r\\n\\r\\n{% block content %}\\r\\n&lt;h1&gt;Secret&lt;/h1&gt;\\r\\n&lt;p&gt;This page should be secret.&lt;/p&gt;\\r\\n{% endblock %}\\r\\n</code></pre>\\r\\n\\r\\n<p>Of course, we need to make a view for it.</p>\\r\\n\\r\\n<p class=\\\"code-page\\\">views.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\nfrom django.views.generic import TemplateView\\r\\n\\r\\nclass SecretView(TemplateView):\\r\\n    template_name = \\\"secret.html\\\"\\r\\n</code></pre>\\r\\n\\r\\n<p>And, finally, we need to set up a URL for the view.</p>\\r\\n\\r\\n<p class=\\\"code-page\\\">urls.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\nurlpatterns = [\\r\\n    ...\\r\\n    url(r'^secret/$', views.SecretView.as_view(), name='secret'),\\r\\n</code></pre>\", \"id\": \"67fa3f78-244b-4124-a563-03a36d877cb0\"}, {\"type\": \"paragraph\", \"value\": \"Great, everything is set up and ready for us to secure.\\r\\n\\r\\n### Securing the view\\r\\n\\r\\nIf you log out of your site, or open an anonymous browser session, and go to\\r\\n*localhost:8000/secret/*, you should be able to see the secret view. That's not\\r\\nwhat we want, we want it hidden from non-logged in eyes!\\r\\n\\r\\nLet's go back to *views.py* and update the view class to protect the view from\\r\\nanonymous users, people that haven't logged in yet.\", \"id\": \"6ad56a54-9411-438d-bc2c-d3ae30316f91\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">views.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\nfrom django.contrib.auth.mixins import LoginRequiredMixin\\r\\n\\r\\nclass SecretView(LoginRequiredMixin, TemplateView):\\r\\n    template_name = \\\"secret.html\\\"\\r\\n</code></pre>\", \"id\": \"199dc18e-2fcf-41d2-8b85-64e4015cfe7b\"}, {\"type\": \"paragraph\", \"value\": \"Because of how class construction works in Python, we need the special features\\r\\nof the mixin to be available when the view itself is instantiated. In this case,\\r\\n`LoginRequiredMixin` tests that a user is logged in before the view is rendered\\r\\nfor them. If we refresh the */secret/* URL again, we'll see that we're not allowed\\r\\nto view the page anymore. Hooray! That's what we wanted!\\r\\n\\r\\n## Summary\\r\\n\\r\\nMixins provide us a convenient, light way to add new functionality to our\\r\\nviews.  If you find yourself needing more functionality than the three mixins\\r\\nthat Django provides, check out\\r\\n*[django-braces](https://github.com/brack3t/django-braces)*. django-braces\\r\\nprovides other mixins for things like controlling queries and quickly creating\\r\\nJSON views.\\r\\n\\r\\nAnother great resource for building up an understanding of Django's class-based\\r\\nviews is [ccbv.co.uk](//ccbv.co.uk). This site lists out each\\r\\nclass-based views, the mixins it uses, and what methods each mixin provides.\\r\\nWith this, you should be able to figure out which view to use and what methods\\r\\nto override to create exactly the workflow your application calls for.\\r\\n\\r\\nClass-based views and mixins allow you to very quickly build simple or\\r\\nrepetitious views. If you find yourself building the exact same view over and\\r\\nover again, changing just the form or model that's used, class-based views will\\r\\ntypically save you a lot of time.\\r\\n\\r\\nFor more about class-based views, check out the links above as well as these\\r\\nbelow:\\r\\n\\r\\n* [GoDjango's video on class-based views](https://godjango.com/15-class-based-views-part-1-templateview-and-redirectview/)\\r\\n* [Django's documentation on the LoginRequired mixin](https://docs.djangoproject.com/en/1.9/topics/auth/default/#the-loginrequired-mixin)\\r\\n* [Django's documentation on the UserPassesTestMixin mixin](https://docs.djangoproject.com/en/1.9/topics/auth/default/#django.contrib.auth.mixins.UserPassesTestMixin)\\r\\n* [Django's documentation on the PermissionRequiredMixin mixin](https://docs.djangoproject.com/en/1.9/topics/auth/default/#the-permissionrequiredmixin-mixin)\", \"id\": \"d6a0e65d-3e8b-4871-b987-c5dc2fc116a2\"}]", "date": "2015-12-04T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/12/4/1.png", "categories": [3, 7, 8]}}, {"model": "blog.postpage", "pk": 32, "fields": {"excerpt": "I've just released a big update to the Kickstarter alpha PDF that was sent to all backers. A lot of changes have been made, including:", "featured": false, "body": "[{\"type\": \"paragraph\", \"value\": \"I've just released a big update to the Kickstarter alpha PDF that was sent to all backers. A lot of changes have been made, including:\\r\\n\\r\\n* The Heroku chapter has been completely rewritten. Instead of recommending django-toolbelt, I went ahead and build my own package containing the exact things we want for deployment on Heroku ([https://pypi.python.org/pypi/hellowebapp-deploy/1.0.1](https://pypi.python.org/pypi/hellowebapp-deploy/1.0.1)). I've also updated all the steps to make them simpler and easier to understand.\\r\\n* Design-wise, all of the fonts have been updated. New chapter title design. The entire book aligns to a baseline grid, which should (invisibly) make it look more cohesive. \\r\\n* All screenshots have been updated, as well as being print resolution now.\\r\\n* Added a few more suggestions in both the \\\"What to do if your app is broken\\\" and \\\"Moving forward\\\" chapters.\\r\\n* New subtitle on the cover. Trying to be more marketing-y. Would love your thoughts if you have an alternate suggestion. \\r\\n* More typos and small errors squashed.\\r\\n\\r\\nIf you're a backer, check out your email or go to the Updates tab of the Kickstarter page ([https://www.kickstarter.com/projects/1868398473/hello-web-app-intro-to-building-web-apps-with-djan/posts](https://www.kickstarter.com/projects/1868398473/hello-web-app-intro-to-building-web-apps-with-djan/posts)) to check out the new PDF!\\r\\n\\r\\neBook files will be released hopefully this week as well \\u2014 I'm creating them using [Leanpub](https://leanpub.com/), and I have nothing but good things to say regarding that platform. \\r\\n\\r\\nAdditionally, I've created a Hello Web App discussion forum, for any questions or commentary about the book: [http://discuss.hellowebapp.com](http://discuss.hellowebapp.com/)\\r\\n\\r\\nFinal stretch!\", \"id\": \"665f9842-be1b-48af-b9f8-c58788e292ca\"}]", "date": "2015-03-09T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/3/9/1.jpg", "categories": [1, 2, 8]}}, {"model": "blog.postpage", "pk": 33, "fields": {"excerpt": "I'm happy to give a discount for libraries, schools, and bulk orders \u2014 just email me and I'll set up a special order form with a discount. While my order page sells the paperback book with the digital files included, I'm also happy to send just paperbacks (at a reduced price) for bulk/educational orders as well.", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"full video\\\">\\r\\n    <iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/jJl-3AHs8FQ\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen=\\\"allowfullscreen\\\"></iframe>\\r\\n</figure>\", \"id\": \"68b2b152-bc87-471c-889c-79de74894af7\"}, {\"type\": \"paragraph\", \"value\": \"I've gotten a few questions lately about bulk, library, and educational discounts for all Hello Web Books, so I thought I'd write a quick note here.\\r\\n\\r\\n**Of course, I'm happy to give a discount for the above use-cases \\u2014 just write me at [tracy@hellowebbooks.com](mailto:tracy@hellowebbooks.com) and I'll set up a special order form with a discount.** While my [order page](/order) sells the paperback book with the digital files included, I'm also happy to send just paperbacks (at a reduced price) for bulk/educational orders as well.\\r\\n\\r\\nI've also set up Amazon to allow for bulk discounts. I vastly prefer to sell directly (since Amazon takes a _ridiculous_ amount of money from me, so the books I sell through Amazon are essentially at-cost) but I know some organizations are set up to use Amazon easily. The only other issue is that I can't sell Hello Web App as a set on Amazon, so each HWA book will have to be bought separately. See the listings here: [Hello Web Design](https://amzn.to/2M3T7ub), [Hello Web App](https://amzn.to/2yrSo42), [Hello Web App: Intermediate Concepts](https://amzn.to/2yvoBYf)\", \"id\": \"66c2236d-3140-48ef-8a3d-872758cbdfff\"}]", "date": "2018-06-18T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/5/7/shipments.jpeg", "categories": [1, 8, 9]}}, {"model": "blog.postpage", "pk": 34, "fields": {"excerpt": "Lately I've been finding myself too busy to do the marketing/upkeep that I should be, and I've been kicking around the idea of hiring someone for 5-10 hours a week to help me keep everything active and keep abreast of opportunities I should be doing in order to promote Hello Web Design and continue promoting *Hello Web App*.", "featured": false, "body": "[{\"type\": \"paragraph\", \"value\": \"**Edit: Someone has been hired! Leaving this up for posterity but please don't email me as the position has been filled. :)**\\r\\n\\r\\nHey friends - *[Hello Web Design](https://hellowebbooks.com/learn-design/)* is almost here!\\r\\n\\r\\nFor my last two books, I've taken care of all the marketing hulabaloo myself. I find the process really fun: finding podcasts to pitch myself to be on, places I should post the books, writing articles about the book, and generally promoting it (and loving seeing my books in people's hands!)\\r\\n\\r\\nLately I've been finding myself too busy to do the marketing/upkeep that I should be, and I've been kicking around the idea of hiring someone for 5-10 hours a week to help me keep everything active and keep abreast of opportunities I should be doing in order to promote *Hello Web Design* and continue promoting *Hello Web App*.\\r\\n\\r\\nSpecifically, some ideas I had for duties with this role:\\r\\n\\r\\n* Find interesting beginner design/programming articles and share on the Hello Web Books social media accounts.\\r\\n* Find discussions on Reddit/other sites and let folks know about Hello Web App/Hello Web Design.\\r\\n* Find places/charities/events/schools that would benefit from books being donated. \\r\\n* Write blog posts maybe? Or remind me to write more often, hah.\\r\\n* Respond to questions on the Hello Web App forum (or refer to me.)\\r\\n* I might set up a Slack so responding there and helping it feel more active.\\r\\n* Help me research fulfillment options with Amazon and other services.\\r\\n* Research speaking opportunities for me to promote the books.\\r\\n\\r\\nThese are all ideas I have for potential things to work on. We'd work together to figure out what we should prioritize so we wouldn't be necessarily doing all of the above right off the bat.\\r\\n\\r\\nI struggle with the right title for the role (assistant seems too minion-y, evangelist maybe?) You're welcome to tell me the title you'd want!\\r\\n\\r\\nI'm hoping to start with a 3 month trial and then we can see about continuing and whether to increase hours.\\r\\n\\r\\nBonus if you've read my books since you already have a feel for my work, but that isn't necessary. Of course this is a remote role and you can work whenever is convenient for you.\\r\\n\\r\\nInterested? Send me an email at [REDACTED - see note below] with the subject \\\"Hello Web Books Evangelist/Marketing Assistance\\\" and give me an two or so paragraph overview of your background, why you'd be interested in this position, and your hourly rate. No need for resumes. :)\\r\\n\\r\\nThanks friends!\\r\\n\\r\\n**Edit: Someone has been hired! Leaving this up for posterity but please don't email me as the position has been filled. :)**\", \"id\": \"e1d43a06-7f82-4b96-97c9-adbb57672e49\"}]", "date": "2017-09-18T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2017/9/ks-banner-5.jpg", "categories": [1]}}, {"model": "blog.postpage", "pk": 35, "fields": {"excerpt": "First pass at formatting the chapters, though now I'm thinking I've spent too much time looking at A Book Apart's gorgeous formatting since it looks pretty similar...", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2014/12/25/B5qq8A6CcAAIIn5.jpg\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Printed out the book to go through it with a pen and highlighter...</figcaption>\\r\\n</figure>\\r\\n\\r\\n<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2014/12/25/download.jpeg\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>So many pages!</figcaption>\\r\\n</figure>\\r\\n\\r\\n<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2014/12/25/download-1.jpeg\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Seriously, edits on EVERY single page. This is like the billionth pass at editing...</figcaption>\\r\\n</figure>\\r\\n\\r\\n<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2014/12/25/download.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>First pass at formatting the chapters, though now I'm thinking I've spent too much time looking at A Book Apart's gorgeous formatting since it looks pretty similar...</figcaption>\\r\\n</figure>\", \"id\": \"61fe3042-5a55-4e92-8d3a-a652b4c0a1d7\"}]", "date": "2014-12-25T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2014/12/25/B5qq8A6CcAAIIn5.jpg", "categories": [2, 5, 8]}}, {"model": "blog.postpage", "pk": 36, "fields": {"excerpt": "First off, let me say \u2014 if you're self-publishing, going digital-only saves so much stress and work. However, I just couldn't resist creating a physical book. I mean, look at this:", "featured": true, "body": "[{\"type\": \"paragraph\", \"value\": \"First off, let me say \\u2014 if you're self-publishing, going digital-only saves so much stress and work.\\r\\n\\r\\nHowever, I just couldn't resist creating a physical book. I mean, look at this:\", \"id\": \"f6809049-ad3b-479b-a77f-78c51ac5fc88\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/28/book.jpeg\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Check out that sexy spot gloss.</figcaption>\\r\\n</figure>\", \"id\": \"5e8412d6-6808-43e8-bd7f-012b7306c093\"}, {\"type\": \"paragraph\", \"value\": \"Having a physical book makes in-person promotion easier too. \\\"Oh yeah, I wrote this book, you should check it out,\\\" doesn't hold a candle to pulling the book out of your jacket for people to ooh and ahh over in person. Not to mention that some people prefer to read from printed materials rather than from screens. \\r\\n\\r\\nI touched upon [how I got Hello Web App printed in my last article](https://hellowebapp.com/news/all-about-hello-web-apps-paperback-book-fulfillment) \\u2014 essentially, I am a huge fan of [PrintNinja](http://printninja.com/) and you should use them too for your printing needs. Their quality is top-notch and their support is fantastic.\\r\\n\\r\\nSo, you're like me, self-publishing a book, and you order 1,000 books from your printer. They arrive at your door. You have orders in your inbox. Now what?\", \"id\": \"c4e65a72-b65b-49f8-9b27-ec6af111cd6c\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/28/packing.jpeg\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"2fa1d702-b74d-46d1-a1f2-301b53d35f12\"}, {\"type\": \"paragraph\", \"value\": \"I worried a lot about making sure the book was protected without spending an arm and leg on packaging supplies. The packaging needed to be fairly light too, since added weight meant more expensive postage.\\r\\n\\r\\n### Version one\\r\\n\\r\\nOriginally, my books were wrapped in a [gallon storage bag](http://amzn.to/1DJAssz) (the twist tie wasn't used, the open end was just wrapped around the book), then wrapped in [a sheet of bubble wrap](http://amzn.to/1S8BI4j) (this roll has perforated sheets, a big time saver, and the bubble wrap is then taped securely around the book with special attention paid to the corners), then stuffed in a [poly mailer](http://amzn.to/1ggRd9y).\", \"id\": \"22eed16f-e467-468f-9f47-e8ec929e4a12\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/28/boxes.jpeg\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"4c648431-1eba-40cf-a87f-a944f8b6a2d3\"}, {\"type\": \"paragraph\", \"value\": \"The biggest issue with this is the packages are still semi-pliable. An overly enthusiastic postal worker could bend the book in half if he or she really wanted to. A dropped book could get bent corners. Thankfully, I've never received a complaint, but it was a constant worry.\\r\\n\\r\\nA good three hundred or so books were shipped out this way.\\r\\n\\r\\n### Version two\\r\\nThankfully I discovered that Amazon sells [cardboard mailers that wrap well around paperback books](http://amzn.to/1Ku5MjW).\\r\\n\\r\\nThe books still get the gallon bag + bubble wrap treatment (which hopefully makes the packages waterproof as well), then they're wrapped and taped in the cardboard mailer. The books don't move, they still have bubble wrap padding, and they have corner protection as well.\", \"id\": \"5f9300d2-ea4e-4583-8add-d10634143007\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/28/tiny.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Tiny image via my packaging assistant.</figcaption>\\r\\n</figure>\", \"id\": \"8fb2d273-eb32-4229-a1ef-430cf9e08264\"}, {\"type\": \"paragraph\", \"value\": \"## Hiring an assistant for packaging\\r\\n\\r\\nSometimes I make silly decisions, like deciding to live abroad for the summer immediately after my book launch. I'm currently writing this from Budapest!\", \"id\": \"b95b9a66-b828-4f80-ba75-35080d0d4c3f\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/28/craigs.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>The actual post I used to find my assistant.</figcaption>\\r\\n</figure>\", \"id\": \"1862ea4b-dd1e-4d46-a236-4eb4f7fafc19\"}, {\"type\": \"paragraph\", \"value\": \"Right now, I create and send over the labels for the week on Thursday, she ships on Friday or Saturday, and I pay using Venmo on Sunday. \\r\\n\\r\\n## Label creation\\r\\n\\r\\nThis turned into the worst part about shipping books. \\r\\n\\r\\nFirst off, if you're shipping books in the US, [did you know about Media Mail](https://about.usps.com/notices/not121/not121_tech.htm)? It is a significantly cheaper postage rate reserved for books and educational materials. There are a few additional rules involved \\u2014 for example, you can't include anything else in the package, like a thank you card. Make sure to read up on the rules before you use it. If you're shipping books though, it's the way to go (domestically, at least).\\r\\n\\r\\nOne last product shoutout \\u2014 all labels were printed onto [fancy label sticker paper](http://amzn.to/1S8KeAv) (separate papers exist for laser vs. inkjet, both linked are ones I've used and recommend). I could have saved money by printing on plain paper and taping but the time involved did not seem worth the cost savings.\\r\\n\\r\\n### Making labels the hard way\\r\\n\\r\\nI needed to find a way to create labels automagically from CSVs downloaded from Kickstarter and Gumroad. \\r\\n\\r\\nYou can create labels from a CSV on [USPS.com](http://usps.com/), but you can't create media mail labels. Unfortunately, the only service online that takes a CSV [to create media mail labels is through Paypal](https://www.paypal.com/shipping). I could still use USPS for international labels, however.\\r\\n\\r\\nThe original shipment of three hundred or so books was created using these two services.\\r\\n\\r\\nIt was *terrible*. \\r\\n\\r\\nI would take my CSV, and split it into two depending on whether it was domestic or international. Each service had its own nitpicky requirements for the CSV, so each CSV had to be formatted correctly. Of course, with Paypal, would still throw errors about half the time.\", \"id\": \"b4bade62-dcab-4410-a5a5-8fbeffedc723\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/28/paypal.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>It's like something out of 1998.</figcaption>\\r\\n</figure>\", \"id\": \"b6ccc4b6-eea9-4fc3-b69c-39927748bb22\"}, {\"type\": \"paragraph\", \"value\": \"I would feed the CSV into Paypal, where I could at least generate all the labels at once. However, about 50% of the time I would forget to choose the tiny drop down to set the correct shipping date for the books, as I was creating the labels early (you need to ship within 24 hours of the data specified on the label, and it would default for that day). Refunds for labels with incorrect dates would take 3-4 weeks and I was warned that it was up to USPS to decide whether to refund or not.\\r\\n\\r\\nOnce I got the labels, they would be formatted with one label per sheet, so I would stop printing halfway through to rotate the paper so I didn't waste half of my fancy label paper.\\r\\n\\r\\nOh, and Paypal would ask me to use a \\\"modern browser\\\" and wouldn't let me use Chrome. Of course.\", \"id\": \"429acd3c-42bd-4a78-8eae-dd6ff2978395\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/28/usps.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>This is just the first page of the three page process I would go through for every single international label.</figcaption>\\r\\n</figure>\", \"id\": \"52bc4454-dc8d-46e9-b840-b89bb9a31020\"}, {\"type\": \"paragraph\", \"value\": \"*As for USPS...* I could upload the international CSV as \\\"contacts\\\", and one-by-one, create an international first-class label (no mass-creations here, folks). Of course, these labels had to print with half a page of disclaimers and whatnot so I had to waste an entire sheet of paper per international label.\\r\\n\\r\\nThis process sucked, and I thought it was my only option. \\r\\n\\r\\nThe tipping point came when I started traveling internationally, and USPS would not let me use its website to create labels. None of the errors were useful. As far as I could tell, this was a fraud prevention mechanism. Even though I was creating labels for my California-based shipper, I personally was not in the United States and therefore was banned from label creation. I was finally forced find a better solution.\\r\\n\\r\\nOne last shoutout to terrible services \\u2014 don't try out stamps.com, it signs you up automatically to a subscription product and requires you to call to cancel the product. Screw them.\\r\\n\\r\\nMaking labels the easy way\\r\\nMy husband, at the beginning of this process, recommended EasyPost. I didn't get past the headline, \\\"Shipping for developers: Integrate USPS, UPS, DHL and FedEx shipping APIs into any application in minutes.\\\" I didn't have an app and didn't feel like I had the time to create an app just to use EasyPost.\\r\\n\\r\\nBut of course, you don't have to make an app to use something like EasyPost \\u2014 just create a script. *Duuuh.* Smacking my head in hindsight.\\r\\n\\r\\nI spent the afternoon writing a tool that would take a CSV and use EasyPost to generate labels for every address. The code can be seen below \\u2014 it uses the Hello Web App values but should be easy enough to figure out how to update to your own needs.\", \"id\": \"8151bdf3-97a8-4583-bd48-40d137500da8\"}, {\"type\": \"html\", \"value\": \"<script src=\\\"https://gist.github.com/limedaring/c9924d174eee277cb82a.js\\\"></script>\", \"id\": \"dbfa0719-51ca-4474-ad69-b325a7592925\"}, {\"type\": \"paragraph\", \"value\": \"The script creates a folder of labels, which then I [made another tool to grab the images](https://github.com/limedaring/easypost-labels/blob/master/image_resizing.py), resize them and rotate to fit two-per-page. \\r\\n\\r\\n[You can see everything here on Github, including requirements and whatnot](https://github.com/limedaring/easypost-labels). Again, there is still Hello Web App specific code in there (hardcoded values for the size and weight of the packages) but it's easily updatable \\u2014 feel free to make a pull request too if you want to update it.\\r\\n\\r\\nNow, as orders roll in for Hello Web App, I add them to a spreadsheet. On Thursdays, I download the sheet, load my EasyPost test key, test out the script. Everything looks peachy, I load the live key and generate the labels. I then run the image script to generate the labels two-per-page, and then I use Preview to open all generated pages, and save as a multi-page PDF for my assistant to print. *So much easier*.\\r\\n\\r\\n-------\\r\\n\\r\\nThat's how I ship Hello Web App! [I also sell through Amazon](http://amzn.to/1KumKPg), which involves an Amazon Advantage account and Amazon periodically sends me emails asking for me to send books to them, and they take care of the rest. Not nearly has interesting as fulfilling directly. \\r\\n\\r\\nI have quite a few other articles about the Hello Web App design and production process that you might want to read:\\r\\n\\r\\n* [I self-published a learn-to-code book and made nearly $5,000 in pre-orders](https://hellowebapp.com/news/how-i-launched-my-learn-to-code-book-and-made-nearly-5000-in-pre-orders)\\r\\n* [Hello Web App's Kickstarter campaign: How I did it, what I regret.](https://hellowebapp.com/news/reviewing-hello-web-apps-kickstarter-campaign)\\r\\n* [Economics of self-publishing a book via Kickstarter: Hello Web App's story](https://hellowebapp.com/news/economics-of-self-publishing-on-kickstarter)\\r\\n* [Designing and printing Hello Web App's PDF and paperback editions](https://hellowebapp.com/news/all-about-hello-web-apps-paperback-book-fulfillment)\\r\\n\\r\\nOf course, you should [buy Hello Web App](http://hellowebapp.com/order) if you're interested in learning web app development. You can download a sample of the book by signing up for the newsletter at the bottom of this page.\\r\\n\\r\\n[See more discussion about this post on Hacker News.](https://news.ycombinator.com/item?id=9847965)\\r\\n\\r\\nYou should follow me on Twitter for more fun self-publishing tidbits, startup whining, and dorkiness: [@limedaring](http://twitter.com/limedaring)\\r\\n\\r\\nThanks for reading!\", \"id\": \"157fd118-fb7b-4aa8-9695-ade39da1e77c\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/7/28/shipping.gif\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"2fa38960-0965-4fc0-be74-4183a06fe71a\"}]", "date": "2015-07-28T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/7/28/banner.jpeg", "categories": [2]}}, {"model": "blog.postpage", "pk": 37, "fields": {"excerpt": "When I finished a preliminary version of Hello Web App, I immediately ordered a one-off copy with my draft cover from Magcloud, which is a really awesome print-on-demand service. It cost $26 but having a physical book in hand meant I could plaster this website and all marketing materials with photos of the book early. Photos are so much better than mockups.", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/7/hellowebapp1.jpeg\\\" alt=\\\"\\\"/>\\r\\n</figure>\\r\\n\\r\\n<p>When I finished a preliminary version of Hello Web App, I immediately ordered a one-off copy with my draft cover from Magcloud, which is a really awesome print-on-demand service. It cost $26 but having a physical book in hand meant I could plaster this website and all marketing materials with photos of the book early. Photos are so much better than mockups! </p>\\r\\n\\r\\n<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/7/hellowebapp2.jpeg\\\" alt=\\\"\\\"/>\\r\\n</figure>\\r\\n\\r\\n<p>\\r\\nI've updated the cover slightly since the original one, but unfortunately the final copies of the books arrived at my house after I departed on a three week trip to visit my husband's family and friends in Toronto. So I didn't get to see the final book design until I returned a few days ago. And how did the books turn out?\\r\\n</p>\\r\\n\\r\\n<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/7/hellowebapp3.jpeg\\\" alt=\\\"\\\"/>\\r\\n</figure>\\r\\n\\r\\n<p>AWESOMELY. The best part is the spot gloss on the title that I decided to add on a whim. Suffice to say, I am VERY pleased with the final book design. I decided not to pay an extra $250 for a physical proof, so all of my cover and text paper weights, the gloss, and the final cover color were guesses that I hoped would turn out as splendidly as I imagined.</p>\\r\\n\\r\\n<p><a href=\\\"http://amzn.to/1yLsHFH\\\">Amazon</a> should be restocked by next week at the latest, and I am shipping out books throughout this week to <a href=\\\"http://gumroad.com/limedaring\\\">Gumroad</a> payments and <a href=\\\"https://www.kickstarter.com/projects/1868398473/hello-web-app-intro-to-building-web-apps-with-djan\\\">Kickstarter</a> backers.</p>\\r\\n\\r\\n<p><strong>I am so so so very happy. Want a copy? <a href=\\\"http://hellowebapp.com/preorder\\\">Order one here!</a></strong></p>\\r\\n\\r\\n<p>Also, If you're coming to DjangoCon EU (<a href=\\\"http://2015.djangocon.eu/event/django-web-designers/\\\">where I'm giving a workshop!</a>) you can also <a href=\\\"http://2015.djangocon.eu/news/hello-web-app/\\\">order a copy here and pick it up at registration, saving $10 USD in shipping</a>.</p>\\r\\n\\r\\n<p>What do you think of the cover?</p>\", \"id\": \"9803134d-519e-40e9-b750-99598aa86d4c\"}]", "date": "2015-05-07T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/5/7/hellowebapp3.jpeg", "categories": [2, 5, 8]}}, {"model": "blog.postpage", "pk": 38, "fields": {"excerpt": "After a few months of work, I'm super excited to release the new Hello Web Books website design to the world! When I originally designed this website, I stepped out of my comfort zone and added a lot of photos, banners, fonts, and colors - I'm terrible at designing the \"little details\" so I relied on a lot of extra things to make the website feel more polished. In this design, I stripped most of that out.", "featured": true, "body": "[{\"type\": \"html\", \"value\": \"<p>After a few <strike>weeks</strike> months of work, I'm super excited to release the new Hello Web Books website design to the world!</p>\\r\\n\\r\\n<figure class=\\\"caption video\\\" style=\\\"padding-bottom: 50%;\\\">\\r\\n    <iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/nDSxdjNgOYE\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen=\\\"allowfullscreen\\\"></iframe>\\r\\n    <figcaption>Video/vlog of this post. In it, I go through a bit of why I updated everything and before/after screens.</figcaption>\\r\\n</figure>\\r\\n\\r\\n<p>In <a href=\\\"https://hellowebbooks.com/learn-design\\\"><i>Hello Web Design</i></a>, one of my biggest points for a nicer looking website design is to <em>reduce clutter</em>. And then I'd come back to this website and get annoyed at past-me for creating such a clutter-y website.</p>\\r\\n\\r\\n<p>When I originally designed this website, I stepped out of my comfort zone and added a <em>lot</em> of photos, banners, fonts, and colors &#8212; I'm terrible at designing the \\\"little details\\\" so I relied on a lot of extra <em>things</em> to make the website feel more polished.</p>\\r\\n\\r\\n<p><strong>In this design, I stripped most of that out.</strong> No more Typekit (oh man do I love Freight Text Pro but Typekit was just a bit too slow for me), no more custom fonts (Mrs Onion was fun, but in the end, a bit hard to read) &#8212; all hail <a href=\\\"https://fonts.google.com/specimen/Lato\\\">Lato</a>, the only typeface used now. It's plain, but pretty, and comes with tons of weights.</p>\\r\\n\\r\\n<p><strong>The <a href=\\\"https://hellowebbooks.com/#packages\\\">landing pages</a> for the books also have been improved.</strong> A lot of the imagery has been removed and a lot more text content added, like FAQs and more descriptions of the package contents.</p>\\r\\n\\r\\n<p>Last but not least, I've increased prices on all my products. This was a hard decision, but the last couple years I've had <em>really</em> low income for the amount of work I put into the videos/books. I've been severely undercharging for the amount of work I've put in. Of course, existing buyers will still get all product updates for free.</p>\\r\\n\\r\\n<p>Things aren't done though! I am <em>thisclose</em> to launching my next announcement but not quite yet, which is why <i>Hello Web App</i> isn't available to be ordered right now (it might be a big obvious what the announcement is about). Gotta get my ducks in a row before I can turn that back on. I know this website has some bugs and kinks to work out, so I'm launching it sooner rather than later.</p>\\r\\n\\r\\n<p>On the topic of bugs! <strong>If you see anything wonky, please let me know!</strong> I appreciate anyone who can help me test and debug the website.</p>\\r\\n\\r\\n<p><strong>What do you think? See anything you like or dislike?</strong> Let me know in the comments below or on <a href=\\\"https://twitter.com/limedaring\\\">Twitter</a>!</p>\", \"id\": \"f54ef07f-a1f5-4f75-be5f-245d53406b90\"}]", "date": "2018-02-13T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2018/new-website.png", "categories": [1, 5]}}, {"model": "blog.postpage", "pk": 39, "fields": {"excerpt": "Thank you everyone who has been following along in my journey with Hello Web App \u2014 from ideation, to Kickstarter, to writing (and writing, and editing, and writing, and throwing my hands in the air, and editing some more) to finally, A RELEASE DATE!", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/3/30/newcover.jpeg\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>The preview book, old cover design.</figcaption>\\r\\n</figure>\\r\\n\\r\\n<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/3/30/new-cover-design.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>The final cover design.</figcaption>\\r\\n</figure>\", \"id\": \"bb8cf2f4-74e5-4b63-b7fd-be5a5135e42e\"}, {\"type\": \"paragraph\", \"value\": \"Thank you everyone who has been following along in my journey with Hello Web App \\u2014 from ideation, to [Kickstarter](https://www.kickstarter.com/projects/1868398473/hello-web-app-intro-to-building-web-apps-with-djan), to writing (and writing, and editing, and writing, and throwing my hands in the air, and editing some more) to finally, A RELEASE DATE! \\r\\n\\r\\n**On May 4th, Hello Web App will be sold through [Gumroad](https://gumroad.com/limedaring), [Leanpub](https://leanpub.com/hellowebapp/), and [Amazon](http://amzn.to/1P59Uex)** (only Kindle at the moment \\u2014 paperback coming soon.)\\r\\n\\r\\nPricing:\\r\\n\\r\\n* **[$79: Complete Hello Web App eBook + videos bundle](http://gum.co/hellowebapp-videos)** \\u2014 I'm creating video walkthroughs of the Hello Web App code, plus intros to git, command line, and more. $10 extra to receive the print paperback as well.\\r\\n* **[$29.95: Hello Web App eBook + paperback book bundle](https://gumroad.com/l/hellowebapp)** \\u2014 All eBook files below plus the paperback book.\\r\\n* **[$14.95: Hello Web App eBook bundle](https://gumroad.com/l/hellowebapp-ebook)** \\u2014 fully designed PDF, .mobi, and .ePub files.\\r\\n* **[$14.95: Leanpub bundle](https://leanpub.com/hellowebapp/)** \\u2014 Leanpub designed PDF, .mobi, and .ePub files. Not as pretty as the official PDF but I know some people prefer Leanpub.\\r\\n* **[$9.95: Kindle on Amazon](http://amzn.to/1bK9oSs)** \\u2014 will announce paperback on Amazon once it's up.\\r\\n\\r\\nThe book is officially off to [PrintNinja](http://www.printninja.com/) for printing. I'm super excited about the physical book, as the cover has been updated from the first test print I made (seen above) and \\\"Hello Web App\\\" will be in a spot gloss that'll really make it shine.\\r\\n\\r\\nIn the coming weeks, I'm going to do a big marketing hullabaloo leading up to the launch. Interviews with awesome people who've learned to develop web apps, workshop announcements (hint: Portland in May!) and previews of the screencasts that'll be in the [complete Hello Web App package sold through Gumroad](https://gumroad.com/l/hellowebapp-videos). \\r\\n\\r\\nPre-order your book if you haven't already!\", \"id\": \"643f634e-a015-47ce-b27e-c267138c438a\"}]", "date": "2015-03-30T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/3/30/new-cover-design.png", "categories": [1, 2, 8]}}, {"model": "blog.postpage", "pk": 40, "fields": {"excerpt": "I've ordered one print copy of the Kickstarter Alpha so I can see how the design translates to print, as well as start updating some of the Hello Web App marketing", "featured": false, "body": "[{\"type\": \"paragraph\", \"value\": \"I've ordered one print copy of the Kickstarter Alpha so I can see how the design translates to print, as well as start updating some of the Hello Web App marketing (see the [homepage of Hello Web App](http://hellowebapp.com/) and the [HWA Twitter](http://twitter.com/hellowebapp).)\\r\\n\\r\\nAlready I can see some updates I need to make (for example, the inside edge of the content is too close to the spine, making the perfect-bound book harder to read.) However, that didn't stop me from having a mini-photoshoot in the yard. Enjoy this mini preview of the print book!\", \"id\": \"4434e4f5-a7ff-43a3-a169-27f309559e95\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full row\\\">\\r\\n    <div class=\\\"grid\\\">\\r\\n        <div class=\\\"grid-sizer\\\"></div>\\r\\n        <div class=\\\"grid-item\\\"><img src=\\\"/static/images/blog/2015/1/10/IMG_6341.jpg\\\" alt=\\\"\\\"/></div>\\r\\n        <div class=\\\"grid-item\\\"><img src=\\\"/static/images/blog/2015/1/10/IMG_6348.jpg\\\" alt=\\\"\\\"/></div>\\r\\n        <div class=\\\"grid-item\\\"><img src=\\\"/static/images/blog/2015/1/10/IMG_6350.jpg\\\" alt=\\\"\\\" /></div>\\r\\n        <div class=\\\"grid-item\\\"><img src=\\\"/static/images/blog/2015/1/10/IMG_6352.jpg\\\" alt=\\\"\\\" /></div>\\r\\n        <div class=\\\"grid-item\\\"><img src=\\\"/static/images/blog/2015/1/10/IMG_6361.jpg\\\" alt=\\\"\\\" /></div>\\r\\n        <div class=\\\"grid-item\\\"><img src=\\\"/static/images/blog/2015/1/10/IMG_6358.jpg\\\" alt=\\\"\\\" /></div>\\r\\n    </div>\\r\\n</figure>\", \"id\": \"39f70b5f-eacc-4892-b8c4-e399346a016e\"}, {\"type\": \"paragraph\", \"value\": \"Oh, sidenote: A lot of people are asking about buying the book (which is pretty exciting.) I am working on a bunch of updates: collecting feedback from the alpha Kickstarter release, creating illustrations, and a bunch of other things that I'll go over in a future blog post. Will announce pre-orders and the launch date soon!\", \"id\": \"bcb63ef4-7474-441c-a952-7b515da56a63\"}]", "date": "2015-01-10T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/1/10/featured.jpg", "categories": [2, 5, 8]}}, {"model": "blog.postpage", "pk": 41, "fields": {"excerpt": "On November 7th, Hello Web Design will be released into the world! Pre-order your book if you haven't already.", "featured": true, "body": "[{\"type\": \"paragraph\", \"value\": \"**On November 7th, Hello Web Design will be released into the world!**\\r\\n\\r\\nPricing and pre-order links:\", \"id\": \"f99db07f-8b4c-4d97-b4f5-657ee1dc1dcf\"}, {\"type\": \"html\", \"value\": \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <img src=\\\"/static/images/blog/2017/9/COVER.png\\\" alt=\\\"\\\"/>\\r\\n</div>\\r\\n<div class=\\\"col-sm-9\\\">\", \"id\": \"740fd813-962f-42dd-be79-5df811151a16\"}, {\"type\": \"paragraph\", \"value\": \"* **[$79: Complete Hello Web Design eBook + videos bundle](http://gum.co/hwd-videos)** \\u2014 includes video walkthroughs of each of the design chapters as well as bonus videos with web design breakdowns and critiques. $10 extra to receive the print paperback as well.\\r\\n* **[$29.95: Hello Web App eBook + paperback book bundle](https://gum.co/hwd-pb)** \\u2014 All eBook files below plus the paperback book.\\r\\n* **[$19.95: Paperback only via Amazon](http://amzn.to/2xLVAVq)** - the paperback via Amazon.com.\\r\\n* **[$14.95: Hello Web App eBook bundle](https://gum.co/hwd-ebook)** \\u2014 fully designed PDF, .mobi, and .ePub files.\\r\\n* **[$14.95: Leanpub bundle](https://leanpub.com/hellowebdesign/)** \\u2014 Leanpub designed PDF, .mobi, and .ePub files. Not as pretty as the official PDF but I know some people prefer Leanpub.\\r\\n* **[$9.95: Kindle on Amazon](http://amzn.to/2xLVAVq)**\", \"id\": \"dd6f05d7-d015-4351-b52e-6d933f15b6eb\"}, {\"type\": \"html\", \"value\": \"</div>\\r\\n</div>\\r\\n\\r\\n<p>Pre-order your book if you haven't already!</p>\", \"id\": \"1dc76522-da73-4aaf-b9c1-49b994de55ce\"}]", "date": "2017-09-29T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2017/9/hwd-banner.png", "categories": [1, 9]}}, {"model": "blog.postpage", "pk": 42, "fields": {"excerpt": "I started working on the design of Hello Web App: Intermediate Concepts yesterday! I recorded a quick screencast so you can check out the new book. I've only had one days worth of design time on it so far (so it's kind of rough) but since I'm using the design files from the last book, it's already about 80% done.", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"full video\\\">\\r\\n    <iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/Iyf1TLAghXg\\\" frameborder=\\\"0\\\" allowfullscreen='allowfullscreen'></iframe>\\r\\n</figure>\", \"id\": \"8ad342cd-4e3f-4db0-a79c-b6578af0fb2e\"}, {\"type\": \"paragraph\", \"value\": \"I started working on the design of Hello Web App: Intermediate Concepts yesterday! I recorded a quick screencast so you can check out the new book. I've only had one days worth of design time on it so far (so it's kind of rough) but since I'm using the design files from the last book, it's already about 80% done.\\r\\n\\r\\nOnly about 1.5 days left in the Kickstarter campaign ([https://www.kickstarter.com/projects/1868398473/hello-web-app-intermediate-concepts](https://www.kickstarter.com/projects/1868398473/hello-web-app-intermediate-concepts)). Reminder, all Kickstarter campaign orderers will get their book by early December, so pre-order if you want the new book. Of course any donations to support are super duper appreciated too!\", \"id\": \"ff3406a8-d040-4e3f-b598-1b9ae0885575\"}]", "date": "2015-10-01T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/10/1/1.png", "categories": [1, 2, 8]}}, {"model": "blog.postpage", "pk": 43, "fields": {"excerpt": "On January 19th (after fretting for at least two weeks), I finally launched Hello Web Design on Product Hunt (You know, my book/video course teaching design for non-designers. The post did way better than I hoped, becoming the #5 product of the day. Here\u2019s my recap of the process and what I learned from this go-around.", "featured": false, "body": "[{\"type\": \"paragraph\", \"value\": \"On January 19th (after fretting for at least two weeks), I finally [launched _Hello Web Design_ on Product Hunt](https://www.producthunt.com/posts/hello-web-design) (You know, my [book/video course teaching design for non-designers](https://hellowebbooks.com/learn-design/).\", \"id\": \"7c568248-bb6f-4249-851c-c05b26c33895\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption video\\\" style=\\\"padding-bottom: 50%;\\\">\\r\\n    <iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/Re_G20COq7s?rel=0\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen='allowfullscreen'></iframe>\\r\\n    <figcaption>Video/vlog version of this post! Trying to get better at speaking on camera so I'm doing a video version of all my posts.</figcaption>\\r\\n</figure>\", \"id\": \"94f64a1a-8830-4db5-b7ae-0de41638c7ee\"}, {\"type\": \"paragraph\", \"value\": \"The post did _way_ better than I hoped, becoming the #5 product of the day.\\r\\n\\r\\nHere\\u2019s my recap of the process and what I learned from this go-around.\", \"id\": \"3c6ab62c-1ec2-4510-9028-be2a733a1f18\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <a href=\\\"https://www.producthunt.com/posts/hello-web-design\\\"><img src=\\\"/static/images/blog/2018/ph/ph.jpg\\\" alt=\\\"Hello Web Design on Product Hunt\\\"/></a>\\r\\n    <figcaption><em>Hello Web Design</em> on Product Hunt</figcaption>\\r\\n</figure>\", \"id\": \"d6880663-c5e3-43c2-bad4-dac4ef863cd4\"}, {\"type\": \"paragraph\", \"value\": \"## Pre-launch\\r\\nIt\\u2019s been quite awhile since I launched on Product Hunt and the community has evolved quite a bit.\\r\\n\\r\\n**Thankfully [Product Hunt has their own guide on launching on Product Hunt](https://blog.producthunt.com/how-to-launch-on-product-hunt-7c1843e06399), which was super helpful** (I recommend checking it out first) but even so, I was still confused by a couple major things.\\r\\n\\r\\n### On when to post\\r\\n\\r\\nOne of the questions I had was **what time of the day (and what day) to post?** Since your accumulate points throughout the day, you need to post early enough to start building momentum and traction.\\r\\n\\r\\nThe Product Hunt guide is very clear I shouldn't worry about this, but I still did (such like me). Other guides on the internet advocated for posting at ridiculously early times like 3am ET. I knew it didn\\u2019t matter _too_ much about when I posted, but I also wanted to post it as early as possible _just in case_.\\r\\n\\r\\n**In the end, I set up my listing the night before and posted right when I woke up, at 7am ET/4am PT.** It was a little worrisome since there were quite a few other posts with a bunch of points by the time I woke up but in the end I still did well.\\r\\n\\r\\n### Setting up the post and missing fields\\r\\n\\r\\nIt\\u2019s been so long since I did a PH listing so I was unfamiliar with the process.\\r\\n\\r\\nI took a look at a few other successful Product Hunt pages (like [Marketing for Developers](https://www.producthunt.com/posts/marketing-for-developers-2-0)) and worked on my content in Google Docs for a few days perfecting what I wanted the sub-title, description, and introduction post to look like.\\r\\n\\r\\n**A major point of confusion was that you can\\u2019t set the description when you\\u2019re going through the four application screens to submit your product.** Turns out, after the application is submitted, the description field and a bunch others pop in (like social media, which I originally put in as links in the application). Not the best UX but I figured it out in the end.\", \"id\": \"3e4a93fe-f157-4a05-b837-abd4b7d80a5d\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2018/ph/app.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>The four pages to go through before submitting your product don't include a description field (seen on other listings), which confused me.</figcaption>\\r\\n</figure>\", \"id\": \"289e2e16-df9b-4cf1-8bdb-2d9720461002\"}, {\"type\": \"paragraph\", \"value\": \"As soon as the post was up, I sent a newsletter to my ~5,000 newsletter subscribers.\\r\\n\\r\\nI believe this is the reason why the post did so well \\u2014 **I'm lucky to have a small audience built up already over the years.** In the post, I asked them to check out the listing and ask any questions they might have for me. I didn't ask for upvotes, but I'm sure anyone who knows Product Hunt read between the lines.\\r\\n\\r\\nI also posted to Twitter several times during the day. I'm not the biggest fan of Twitter nowadays and the tweets didn't get _that_ much traction, but it's one of those things that I might as well do.\\r\\n\\r\\nI'm a member of a few communities for makers (like [MegaMaker Club](https://megamaker.co/club/)) and I shared the campaign in those Slack's as well\\r\\n\\r\\nThat was pretty much the extent of my sharing efforts \\u2014 I mostly relied on my newsletter friends.\\r\\n\\r\\n## Post-launch\", \"id\": \"26332341-6a8c-4fb6-bcbf-0d4810be846d\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2018/ph/phboard.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Woohoo, 5th most upvoted!</figcaption>\\r\\n</figure>\", \"id\": \"5f13d233-b459-400e-a0c1-a98ad5b95d39\"}, {\"type\": \"paragraph\", \"value\": \"**In the end, my post hit #5 for the day.** I actually didn\\u2019t think it would, as in the list for the day, Hello Web Design was actually at #6 \\u2014 I completely missed that one of the posts above mine was a sponsored post, and apparently ineligible for that ranking.\\r\\n\\r\\n### Traffic\", \"id\": \"4857f1ed-8682-4e1e-8755-70ca32ad6a46\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2018/ph/ganal.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Pretty good traffic bump.</figcaption>\\r\\n</figure>\", \"id\": \"2b1eae62-d2ee-4451-b8b1-27faa6da9d30\"}, {\"type\": \"paragraph\", \"value\": \"Before I wrote this post, I was disappointed in the amount of traffic, but after looking at [my old post on launching on Product Hunt](https://hellowebbooks.com/news/how-i-launched-my-learn-to-code-book-and-made-nearly-5000-in-pre-orders/), I realized it was just about normal. Phew.\\r\\n\\r\\n### Revenue\\r\\n\\r\\n#### Direct sales (using Gumroad)\", \"id\": \"95b459c3-7d7b-472d-bbdc-5f1ad8792518\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2018/ph/gumroad.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Made about $2,000 the first day, and kept up a bit of momentum afterwards.</figcaption>\\r\\n</figure>\", \"id\": \"60400a13-113b-4eb7-9de7-b4dc3658b18b\"}, {\"type\": \"paragraph\", \"value\": \"**The biggest surprise here is that I didn't sell as many video packages as I've done in the past for Product Hunt \\u2014 the majority of the sales were for the paperback book.** Not sure why. Maybe people have video/course fatigue? For _Hello Web App_, the majority of my sales was for the video product, and that listing didn't have photos (wasn't a feature then), whereas for the _Hello Web Design_ listing, I had a ton of photos (gotta show off that gorgeous book, yo.) Who knows, but I found this interesting.\\r\\n\\r\\n#### Indirect sales (Amazon paperbacks and Kindle sales)\", \"id\": \"7b3c26f1-e16b-4ab4-ae79-de6ba550511c\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2018/ph/amazon.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>The back-end of Seller Central, where I sell the paperback books.</figcaption>\\r\\n</figure>\\r\\n\\r\\n<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2018/ph/kdp.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>The back-end of Kindle Direct Publishing, where the Kindle sales are.</figcaption>\\r\\n</figure>\", \"id\": \"f4cc95b5-a04a-4585-979d-53cae9110ee4\"}, {\"type\": \"paragraph\", \"value\": \"Even though I didn't link to them directly from my Product Hunt page, **my other sales channels thhrough Amazon got a small boost.**\\r\\n\\r\\nUnfortunately since then, Amazon has \\\"temporarily removed\\\" my paperback listing as \\\"a customer reported details don't match the product\\\" and that they're \\\"investigating.\\\" Sigh. This is why I hate dealing with Amazon.\\r\\n\\r\\n## Conclusion and lessons learned\\r\\n\\r\\nI'm glad I was able to get a little chunk of money through the PH launch because it's tax season and I'm going to owe a few thousand dollars (yeehah, #entrepreneurshiplife.) **This launch was pretty crucial so I could buffer my bank account a bit and I'm glad it did as well as it did.**\\r\\n\\r\\nSome takeaways from this experience:\\r\\n\\r\\n* **It's really great to have people who seem to be true fans and will support what I do without asking.** I got a number of positive reviews on the post that were completely unexpected (and wonderful) and I am so grateful to have this community around me.\\r\\n* **As usual, when these things are going on, it's impossible for me to do any other work.** I refresh the page like every five minutes and can't stay concentrated on any other task.\\r\\n* **Posting at 7am ET and on a Thursday seemed fine.** I got lucky that there weren't any other huge launches that day to compete with mine.\\r\\n* **Why did no one ask questions in the comment section?** Still baffled by how quiet it was.\\r\\n\\r\\nAnd a quick run-down of my suggestions for anyone else preparing for their PH launch:\\r\\n\\r\\n* **Look at other successful Product Hunt pages** in your space and use them to inspire your content and how you'll set up your own listing.\\r\\n* **Work on your content and get it perfect.** Especially your sub-headline.\\r\\n* **Make sure your icon/photos/imagery looks great.**\\r\\n* **Post it as early in the day as you can** but don't lose sleep over it.\\r\\n* **Write a great introduction** about yourself and your product as a comment.\\r\\n* **Answer every comment** you can to keep the comments section looking active (also, to be polite and all that).\\r\\n* **Don't ask for upvotes**, but share with your fans.\\r\\n\\r\\nAny other questions? Ask me anything in the comments below!\", \"id\": \"b7378c98-e611-4d4c-ae7c-4f72ef290336\"}]", "date": "2018-01-29T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2018/ph/ph.jpg", "categories": [4, 9]}}, {"model": "blog.postpage", "pk": 44, "fields": {"excerpt": "I recently released Hello Web App, my book teaching web app development with Python and Django aimed at designers and non-programmers.__ The year-long journey kicked off with a Kickstarter campaign in April 2014. The campaign went super successfully (as you can see!) and now seems like a great time to review __what went well and what I regret.", "featured": true, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/15/kickstarter.jpg\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"4fc58573-dab3-41c9-be57-e16378e3a6f8\"}, {\"type\": \"paragraph\", \"value\": \"__I recently released Hello Web App, my book teaching web app development with Python and Django aimed at designers and non-programmers.__ The year-long journey kicked off with a Kickstarter campaign in April 2014. The campaign went super successfully (as you can see!) and now seems like a great time to review __what went well and what I regret.__\\r\\n\\r\\n## Deciding to run a Kickstarter campaign\\r\\nWhen I conceived the book idea, I was faced the decision whether I should work with a publisher, or whether I should self-publish. In the end, the typical royalty/advance structure turned me away from working with a publisher. __Why not drum up an \\\"advance\\\" by running a Kickstarter campaign? If the campaign was successful, I would be able to bring in some early revenue to help finance my time with writing the book, as well as test demand and start building an audience.__ Seemed like a no-brainer.\\r\\n\\r\\n## The video\", \"id\": \"4ecd30cd-2cf4-450a-a01b-8b42f555a0eb\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full video\\\">\\r\\n    <iframe src=\\\"https://player.vimeo.com/video/121716080\\\" width=\\\"500\\\" height=\\\"281\\\" frameborder=\\\"0\\\" webkitallowfullscreen='allowfullscreen' mozallowfullscreen='allowfullscreen' allowfullscreen='allowfullscreen'></iframe>\\r\\n</figure>\", \"id\": \"22794c15-80ab-40b1-ad9f-649068040f73\"}, {\"type\": \"paragraph\", \"value\": \"The heart of a Kickstarter campaign is the video, and I got lucky in that one of my closest friends, [Alexis Keenan, is a videographer and video editor.](http://alexiskeenan.com/) I traded her a new website in exchange for a Kickstarter video.\\r\\n\\r\\n__We managed to complete the entire video in one day.__ Alexis and I holed up in one of the rooms in my house. It was really echo-y due to the wooden floors, and all around my feet are heaps of blankets and pillows from around the house to dampen the sound.\\r\\n\\r\\n__I love to speak and tend to do mostly okay off the cuff, but I made the mistake that day by creating an exact script.__ I wish I remembered how many takes we did \\u2014 at least a hundred (my poor friend.) __I kept getting flustered and felt uncomfortable and couldn't think or speak straight.__ Having two two cameras helped (as Alexis could seamlessly switch between good takes by changing camera angle) but if I recorded a video again, I would try to be a little more off the cuff, or set up a teleprompter.\\r\\n\\r\\nAgain, my friend is a superstar \\u2014 we finished mid-afternoon after a billion takes, and she edited all evening, producing and editing my video in one day. __She even threw in some bloopers at the end, where you can see how dorky I was getting after doing so many takes.__ You should check them out at the end of the video because they're seriously silly.\\r\\n\\r\\n## Launching the campaign\", \"id\": \"a6287f8c-d80b-4cc1-ac9a-0d4a26c8bc66\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/15/kickstarter2.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"4ab8e30c-b9b6-4420-82a4-c09787aab597\"}, {\"type\": \"paragraph\", \"value\": \"__I chose to raise $7,000 \\u2014 low enough that I felt like I could reach the goal early on.__ I received some advice that campaigns should be about half what someone wants to achieve, __as more people will pile onto a successful campaign than on one that looks like it might not make it.__\\r\\n\\r\\nAt the time of my campaign, Kickstarter used Amazon Payments, and the approval process for an account was *awful*. I needed to fax my passport and my driver's license, and kept getting denied for being \\\"unreadable\\\" even though they looked perfectly readable on my side (I was using Hello Fax). The approval process took at least a very frustrating week.\\r\\n\\r\\nThere is also a separate Kickstarter approval process, and one of my original campaign rewards (books donated to a school of your choosing) had to be removed as donations are not allowed.\\r\\n\\r\\nIt's probably better now, but __it's good to keep in mind that your Kickstarter campaign definitely won't be able to launch immediately due to the approval processes.__\\r\\n\\r\\n## The marketing\\r\\n\\r\\n### Landing page\", \"id\": \"edd50c5d-79af-437c-b3ba-bebd4d401c25\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/15/landingpage.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"dfdd360b-1782-49af-8ebf-ac7c157cbe5f\"}, {\"type\": \"paragraph\", \"value\": \"Before I launched the campaign, I created a quick website with a form to collect emails. The colors were picked after a quick browse of [ColourLovers](http://www.colourlovers.com/) and the name of the book was literally determined by domain availability (as soon as I found out hellowebapp.com was available, I snatched it up and then named my book.) Note that the earliest version of the website had a comma after \\\"hello.\\\"\\r\\n\\r\\n### PyCon\", \"id\": \"44942ba8-f400-47bf-9754-566481890d3c\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full video\\\">\\r\\n    <iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/-l3ILra8ewI\\\" frameborder=\\\"0\\\" allowfullscreen='allowfullscreen'></iframe>\\r\\n</figure>\", \"id\": \"ccf514b4-ef53-4209-b08f-67ba935a6f88\"}, {\"type\": \"paragraph\", \"value\": \"__I was lucky that the idea for my book happened before [PyCon US 2014](https://us.pycon.org/2014/), the largest worldwide Python conference.__ Six months earlier I submitted a workshop idea off of my original book title, \\\"[Django for Designers.](https://www.youtube.com/watch?v=-l3ILra8ewI_)\\\" This allowed me to test the preliminary content I had for the book \\u2014 see the workshop video above.\\r\\n\\r\\nI aimed to launch the Kickstarter campaign right before the conference so I could bug Django and Python heavyweights in person to share my campaign. I had hoped that I could somehow get one of the keynote speakers to mention the campaign in their speeches, which didn't pan out. Everything else worked splendidly \\u2014 __I was able to talk to a lot of awesome people in person about my campaign and a lot of people were tweeting about it during the conference.__\\r\\n\\r\\nI also had an awkward moment at one of the PyCon lunches when another table-mate\\r\\nwas also writing their own intro-to-Django book. Competition! (I kid.)\\r\\n\\r\\n### Cold emails\\r\\n\\r\\n__I emailed pretty much everyone I knew who had influence in either the developer or designer spaces.__\\r\\n\\r\\nEveryone hates spam and cold-emails, so I really tried to create an email I could reuse for multiple emails (so I could work fast) that didn't appear like it was copy/pasted. A friendly and conversational tone definitely helps, especially when you're asking someone to pledge to your Kickstarter campaign.\\r\\n\\r\\nFor example, here's an outline of one of the emails I used:\\r\\n\\r\\n> Hi NAME!\\r\\n\\r\\n> PERSONAL THANKS/INTRO\\r\\n\\r\\n> I'm giving a tutorial at PyCon (https://us.pycon.org/2014/schedule/presentation/49/) and just launched a Kickstarter based on the same material I'm presenting:\\r\\nhttps://www.kickstarter.com/projects/1868398473/hello\\u00adweb\\u00adapp\\u00adintro\\u00adto\\u00adbuilding\\u00adweb\\u00adapps\\u00adwith-djan\\r\\n\\r\\n> Would you mind sharing the Kickstarter link? I'm really excited about the book and reaching out to new women to teach basic web app development \\u2014 hopefully to get more women into our industry.\\r\\n\\r\\n> Any advice you have for the tutorial, Kickstarter, or anything else would be appreciated! No worries if you don't have time \\u2014 I'm sure you're super busy. :)\\r\\n\\r\\n> Cheers, \\r\\n\\r\\n> Tracy\\r\\n\\r\\nI hoped linking to the tutorial I was running would give me more credibility, and I also tried to be respectful of my email recipients time. __I know some people abhor emoticons in emails, but honestly my cold emails almost always have one \\u2014 I like the informality that they bring.__\\r\\n\\r\\n### Sharing to mailing lists\\r\\n\\r\\nPretty much the same story as the above. Here's the message I passed along to a\\r\\nfew mailing lists I'm on that focus on women-in-tech and programming:\\r\\n\\r\\n> Hi NAME OF MAILING LIST members,\\r\\n\\r\\n> I just launched my Kickstarter for my future paperback/ebook teaching basic Python/Django web app development:\\r\\nhttps://www.kickstarter.com/projects/1868398473/hello\\u00adweb\\u00adapp\\u00adintro\\u00adto\\u00adbuilding\\u00adweb\\u00adapps\\u00adwith\\u00addjan\\r\\n\\r\\n> I'm focusing on non-\\u00adprogrammers who are intimidated by traditional tutorials, which generally assume previous programming experience and are usually complicated and focus on the command line (official Django tutorial, I'm looking at you.) Hopefully if it's successful, I'll be able to launch everything this summer and even run day\\u00adlong workshops on the material. I'm really excited about helping more women get into web app dev, since I taught myself to code a few years ago and now I'm running my own startup, and I'd love to get more women into the tech/entrepreneurship worlds. :)\\r\\nAny advice you have or suggestions, would love to hear them! <3\\r\\n\\r\\n> Cheers,\\r\\n> Tracy\\r\\n\\r\\nGenerally, these cold emails and mailing list postings were fairly successful.\\r\\n\\r\\n### Reddit, Hacker News\", \"id\": \"d3a03ee6-9ae0-476f-ac6f-ca391628102b\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/15/hackernews.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"b1f300de-b0d5-448a-a388-9df550a57796\"}, {\"type\": \"paragraph\", \"value\": \"At this time, Product Hunt wasn't around (or at least, wasn't the juggernaut it is now) so I wasn't able to share the Kickstarter campaign there.\\r\\n\\r\\nI received a fairly okay reception by posting a [\\\"Show HN\\\" on Hacker News](https://news.ycombinator.com/item?id=7699291). __I shared my motivation for writing the book and running the campaign and got on the bottom of the front page which led to a quite bit of traffic and pledges.__\\r\\n\\r\\nI also posted on the [/r/learnprogramming](http://www.reddit.com/r/learnprogramming/comments/24t1ly/im_writing_a_book_to_teach_beginner_django_web/) and [/r/learnpython](http://www.reddit.com/r/learnpython/comments/24wn4g/im_writing_a_book_to_teach_beginner_django_web/) subreddits, which didn't get that many upvotes or traffic.\\r\\n\\r\\n### Sponsorships\\r\\n\\r\\n__As the book features an entire chapter on [Heroku](http://heroku.com/) and I mention [Stripe](http://stripe.com/) a lot__ (and will likely feature Stripe integrations in a future book or blog posts), __I had hoped to convince the companies to sponsor the Kickstarter campaign. Alas, these attempts fell through.__\\r\\n\\r\\nI applied for a grant from the Python Software Foundation, which was denied after review \\u2014 they prefer to give grants for workshops or similar educational events. I did receive $400 from the Django Software Foundation (thanks again!)\", \"id\": \"29b843d3-269d-43d9-a078-62141ac4fac1\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/15/kinsights.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"00f32f84-a5ed-4531-814c-3557a4e1bc41\"}, {\"type\": \"paragraph\", \"value\": \"At the crux of the campaign, I was contacted by my friend Jackson Wilkinson about his startup [Kinsights](https://kinsights.com/) (a free advice-sharing network for parents) sponsoring my campaign. I worked out a deal with him to feature Kinsights in my promotions, and Kinsights donated the $1,000 that tipped my campaign into funded territory. Thanks again to Jackson and Kinsights!\\r\\n\\r\\n## Aftermath\", \"id\": \"d37b65aa-6a6b-46e6-ad4d-238fcc538c69\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full video\\\">\\r\\n    <iframe width=\\\"420\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/s-r8EbBE8rQ\\\" frameborder=\\\"0\\\" allowfullscreen='allowfullscreen'></iframe>\\r\\n</figure>\", \"id\": \"c2991b91-79eb-405e-994a-24f7299eba20\"}, {\"type\": \"paragraph\", \"value\": \"__In the end, I raised $12,136 with 540 backers. Woohoo!__\\r\\n\\r\\nThe entire recap of the economics and where the money went is long enough for its own post, see it here: \\r\\n\\r\\n[Economics of self-publishing a book via Kickstarter: Hello Web App's story](http://hellowebapp.com/news/economics-of-self-publishing-on-kickstarter)\\r\\n\\r\\n## What I recommend others do differently\\r\\n\\r\\n### Stand (and have some life) in your video\\r\\n\\r\\nSomething small that bugs the hell out of me: __I wish I was standing in my Kickstarter video.__ I wouldn't have been hunching and standing would have given me a lot more movement and freedom.\", \"id\": \"84a5207d-7b1a-4b8c-ab32-dc8db0fbe8a6\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/15/cookies.jpeg\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"9a38f2d8-05a7-4145-b182-7db07a63a012\"}, {\"type\": \"paragraph\", \"value\": \"### Choose on-topic rewards\\r\\n\\r\\nOne of my Kickstarter rewards was a care package of cookies. __At the time I thought I was being clever__, and wanted something other than books (and more books) as rewards. Unfortunately I can't do anything half-assed \\u2014 six backers chose this reward, and I stressed myself out baking hundreds of cookies (six different kinds), packaging them up in pretty boxes, and either hand-delivering or shipping the completely cookie care packages. __In hindsight, so much stress for something so completely unrelated to my book.__\\r\\n\\r\\n### Choose high enough tier amounts\\r\\n\\r\\nMy final prices for my books ended up higher than the tiers \\u2014 [$14.95 for the digital package, $29.95 for the paperback + digital package.](http://hellowebapp.com/preorder) Close enough to my original $10 and $25, __but the extra $4.95 per tier would have gone a long way and I doubt it would have lowered my pledges.__\\r\\n\\r\\n### Don't forget potential reward tiers\\r\\n\\r\\n[I ended up selling an additional $79 tier for the public Hello Web App launch](http://hellowebapp.com/preorder) \\u2014 video walkthroughs of all the code chapters of the book, and educational videos covering beginner topics such as the command line, Git, and a few others. __This tier actually sells quite healthily and I'm sure my Kickstarter campaign would have raised more money had I thought about offering video education in my award options.__\", \"id\": \"da5f5168-3e94-4715-936a-806fb5830e84\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/15/shipments.jpeg\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"3a9fc2de-7927-4229-9d76-3d83f224b34d\"}, {\"type\": \"paragraph\", \"value\": \"### Shipping Internationally costs a lot more than you think\\r\\n\\r\\nYou can set an additional cost for international pledges to cover shipping. Naively, I thought that $5 would cover any additional shipping costs. Turns out, shipping one book to Canada costs a bit over $8 and shipping internationally costs a bit over $13. This discrepancy really adds up when you're shipping 200 books and a good 33% or more of them are international. __It's definitely worth spending some time to figure out what shipping will really cost__, rather than just guessing.\\r\\n\\r\\n### Potential launch date \\u2014 set it way farther than you think\\r\\n\\r\\nI have a very silly drive to set ridiculous deadlines for myself. Usually I hit them, which has created a positive personal habit. __Unfortunately, I made this personal habit public on my Kickstarter campaign, giving myself a deadline for launching the books in just a few months after campaign completion.__\\r\\n\\r\\n__I would be able to create, design, edit, and launch a short book in just a few months, but definitely not to the standards that I wanted.__ My book ended up being almost a year overdue, something I was reminded by almost daily from messages from backers asking about their rewards. While the deadline said \\\"estimated\\\" and a lot of Kickstarter backers know that deadlines can (and often) will be missed, __I felt terrible for those that backed my campaign and expected the book earlier than I could give them.__ It got to a point where I would have my husband to answer the emails for me as I couldn't handle the depression I would get after telling another person that it would be delayed longer.\\r\\n\\r\\n## Conclusion\", \"id\": \"bfe1b8d4-baee-43b7-a540-36b2746153a6\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/5/15/finished-book.jpeg\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"b20bf084-657d-488f-8dac-5109ff57523c\"}, {\"type\": \"paragraph\", \"value\": \"__Would I run a Kickstarter campaign again? Definitely.__ Especially for self-publishing, running a Kickstarter allows an author to build an \\\"advance\\\" without having to give up 90%+ of their royalties. I made some really silly mistakes in hindsight, but I learned a lot from this experience. \\r\\n\\r\\n-------\\r\\n\\r\\nI have quite a few other articles about the Hello Web App design and production process that you might want to read:\\r\\n\\r\\n* [I self-published a learn-to-code book and made nearly $5,000 in pre-orders](https://hellowebapp.com/news/how-i-launched-my-learn-to-code-book-and-made-nearly-5000-in-pre-orders)\\r\\n* [Economics of self-publishing a book via Kickstarter: Hello Web App's story.](https://hellowebapp.com/news/economics-of-self-publishing-on-kickstarter)\\r\\n* [Designing and printing Hello Web App's PDF and paperback editions](https://hellowebapp.com/news/all-about-hello-web-apps-paperback-book-fulfillment)\\r\\n* [My adventures and advice on fulfilling orders for a printed self-published book](https://hellowebapp.com/news/my-adventures-and-advice-on-fulfilling-orders-for-a-printed-self-published-book)\\r\\n\\r\\nOf course, you should [buy Hello Web App](http://hellowebapp.com/order) if you're interested in learning web app development. You can download a sample of the book by signing up for the newsletter at the bottom of this page.\\r\\n\\r\\nYou should follow me on Twitter for more fun self-publishing tidbits, startup whining, and dorkiness: [@limedaring](http://twitter.com/limedaring)\\r\\n\\r\\nThanks for reading!\", \"id\": \"f96b00d0-179a-44d9-a7ef-50897e39199d\"}]", "date": "2015-05-15T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/5/15/kickstarter.jpg", "categories": [2, 4, 8]}}, {"model": "blog.postpage", "pk": 45, "fields": {"excerpt": "1st pass, still working on a lot of the design BUT it's starting to look pretty awesome. Full book is going to be around 130 pages or so. Exciting!", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2014/12/17/download.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"20b5a507-3900-4d94-85af-46c96ac11384\"}, {\"type\": \"paragraph\", \"value\": \"1st pass, still working on a lot of the design BUT it's starting to look pretty awesome. Full book is going to be around 130 pages or so. Exciting!\", \"id\": \"a4a3dcfc-c0fe-4b7c-acdc-bfd20f7a2ebb\"}]", "date": "2014-12-17T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2014/12/17/download.png", "categories": [2, 5, 8]}}, {"model": "blog.postpage", "pk": 46, "fields": {"excerpt": "Just wanted to put out a quick post to remind y'all that the Hello Web App: Intermediate Concepts Kickstarter is ending in less than a week", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"full video\\\">\\r\\n    <iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/hh03r08bJYk\\\" frameborder=\\\"0\\\" allowfullscreen='allowfullscreen'></iframe>\\r\\n</figure>\", \"id\": \"601d1f83-7153-44e8-9e3a-dc84a576bca4\"}, {\"type\": \"paragraph\", \"value\": \"^^^ My dorky update video!\\r\\n\\r\\nJust wanted to put out a quick post to remind y'all that the Hello Web App: Intermediate Concepts Kickstarter is ending in *less than a week!*\\r\\n\\r\\nCampaign link: \\r\\n[https://www.kickstarter.com/projects/1868398473/hello-web-app-intermediate-concepts](https://www.kickstarter.com/projects/1868398473/hello-web-app-intermediate-concepts)\\r\\n\\r\\nKickstarter backers will get the new book in December (and if you don't have #1 yet, those rewards will ship next month.)\\r\\n\\r\\nPre-order your next Hello Web App book and continue your web app development journey!\", \"id\": \"39b4d590-cdae-48f7-b95c-ece633689dd4\"}]", "date": "2015-09-28T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/9/28/1.jpg", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 47, "fields": {"excerpt": "The Kickstarter alpha version PDF of Hello Web App has been released! If you're a backer ($10 and above), check your email for a Kickstarter update with the link. There are still some minor things wrong (screenshots need to be retaken...)", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2014/12/29/download.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Preview of the Hello Web App PDF</figcaption>\\r\\n</figure>\", \"id\": \"2ac28d44-5df6-46d0-8dba-e0ff2a20103d\"}, {\"type\": \"paragraph\", \"value\": \"The Kickstarter alpha version PDF of Hello Web App has been released! If you're a backer ($10 and above), check your email for a Kickstarter update with the link.\\r\\n\\r\\nThere are still some minor things wrong (screenshots need to be retaken, code snippets need some more styling, might be typos/issues still) but overall \\u2014 95% done. It's quite exciting.\\r\\n\\r\\nNow to finish up the ebook and print versions!\", \"id\": \"a97474db-fa65-44d8-a4e1-3a81d5ccd0f2\"}]", "date": "2014-12-29T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2014/12/29/download.png", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 48, "fields": {"excerpt": "The most gorgeous website in the world is useless if folks using that website can\u2019t achieve what they want to do. It's more important that your design works well than how it looks. How to tell whether your design is working well?", "featured": true, "body": "[{\"type\": \"paragraph\", \"value\": \"[Part 1](https://hellowebbooks.com/news/tutorial-design-for-nondesigners/) of this article series focused on the visual (since that\\u2019s usually what folks are looking for help with when it comes to design), **but it\\u2019s important to remember that usability trumps beauty**.\\r\\n\\r\\nThe most gorgeous website in the world is useless if folks using that website can\\u2019t achieve what they want to do.\\r\\n\\r\\n## Don\\u2019t forget the user experience.\\r\\nIt\\u2019s more important that your design _works well_ than how it looks. How to tell whether your design is working well?\\r\\n\\r\\nTo illustrate this, think of a form.\", \"id\": \"e713fdd2-cc42-4789-ac2c-ec3b2608fba3\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd2/form.png\\\" alt=\\\"Basic form\\\" style=\\\"border-width: 0;\\\"/>\\r\\n</figure>\", \"id\": \"e778bc87-9fa7-4725-8428-4dad2c9a1773\"}, {\"type\": \"paragraph\", \"value\": \"We can use design tricks like reducing clutter and better typefaces to make the form _look_ nicer, but we also need to make sure it\\u2019s easy to read and fill out.\", \"id\": \"129a2e34-023f-43c2-a41e-99d93b503891\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd2/form2.png\\\" alt=\\\"Usability nightmare\\\" style=\\\"border-width: 0;\\\"/>\\r\\n    <figcaption>Technically the form on the left uses all the tactics we discussed in Part 1, but it\\u2019s a nightmare for usability. The one on the right is more usable, meaning our conversion rate should go up, which is more important than just design.</figcaption>\\r\\n</figure>\", \"id\": \"919ec7c8-344c-4adc-86dd-4277fafd23ee\"}, {\"type\": \"paragraph\", \"value\": \"Of course, this tip really depends on what you\\u2019re designing, so here are some general thoughts to help you keep thinking about user experience.\\r\\n\\r\\n### Determine the purpose of your site.\\r\\n\\r\\nFor a personal website, perhaps you want folks to visit as many pages as possible. For a form, the number of submissions is probably the most important metric.\\r\\n\\r\\n### Make sure you\\u2019re thinking about that purpose when making your design.\\r\\n\\r\\nMake decision decisions that make it easier for folks to fulfill that purpose you determined for what you\\u2019re designing. That\\u2019s why the most important buttons (the ones we want folks to see and click on) are bright, clickable colors.\", \"id\": \"b3efd4fc-047b-475a-82c2-66e5805b916a\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd2/colorpop.png\\\" alt=\\\"Images with pops of color.\\\" style=\\\"border-width: 0;\\\"/>\\r\\n    <figcaption>Bright buttons or bright widgets catch the eye and tell the user \\u201cthis is the thing I want you to see and use.\\u201d\\r\\n</figcaption>\\r\\n</figure>\", \"id\": \"5f7933f2-7e16-4a72-849c-32a603ca2070\"}, {\"type\": \"paragraph\", \"value\": \"Think about what you want people to do, and focus on building a design that helps, not hinders, folks from completing that purpose.\\r\\n\\r\\nA lot has been written about improving usability and the number of visitors who achieve a goal (otherwise known as \\u201cconversion rate\\u201d). Here are some great articles:\\r\\n\\r\\n* [8 Ways to Improve the Usability of Your Website](https://www.quicksprout.com/2014/08/08/8-ways-to-improve-the-usability-of-your-website/) on Quicksprout\\r\\n* [5 Design Principles To Instantly Boost The Conversion Rate Of Your Website](https://vwo.com/blog/design-principles-increase-conversions/) on VWO\\r\\n* [5 Psychological Principles of High Converting Websites (+ 20 Case Studies)](https://blog.kissmetrics.com/psychological-principles-converting-website/) on Kissmetrics.\\r\\n\\r\\n## Content matters.\\r\\nYour headlines, paragraphs, form labels, button text\\u2014your content matters just as much as your visual design. What you write can drastically affect whether your visitors understand what you\\u2019ve designed and whether they complete the purpose of your design.\\r\\n\\r\\nSome basic rules of thumb:\\r\\n\\r\\n### Less is more. Cut down on text clutter.\\r\\n\\r\\nIn [Part 1](https://hellowebbooks.com/news/tutorial-design-for-nondesigners/) of this series, we talked about design decisions we can make to reduce clutter. Guess what \\u2014 clutter matters when it comes to content as well!\\r\\n\\r\\n**Big paragraphs of text are intimidating.** Folks on the web primarily skim websites, so giant paragraphs of text are more likely to be completely skipped than read thoroughly.\\r\\n\\r\\nThis sentence is long and wordy:\\r\\n\\r\\n> Please note that although Chrome is supported for both Mac and Windows operating systems, it is recommended that all users of this site switch to the most up-to-date version of the Firefox web browser for the best possible results.\\r\\n\\r\\nSame sentence, rewritten for simplicity:\\r\\n\\r\\n> For best results, use the latest version of Firefox. Chrome for Mac and Windows is also supported.\\r\\n\\r\\n(Thanks to [Peachpit](http://www.peachpit.com/articles/article.aspx?p=1636692&seqNum=20) for the example.)\\r\\n\\r\\nIn a nutshell, **shorten and simplify your writing.** Avoid the temptation to use large words or wordy sentences to cover all the bases\\u200a\\u2014\\u200athe shorter and simpler your sentences, the more likely they\\u2019ll be read, understood, and even translated into different languages.\\r\\n\\r\\n### Rewrite your headlines to talk benefits, not details.\\r\\n\\r\\nImprove the excitement and interest in what you\\u2019re \\u201cselling\\u201d by writing headlines that tell users why they should be excited.\\r\\nWhen you\\u2019re writing a headline, the first thing to pop in your head might be to explain what the product does. _\\u201cSo-and-so is a designer.\\u201d \\u201cThis thing is a widget.\\u201d_\\r\\n\\r\\n**Revamp that headline into talking benefits for the person reading it.** _\\u201cSo-and-so designs usable and beautiful websites.\\u201d \\u201cThis thing improves website conversions by 30%.\\u201d_\", \"id\": \"fd9f3c79-6f46-4883-87f5-447c85f3a8b8\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd2/headline.jpeg\\\" alt=\\\"Before and after headline change.\\\"/>\\r\\n    <figcaption>Left, what the book is about. Right, what the book does for the reader. Benefits are more compelling than details!\\r\\n</figcaption>\\r\\n</figure>\", \"id\": \"2b63c878-5962-453b-842e-4e839e2d3e3f\"}, {\"type\": \"paragraph\", \"value\": \"Content changes like this can drastically improve conversions (the amount of people who hit your website that does what you want them to do), making what you design _more effective._\\r\\n\\r\\nFor more reading about content, check out these resources:\\r\\n\\r\\n* [Five tips for improving your technical writing and documentation](https://medium.com/@limedaring/five-tips-for-improving-your-technical-writing-and-documentation-47353723c8a7#.2dlbspbta)\\r\\n* [Case study: How a simple headline change improved conversions by 52.8%](https://www.webprofits.com.au/blog/case-study-headline/)\\r\\n* [Always Use a Benefit Headline](http://www.copyengineer.com/post_benefit_headlines/)\\r\\n\\r\\n## How to check your design for usability problems.\\r\\nThe best way to find problems with the user experience and usability of your design is to run quick usability tests. This can be tough psychologically, because you\\u2019ll need to show what you\\u2019ve designed to others and get feedback, and sometimes that feedback might hurt.\\r\\n\\r\\n**Divorce your feelings from your design.** It might be hard not to take negative feedback personally, but fixing the issues you might find with the usability of your site is more important. The more you reach out to others for feedback, the easier it\\u2019ll be.\\r\\n\\r\\nMy step-by-step process for finding usability errors in my designs:\\r\\n\\r\\n### 1. Take a break and look at the design with fresh eyes.\\r\\nSince you made your design, it\\u2019s going to be hard to see any usability issues\\u200a\\u2014\\u200aafter all, you know where everything is and how to use everything because you\\u2019re the one who built it.\\r\\n\\r\\nTaking a break from the design, a couple hours or, even better, overnight, means you can look at the design with fresh eyes and catch some problems you might have missed earlier.\\r\\n\\r\\n### 2. Run your design by friends and family.\\r\\nThe least intimidating folks to ask for help will be your friends and family, but keep in mind they\\u2019ll also be resistant to giving you any sort of negative feedback. Make sure to remind them that you want more feedback than just, \\u201cLooks awesome, good job!\\u201d\\r\\n\\r\\n### 3. Run your design by strangers and watch them use your site.\\r\\nThe most honest feedback will come from folks you don\\u2019t know, but this is also the hardest feedback to get. For small stuff like your personal website, you can probably skip this step, but if you\\u2019re working on a website for a project you want customers to use, this step can find crucial issues.\\r\\n\\r\\nHere\\u2019s a great article on [running quick and dirty usability tests](http://www.creativebloq.com/quick-and-dirty-usability-testing-9134469).\\r\\n\\r\\n## In conclusion, make sure your design works as well as it looks.\\r\\nThe best looking design means nothing if your users can\\u2019t achieve what they or you want them to do.\\r\\n\\r\\n* **Think about the purpose of your design**, whether it\\u2019s getting someone to fill out a form, to find information, or something use.\\r\\n* **Make sure your designs support that purpose** and improve the user experience with that in mind.\\r\\n* **Don\\u2019t forget about your content** \\u2014 simplify your words and write content and headlines that talk benefits, not details.\\r\\n* **Show your designs to others** and get feedback to find where user experience issues might be hiding.\\r\\n\\r\\n***\\r\\n\\r\\nThis is a three part series on design for non-designers. [See Part 1 about design and clutter here](https://hellowebbooks.com/news/tutorial-design-for-nondesigners/) and [Part 3 about training your design intuition here](https://hellowebbooks.com/news/tutorial-design-for-non-designers-part-3/).\", \"id\": \"75f45195-b9c0-4394-a862-1871fe70a3eb\"}, {\"type\": \"html\", \"value\": \"<a href=\\\"https://hellowebbooks.com/learn-design\\\"><img src=\\\"/static/images/blog/2017/11/dfnd1/IMG_6545-xsmall.jpg\\\" alt=\\\"Hello Web Design\\\" style=\\\"max-width: 300px; float:left; margin-right: 40px;\\\"/></a>\\r\\n\\r\\n<p><strong>You can get even more info and tips in my book!</strong> <i>Hello Web Design</i> will contain not only the above information but also theory and best-practices in down-to-earth and easy-to-understand terms aimed at programmers and non-designers.</p>\\r\\n\\r\\n<div style=\\\"margin: 1em 0\\\">\\r\\n    <a href=\\\"https://hellowebbooks.com/learn-design\\\" class=\\\"btn btn-primary\\\">Buy Hello Web Design</a>\\r\\n    <br/><small><em>Prices start at $14.95 for the eBook.</em></small>\\r\\n</div>\", \"id\": \"4beeec72-abbc-4ab7-9c33-071325b71ec1\"}, {\"type\": \"paragraph\", \"value\": \"Thanks everyone! For any questions, [follow and message me on Twitter](https://twitter.com/limedaring).\\r\\n\\r\\nThoughts? Questions? Let me know in the comments below!\", \"id\": \"fe700dbc-b826-40d7-841c-c6f5ff5b5bbe\"}]", "date": "2017-11-29T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2017/11/dfnd2/banner.jpeg", "categories": [3, 5, 9]}}, {"model": "blog.postpage", "pk": 49, "fields": {"excerpt": "Part 1 of this design series dealt with the visual design, and Part 2 delved into user experience, content, and testing. Here, we\u2019re going to jump into a bit about theory and reassurances that will help you become a better designer.", "featured": true, "body": "[{\"type\": \"paragraph\", \"value\": \"[Part 1](https://hellowebbooks.com/news/tutorial-design-for-nondesigners/) of this design series dealt with the visual design, and [Part 2](https://hellowebbooks.com/news/tutorial-design-for-non-designers-part-2/) delved into user experience, content, and testing.\\r\\n\\r\\nHere, we\\u2019re going to jump into a bit about theory and reassurances that will **help you become a better designer**.\\r\\n\\r\\n## Steal like an artist.\\r\\n\\r\\nImagine June\\u2014she\\u2019s a developer who needs to build a new personal homepage to showcase her open source design work. June sits down at her desk and wipes it clear, then pulls out some paper and pens and starts sketching her ideas.\\r\\n:e\\r\\n\\r\\nSounds great in theory, right?\\r\\n\\r\\nIt\\u2019s far more likely that June will sit and twiddle her fingers, sketch some ideas, get frustrated, try sketching again, then ball her paper up and throw it away.\\r\\n\\r\\nI know this because *I go through this process every time myself* if I try to design without researching and finding inspiration first.\\r\\n\\r\\n**Simply put, sitting down to try to sketch ideas from scratch without using any sort of inspiration is a lot like trying to program without having Google or Stack Overflow at your fingertips.**\", \"id\": \"23bceb81-c55b-498a-b0c6-d16b7c71d9ac\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd3/meme.png\\\" alt=\\\"Not sure if good developer or good at Googling.\\\" style=\\\"border-width: 0;\\\"/>\\r\\n    <figcaption>Designing without inspiration is like programming without Google or Stack Overflow.\\r\\n</figcaption>\\r\\n</figure>\", \"id\": \"9227a5cb-1342-4f01-b26f-eeeb88b8a3f3\"}, {\"type\": \"paragraph\", \"value\": \"**Think of inspiration like visual debugging.** Looking at great design and inspiration will help you figure out solutions to problems you may run into when creating your own designs.\\r\\n\\r\\nWhere to find inspiration? For web design, there are tons of websites that simply collect and share good designs.\", \"id\": \"782c589c-f826-44cc-b2c5-1e1fd100cbf3\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd3/inspiration.jpg\\\" alt=\\\"Inspiration options\\\" style=\\\"border-width: 0;\\\"/>\\r\\n    <figcaption>CSSMania, Unmatched Style, Awwwards, and Site Inspire are just a few options to find web design inspiration.</figcaption>\\r\\n</figure>\", \"id\": \"484e0752-0e6f-4479-85cf-5359056b8f79\"}, {\"type\": \"paragraph\", \"value\": \"Of course, **_do not rip off designs_**. If you find something you like, you can do something similar but ripping off something verbatim is a very big no-no.\\r\\n\\r\\nMy Hello Web App books are inspired by the wonderful *A Book Apart* books:\", \"id\": \"427ce823-a72a-4a00-a4f6-158f2da177d4\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd3/books.jpg\\\" alt=\\\"Hello Web App vs. A Book Apart\\\" style=\\\"border-width: 0;\\\"/>\\r\\n    <figcaption>The A Book Apart books have such a beautiful design, which inspired my typography and colors.</figcaption>\\r\\n</figure>\", \"id\": \"9c4efc4d-d3e8-4ed0-aa7f-49f73ded69f6\"}, {\"type\": \"paragraph\", \"value\": \"I\\u2019m particularly proud of the design I made for *Hello Web App*, but I sincerely don\\u2019t think they would have turned out as nice as they did without being heavily inspired by *A Book Apart*. Seeing those books helped me determine what I liked in terms of size and thickness, not to mention the flat wonderful colors inspired my own graphic treatment of the *Hello Web App* cover.\\r\\n\\r\\nWhen you find something you love, something that you\\u2019d like to do yourself\\u2014whether it\\u2019s layout, colors, font choices, etc\\u2014use that as inspiration to **build something similar but not exactly the same**.\\r\\n\\r\\n## Train your design eye and intuition.\\r\\nOne of the most useful activities you can do to make yourself better at design is to **look at other designs and think critically about what it\\u2019s doing well and what it\\u2019s doing poorly.** Great process to practice while you\\u2019re looking for inspiration!\\r\\n\\r\\nThe more you do this (with good designs as well as bad), the more you\\u2019ll train your \\u201cdesign eye\\u201d and design intuition, making it easier for you to create good designs from scratch.\\r\\n\\r\\nLet\\u2019s use the an old Slack homepage design as an example:\", \"id\": \"5dd8be20-7e3a-4fd3-9a27-cfe37d36634f\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd3/slack.jpg\\\" alt=\\\"An old Slack homepage\\\" style=\\\"border-width: 0;\\\"/>\\r\\n    <figcaption>Slack consistently has great looking homepage designs, great for practicing picking out good design decisions.</figcaption>\\r\\n</figure>\", \"id\": \"91ad87eb-60f7-4068-9ddb-eb99eab21405\"}, {\"type\": \"paragraph\", \"value\": \"Using the principles we went over above, what would you say they\\u2019re doing well? Some of the details I\\u2019ve picked out:\\r\\n\\r\\n* **Lots of whitespace.** It doesn\\u2019t feel like a lot since the background \\u201cfills in\\u201d the space, but check out the space between the headline and the top of the page\\u200a\\u2014\\u200ait\\u2019s actually quite an airy design.\\r\\n* **Unique headline effect.** In the live version of the site, the headline actually animates in. Even in the static version above, the\\u201chand-drawn\\u201d underline effect is an unusual element which draws the eye.\\r\\n* **Important words are bolded in the content.** Both \\u201cNASA\\u2019s Jet Propulsion Laboratory\\u201d and \\u201cSlack\\u201d are bold, so you see them first which associates Slack with the prestigious organization.\\r\\n* **Main button is a bright, stand-out color.** The background is brown and the \\u201cCreate a new team\\u201d button is a lovely contrasting light green. It\\u2019s complementary and yet eye-catching.\\r\\n* **Main form has a dark background.** This ensures the text on top is easy to read (since it\\u2019s smaller) as well as making the form more eye-catching.\\r\\n\\r\\nWhat else can you see that are good design decisions?\\r\\n\\r\\n**Start browsing the web a bit more mindfully and think critically about what designs are doing and your design intuition will improve.** Making this a practice will make it easier for you to make better designs naturally.\\r\\n\\r\\nThis is especially important when you\\u2019re actively working on a new design. Start out by looking for inspiration in examples of good design in your field as well as looking at your competitors. Pick out what they\\u2019re doing well and implement those ideas in your own design. Pick out what you think isn\\u2019t working well (especially in your competitor\\u2019s designs) and make sure you avoid those things in your own design.\\r\\n\\r\\n## Remember: Design will never feel easy.\\r\\nI\\u2019ve been building websites since I was twelve (20 years of website development!) and I hold an Art &amp; Design degree\\u2026 and without fail, this is the thought process I have every time I start to work on a new design:\\r\\n\\r\\n> \\u201ccrap crap crap crap crap crap crap crap crap crap crap crap crap crap crap crap crap crap crap crap crap crap crap crap crap crap crap \\u2026 yes!\\u201d\\r\\n\\r\\n**The first sketches, the first iterations of a design always feel terrible.** I stress and worry about how bad my designs feel when I start, until the magical moment when something works and the design starts to come together. Sometimes it isn\\u2019t \\u201cyes!\\u201d, sometimes it can be \\u201cmaybe?\\u201d But it\\u2019s never \\u201cyes!\\u201d right from the start.\\r\\n\\r\\nIf you\\u2019re new to design and you feel like your initial iterations are awful\\u200a\\u2014\\u200ait doesn\\u2019t mean you\\u2019re a bad designer. **It means you\\u2019re a designer.**\\r\\n\\r\\n***\\r\\n\\r\\nThis is a three part series on design for non-designers. [See Part 1 about design and clutter here](https://hellowebbooks.com/news/tutorial-design-for-nondesigners/) and  [See Part 2 about user experience here](https://hellowebbooks.com/news/tutorial-design-for-non-designers-part-2/).\", \"id\": \"6f52ca58-472d-4a9b-81b5-edccd4d1d260\"}, {\"type\": \"html\", \"value\": \"<a href=\\\"https://hellowebbooks.com/learn-design\\\"><img src=\\\"/static/images/blog/2017/11/dfnd1/IMG_6545-xsmall.jpg\\\" alt=\\\"Hello Web Design\\\" style=\\\"max-width: 300px; float:left; margin-right: 40px;\\\"/></a>\\r\\n\\r\\n<p><strong>You can get even more info and tips in my book!</strong> <i>Hello Web Design</i> will contain not only the above information but also theory and best-practices in down-to-earth and easy-to-understand terms aimed at programmers and non-designers.</p>\\r\\n\\r\\n<div style=\\\"margin: 1em 0\\\">\\r\\n    <a href=\\\"https://hellowebbooks.com/learn-design\\\" class=\\\"btn btn-primary\\\">Buy Hello Web Design</a>\\r\\n    <br/><small><em>Prices start at $14.95 for the eBook.</em></small>\\r\\n</div>\", \"id\": \"d1248ba1-a872-4582-802e-e0b2bc7ec17d\"}, {\"type\": \"paragraph\", \"value\": \"Thanks everyone! For any questions, [follow and message me on Twitter](https://twitter.com/limedaring).\\r\\n\\r\\nThoughts? Questions? Let me know in the comments below!\", \"id\": \"29c9478a-e11e-4aa3-9b5a-e1b2b5b8d21a\"}]", "date": "2017-12-11T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2017/11/dfnd3/banner.jpeg", "categories": [3, 5, 9]}}, {"model": "blog.postpage", "pk": 50, "fields": {"excerpt": "Even if you\u2019re not a designer, I\u2019d bet that at some point in your career you\u2019ll need to do something visual, whether it\u2019s making a landing page for your project, designing a form, creating your personal website, or making slides. So, part one: what\u2019s the one main thing to remember when designing?", "featured": true, "body": "[{\"type\": \"paragraph\", \"value\": \"Even if you\\u2019re not a designer, I\\u2019d bet that at some point in your career you\\u2019ll need to do something visual, whether it\\u2019s making a landing page for your project, designing a form, creating your personal website, or making slides.\\r\\n\\r\\nSo, part one \\u2014 **what\\u2019s the one main thing to remember when designing?**\\r\\n\\r\\n### Reduce clutter.\\r\\nThat\\u2019s it. Focus on just this one thing. If you want your design to feel more beautiful, _reduce visual clutter._\", \"id\": \"620a48fc-6f74-4bb7-95db-4d2a4e2e242f\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd1/2.0----2_0_image_0.png\\\" style=\\\"max-width:400px; border-width: 0;\\\" alt=\\\"Ugly widget\\\"/>\\r\\n    <figcaption>Our ugly widget that we\\u2019re going to apply design concepts to.</figcaption>\\r\\n</figure>\", \"id\": \"a258f2b5-4e37-44a7-87e0-ae2dee032fd4\"}, {\"type\": \"paragraph\", \"value\": \"I made these little widget to help illustrate these clutter-busting tips. As we go through the concepts below, we\\u2019ll apply them to the widget and see how it starts to look more cohesive and visually appealing.\\r\\n\\r\\nLet\\u2019s get started!\\r\\n\\r\\n## Reduce clutter by adding a grid to line things up.\", \"id\": \"a3e71b68-99bf-4513-88cc-a6244bcf246f\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd1/foundation.png\\\" alt=\\\"Foundation front-end framework\\\"/>\\r\\n    <figcaption>Image via the Foundation front-end framework.</figcaption>\\r\\n</figure>\", \"id\": \"b38fbeb2-6f50-47b3-8a49-4ceb85d5861e\"}, {\"type\": \"paragraph\", \"value\": \"There\\u2019s an anecdote often told about the strife between designers and front-end developers: A designer gives a mockup to a developer, who implements the design in code. The designer then complains that so-and-so element is two pixels off, causing the developer to roll their eyes\\u200a\\u2014\\u200atwo pixels? That\\u2019s so small it shouldn\\u2019t matter! Silly designers and their nitpicking!\\r\\n\\r\\nHowever, **small misalignments might be hard to see, but contribute to a feel of \\u201cclutter\\u201d within a design**. Elements can feel randomly placed and not harmonious when they\\u2019re not aligned with each other.\", \"id\": \"7983bed4-8697-4a7e-861f-22290002d967\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd1/forward.png\\\" alt=\\\"Before/after lining things up\\\"/>\\r\\n    <figcaption>Which looks more cohesive?</figcaption>\\r\\n</figure>\", \"id\": \"eae7e7f7-b8df-4062-8e30-67ff24338418\"}, {\"type\": \"paragraph\", \"value\": \"It\\u2019s easy to add accidental misalignments by accidentally adding extra padding and margins to headlines and content. In the example above, the screenshot on the right has even margins and padding, and all the elements are aligned to the same left grid, leading to a more cohesive and professional-looking design.\", \"id\": \"4fe79387-85f4-4870-a0c8-589882661eb0\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd1/widget.png\\\" alt=\\\"Lining up stuff in our widget\\\" style=\\\"border-width: 0;\\\"/>\\r\\n    <figcaption>Lining up the left and right edges of everything makes the widget look a bit more cohesive.</figcaption>\\r\\n</figure>\", \"id\": \"639b86ba-2198-473d-9563-ecd4c209b3e4\"}, {\"type\": \"paragraph\", \"value\": \"In our example widget, the left and right margins were all over the place. Aligning those margins instantly makes the widget feel less chaotic.\\r\\n\\r\\n**In short, reduce the clutter-y feeling by lining things up.**\\r\\n\\r\\nFor web work, use shortcuts by using front-end web frameworks that include a grid, such as [Foundation](http://foundation.zurb.com/), [Bootstrap](http://getbootstrap.com/css/), [Skeleton](http://getskeleton.com/), and [PureCSS](http://purecss.io/), which\\u2019ll make it near-impossible to use random placement of HTML elements.\\r\\n\\r\\nFor non-web-design work and mockups, you can also use grids and guides within design programs like [Sketch](https://www.sketchapp.com/learn/documentation/canvas/rulers-guides-grids/), [Photoshop](https://1200px.com/), and [Gimp](https://docs.gimp.org/en/gimp-view-show-grid.html).\\r\\n\\r\\n## Reduce clutter by limiting the colors in your design.\\r\\nIt can be super tough to choose colors, one of the reasons why color theory is often a semester-long class at design schools.\", \"id\": \"a13e505d-9e3f-4c9e-bd4e-4f0238758da6\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd1/godaddy.jpeg\\\" alt=\\\"GoDaddy before and after\\\"/>\\r\\n    <figcaption>Old GoDaddy site versus current.</figcaption>\\r\\n</figure>\", \"id\": \"a32c6336-1d67-4286-8697-50c3b792e0db\"}, {\"type\": \"paragraph\", \"value\": \"One thing we can see in the old GoDaddy site above is the sheer numbers of colors used throughout the design. Red, green, orange, dark grey, light grey, yellow, and blue all are featured \\u2014 and this rainbow display of colors contributes (along with other factors) to a severe feeling of clutter.\\r\\n\\r\\nThe current GoDaddy website is much cleaner, using the same shades of black, green, and orange throughout the design. The photo is also mostly gray, allowing it to fade to the background and let the green button on the form stand out.\\r\\n\\r\\nThere is a lot of theory and best practices behind choosing colors that would overwhelm this article, which is why here especially I advocate for using shortcuts.\", \"id\": \"88eb6468-82f1-43fe-b72b-054c3478b286\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd1/adobecolorcc.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>The Adobe Color CC website has a great point-and-click interface to build complementary color palettes.</figcaption>\\r\\n</figure>\", \"id\": \"9b00483a-c9b4-4341-8345-e379e3a6eb70\"}, {\"type\": \"paragraph\", \"value\": \"**Choosing a color palette from scratch is a tricky business, which is why I like to rely on websites that showcase pre-built color palettes or help you build palettes from a base color,** such as [Colormind](http://colormind.io), [Adobe Color CC](https://color.adobe.com/), and [Colorblendy](http://colorblendy.com/). These sites will help you build a palette that contains a small number of colors that work well together.\", \"id\": \"79df9992-5096-4641-a1ad-3b5ce0d541a4\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd1/color.png\\\" alt=\\\"Applying a color palette to our widget\\\" style=\\\"border-width: 0;\\\"/>\\r\\n    <figcaption>Applying a color palette.</figcaption>\\r\\n</figure>\", \"id\": \"e8c2f910-7aec-4823-a062-3714b1d9fd02\"}, {\"type\": \"paragraph\", \"value\": \"For our widget, we grabbed a palette and applied it to the widget. Note that not all colors have to be used, and the neither does the exact colors specified in the palette. The new \\u201cDownload\\u201d button is not quite the same dark peach as in the palette, but the palette gave us a great starting point.\\r\\n\\r\\nIf you\\u2019d like to learn more about the process of building colors, I\\u2019d recommend this excellent article on Smashing Magazine: [A Simple Web Developer\\u2019s Guide To Color](https://www.smashingmagazine.com/2016/04/web-developer-guide-color/).\\r\\n\\r\\n## Reduce clutter by reducing the number of fonts you use.\\r\\nThank goodness we have more fonts available to us now! Gone are the days of only having a few fonts to choose from.\\r\\n\\r\\nTypography is another big subject that can be overwhelming. Serif, sans-serif, monospace, display, web-safe, and slab are all terms used to describe and categorize fonts and typefaces (terms which are generally used interchangeably for non-typographers).\\r\\n\\r\\nThere are a lot of guidelines when it comes to choosing a font but I like to recommend just two to start: **Use only two fonts per design and avoid fancy/display fonts.**\", \"id\": \"1a9c6046-f658-48d4-bde8-0e5b3e304ddd\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd1/type.png\\\" alt=\\\"Updating the typefaces on our widget.\\\" style=\\\"border-width: 0;\\\"/>\\r\\n    <figcaption>Using only two typefaces makes the widget look and feel cleaner.</figcaption>\\r\\n</figure>\", \"id\": \"7e7d7e6b-53d4-40a3-8713-2c29d0d45b95\"}, {\"type\": \"paragraph\", \"value\": \"Our original widget on the left uses four different fonts, and our refreshed widget on the right uses just two. The new widget uses styles like italics and all-caps which still lends a feeling of difference between different elements but overall feels more cohesive.\\r\\n\\r\\nBut choosing two fonts with all the options we have available can still be overwhelming. Sites like [Typekit](https://typekit.com/) (free to $99/year) and [Google Fonts](http://fonts.google.com/) (free) are great resources for professional, beautiful fonts, but contain hundreds of options to choose between them.\", \"id\": \"6646d77a-24aa-468b-8f86-8526904b2b8e\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd1/fontservices.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Use sites that curate free fonts like <a href=\\\"https://www.typewolf.com/google-fonts\\\">Typewolf</a>, <a href=\\\"http://chad.is/beautiful-web-type/\\\">Beautiful Web Type</a>, <a href=\\\"http://fontpair.co/\\\">Font Pair</a>, and <a href=\\\"https://typ.io/libraries/google\\\">Typ.io</a>.</figcaption>\\r\\n</figure>\", \"id\": \"8122295e-c52d-4032-8240-b811bccae082\"}, {\"type\": \"paragraph\", \"value\": \"Reduce choice by using a font-curation site to see a more limited number of fonts and see them in action. A number of websites list the best Google Fonts available, including [Typewolf](https://www.typewolf.com/google-fonts), [Beautiful Web Type](http://chad.is/beautiful-web-type/), [Font Pair](http://fontpair.co/), and [Typ.io](https://typ.io/libraries/google). **No longer will you need to scroll through hundreds of fonts\\u2014simply browse these sites until a combination feels right for you and your situation.**\\r\\n\\r\\nFor more about choosing typefaces, check out this excellent Smashing Magazine article: [How To Choose A Typeface\\u200a\\u2014\\u200aA Step-By-Step Guide](https://www.smashingmagazine.com/2011/03/how-to-choose-a-typeface/).\\r\\n\\r\\nA Book Apart also has an excellent book that goes into web typography in detail: [On Web Typography](https://abookapart.com/products/on-web-typography)\\r\\n\\r\\n## Reduce the feeling of clutter by adding whitespace.\\r\\n**Whitespace is the ultimate clutter reducer.**\\r\\n\\r\\nWe have a tendency as beginning designers to push too much information close together. Large, empty gaps feel uncomfortable and unnatural and beginners often have the urge to fill empty space (otherwise known as whitespace or negative space) with information and elements.\", \"id\": \"605b2dfc-80b9-4bf4-bfa5-590969b2422e\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd1/personalsite.jpeg\\\" alt=\\\"Before and after adding whitespace to my personal website.\\\"/>\\r\\n    <figcaption>Before and after adding white-space to my personal website.</figcaption>\\r\\n</figure>\", \"id\": \"a828da6d-5396-45fa-98c7-9e00c9490318\"}, {\"type\": \"paragraph\", \"value\": \"However, whitespace in design (the margins and padding around our elements as well as space between our text and letters) makes our words more readable, our interfaces less chaotic, and our designs feel more professional.\", \"id\": \"133f7ba5-76fe-4fe6-86c4-b8bda38f7ec5\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd1/whitespace.png\\\" alt=\\\"Before and after of adding whitespace to the widget.\\\" style=\\\"border-width: 0;\\\"/>\\r\\n    <figcaption>Adding whitespace (and normalizing the space between elements) makes the widget feel more professional.</figcaption>\\r\\n</figure>\", \"id\": \"88df7140-df63-45f9-92b2-f656e3162df9\"}, {\"type\": \"paragraph\", \"value\": \"**By adding whitespace in a number of places in our widget** \\u2014 between the content and the edges of the green background, between the headline and the paragraph, between the individual lines of text, and within our form \\u2014 **our widget feels more professional and is easier to read.**\\r\\n\\r\\nThere isn\\u2019t a good shortcut to use here, just a reminder: **Use more whitespace than you think you need.** Make sure your elements in whatever you\\u2019re designing has plenty of margins and space between them, that your text has plenty of space/line-height between the individual lines, and that your design has plenty of space between the content and the edges of the space.\\r\\n\\r\\nFor more, check out these excellent articles:\\r\\n\\r\\n* [Whitespace in Web Design: What It Is and Why You Should Use It](http://blog.teamtreehouse.com/white-space-in-web-design-what-it-is-and-why-you-should-use-it)\\r\\n* [Using White Space (or Negative Space) in Your Designs](https://webdesign.tutsplus.com/articles/using-white-space-or-negative-space-in-your-designs--webdesign-3401)\\r\\n\\r\\n## In conclusion, remember to reduce clutter for a better looking and feeling design.\", \"id\": \"1b1ee4f4-37d7-4d5b-9206-c6a613b24fa2\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2017/11/dfnd1/beforeafter.png\\\" alt=\\\"The progress on our widget.\\\" style=\\\"border-width: 0;\\\"/>\\r\\n    <figcaption>Each of the clutter-reducing principles applied to this widget has vastly improved its looks.</figcaption>\\r\\n</figure>\", \"id\": \"6ccd0a97-4181-4014-b0e8-5e7a8ed8971d\"}, {\"type\": \"paragraph\", \"value\": \"* Line things up and use a grid.\\r\\n* Limit the number of colors in your design and use a complementary color palette.\\r\\n* Reduce the number of fonts used.\\r\\n* Add whitespace.\\r\\n\\r\\nIn short, aim for a \\u201cclean\\u201d and orderly design.\\r\\n\\r\\n**Of course, design isn\\u2019t just how it looks\\u200a\\u2014\\u200amore importantly, it\\u2019s how it works.** Stay tuned for part two and part three of this article series, going into user experience as well as looking into the design process and tactics on how you can train your design eye.\\r\\n\\r\\n***\\r\\n\\r\\nThis is a three part series on design for non-designers. [See Part 2 about user experience here](https://hellowebbooks.com/news/tutorial-design-for-non-designers-part-2/) and [Part 3 about training your design intuition here](https://hellowebbooks.com/news/tutorial-design-for-non-designers-part-3/).\", \"id\": \"9d00b8b5-6f45-41c4-a69a-d991e3ff961b\"}, {\"type\": \"html\", \"value\": \"<a href=\\\"https://hellowebbooks.com/learn-design\\\"><img src=\\\"/static/images/blog/2017/11/dfnd1/IMG_6545-xsmall.jpg\\\" alt=\\\"Hello Web Design\\\" style=\\\"max-width: 300px; float:left; margin-right: 40px;\\\"/></a>\\r\\n\\r\\n<p><strong>You can get even more info and tips in my book!</strong> <i>Hello Web Design</i> will contain not only the above information but also theory and best-practices in down-to-earth and easy-to-understand terms aimed at programmers and non-designers.</p>\\r\\n\\r\\n<div style=\\\"margin: 1em 0\\\">\\r\\n    <a href=\\\"https://hellowebbooks.com/learn-design\\\" class=\\\"btn btn-primary\\\">Buy Hello Web Design</a>\\r\\n    <br/><small><em>Prices start at $14.95 for the eBook.</em></small>\\r\\n</div>\", \"id\": \"b39243b5-fae5-4157-a6a5-2c9ae90b8e99\"}, {\"type\": \"paragraph\", \"value\": \"Thanks everyone! For any questions, [follow and message me on Twitter](https://twitter.com/limedaring).\\r\\n\\r\\nWhat do you think? Anything I missed? Let me know in the comments below!\", \"id\": \"e4524df4-c2ce-47d4-a7b2-1921225a272a\"}]", "date": "2017-11-16T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2017/11/dfnd1/banner.jpeg", "categories": [3, 5, 9]}}, {"model": "blog.postpage", "pk": 51, "fields": {"excerpt": "In the original Hello Web App book, I walk you through the process of setting up your registration and login pages so user's can join and log into your new app. We also set up the password reset views on the login form, so if a user doesn't remember their login information, they can get a reset link emailed to them.", "featured": true, "body": "[{\"type\": \"paragraph\", \"value\": \"In the [original Hello Web App book](http://hellowebapp.com/original), I walk you through the process of setting up your registration and login pages so user's can join and log into your new app. We also set up the password reset views on the login form, so if a user doesn't remember their login information, they can get a reset link emailed to them.\\r\\n\\r\\nWe also set up the templates for the password change functionality, so logged in users can update their password, but we didn't set up the URLs and templates in order to get that working. Let's do that here!\\r\\n\\r\\n## Set up the URL\\r\\n\\r\\nWe already set up the URLs for password reset functionality \\u2014 adding the password change functionality is very similar:\", \"id\": \"938d14c1-0300-4c64-82ac-c4b2c3403433\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">urls.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\n# add to the top\\r\\nfrom django.contrib.auth.views import (\\r\\n    password_reset, \\r\\n    password_reset_done,\\r\\n    password_reset_confirm, \\r\\n    password_reset_complete,\\r\\n    # these are the two new imports\\r\\n    <b>password_change,\\r\\n    password_change_done,</b>\\r\\n)\\r\\n\\r\\nurlpatterns = [\\r\\n    # the previously added URL definitions\\r\\n    url(r'^accounts/password/reset/done/$',\\r\\n        password_reset_done,\\r\\n        {'template_name': 'registration/password_reset_done.html'},\\r\\n        name=\\\"password_reset_done\\\"),\\r\\n    # new url definitions\\r\\n    <b>url(r'^accounts/password/change/$', password_change, {\\r\\n        'template_name': 'registration/password_change_form.html'}, \\r\\n        name='password_change'),\\r\\n    url(r'^accounts/password/change/done/$', password_change_done, \\r\\n        {'template_name': 'registration/password_change_done.html'},\\r\\n        name='password_change_done'),</b>\\r\\n</code></pre>\", \"id\": \"ccc7383d-05c0-4bb8-b9ed-15ff0ce0cc5d\"}, {\"type\": \"paragraph\", \"value\": \"We're going to have two new pages on our website, one that allows for changing the password for a logged-in user, and a success page after successful reset.\\r\\n\\r\\nIn our import statement, we import django-registration-redux views for `password_change` and `password_change_done`, and then we tie those two the new URLs we're adding, linking to the templates we already set up in the original tutorial.\\r\\n\\r\\n## Add a link in the templates\\r\\n\\r\\nThe last thing we need to do is provide a link to these new pages from our app. I'm putting this in the same page where the user updates their object, but it could be put anywhere in your app:\", \"id\": \"06bd997d-76a9-4253-a10e-0ab08931bb53\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">edit_thing.html</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\n&lt;!-- add me somewhere in your app --&gt;\\r\\n&lt;a href=&quot;{% url 'password_change' %}&quot;&gt;\\r\\n    Change password\\r\\n&lt;/a&gt;\\r\\n</code></pre>\", \"id\": \"ab7600a9-93ce-4939-83db-0a5559b5ac0c\"}, {\"type\": \"paragraph\", \"value\": \"We know what URL to link to as we named it `password_change` in *urls.py*. Open up the page in your browser and you should see the new form:\", \"id\": \"084019a4-2124-440d-9163-d03a1183c98b\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2016/3/28/password-change-form.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>Our password change page, using the template we set up in the original tutorial.</figcaption>\\r\\n</figure>\\r\\n\\r\\n<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2016/3/28/password-change-done.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>The success page after updating the password.</figcaption>\\r\\n</figure>\", \"id\": \"963d857c-2590-46d0-8f89-78166c21871f\"}, {\"type\": \"paragraph\", \"value\": \"Try testing it out with one of your test users, and logging in and out using the new passwords. Everything should be working swimmingly. That's all you need to do to get the password change functionality working. Congrats!\\r\\n\\r\\n---\\r\\n\\r\\nThis tutorial is meant as an add-on to my book, _Hello Web App_, teaching beginner web app development using Django. If you haven't taken a look at it yet, check it out and buy here: [Hello Web App](https://hellowebbooks.com/learn-django/)\\r\\n\\r\\nThanks everyone, and happy to answer any questions in the comments!\", \"id\": \"fc755fe1-3618-4dd7-8857-6346aafa4987\"}]", "date": "2016-03-28T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2016/3/28/password-change-form.png", "categories": [3, 7, 8]}}, {"model": "blog.postpage", "pk": 52, "fields": {"excerpt": "This tutorial is intended as a follow-on to my book, Hello Web App, which teaches the basics of web app development \u2014 from ideation to deployment. In this walkthrough, we're going to build something relatively easy: a simple contact form where your users can enter their name, email address, and message, and your website will email you the message (with the user's email as the reply-to.)", "featured": true, "body": "[{\"type\": \"paragraph\", \"value\": \"*This tutorial is intended as a follow-on to my book, [Hello Web App](https://hellowebbooks.com/learn-django/), which teaches the basics of web app development \\u2014 from ideation to deployment. [You can order the book here (starting at $14.95).](https://hellowebbooks.com/order/)*\\r\\n\\r\\nIn this walkthrough, we're going to build something relatively easy: **a simple contact form where your users can enter their name, email address, and message**, and your website will email you the message (with the user's email as the reply-to.)\\r\\n\\r\\n## Set up the URL\\r\\n\\r\\nPretty much every new feature that'll go into your web app will go through the same process: set up the URL, set up the logic, set up the template. For the URL, we're going to set up a simple page under contact, so: *http://localhost.com/contact/*.\\r\\n\\r\\n_**Hint:** \\\"collection\\\" is the name of the specific Django app we set up in the [Hello Web App tutorial](https://hellowebbooks.com/learn-django/). Replace it with the name of your own web app._\\r\\n\\r\\nAdd the below to your *urls.py*:\", \"id\": \"693761b6-64b9-413b-a58d-ddaf2cdad6d3\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">urls.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\n# add to the top\\r\\nfrom collection import views\\r\\n\\r\\nurlpatterns = [\\r\\n    url(r'^$', views.index, name='home'),\\r\\n    # new url definition\\r\\n    url(r'^contact/$', views.contact, name='contact'),\\r\\n</code></pre>\", \"id\": \"5363f4cd-9d3f-4e56-8239-a60169eb16f4\"}, {\"type\": \"paragraph\", \"value\": \"## Start setting up the view\\r\\n\\r\\nNow in *views.py*, we need to start setting up the logic. Let's set it up to just display a form for now, and we'll do the rest of the logic for after the form is submitted in a bit:\", \"id\": \"0efaca5b-5670-4655-b763-a8e6314a7bcd\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">views.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\n# add to the top\\r\\nfrom collection.forms import ContactForm\\r\\n\\r\\n# add to your views\\r\\ndef contact(request):\\r\\n    form_class = ContactForm\\r\\n\\r\\n    return render(request, 'contact.html', {\\r\\n        'form': form_class,\\r\\n    })\\r\\n</code></pre>\", \"id\": \"3153cb07-7cfa-476d-9c53-29854f31588f\"}, {\"type\": \"paragraph\", \"value\": \"We're just grabbing a form (which we haven't defined yet) and passing it over into the template (which we haven't created yet.)\\r\\n\\r\\n## Set up the form\\r\\n\\r\\nIn _[Hello Web App](https://hellowebbooks.com/learn-django/)_, we went over creating forms with `ModelForm`s, but skipped creating basic forms without a model. It's just as simple!\\r\\n\\r\\nIn our *forms.py*, add the below form code:\", \"id\": \"597613bb-6fc6-4e1a-9b1f-58f84a830d20\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">forms.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\n# make sure this is at the top if it isn't already\\r\\nfrom django import forms\\r\\n\\r\\n# our new form\\r\\nclass ContactForm(forms.Form):\\r\\n    contact_name = forms.CharField(required=True)\\r\\n    contact_email = forms.EmailField(required=True)\\r\\n    content = forms.CharField(\\r\\n        required=True,\\r\\n        widget=forms.Textarea\\r\\n    )\\r\\n</code></pre>\", \"id\": \"9eb79eec-2629-4009-9014-839f9ff92ac6\"}, {\"type\": \"paragraph\", \"value\": \"We're going to define the fields we want in our form, which'll be just **the contact's name, their email, and what they'd like to say to you.**\\r\\n\\r\\nAll those form fields were grabbed from [Django's Form fields documentation](https://docs.djangoproject.com/en/1.8/ref/forms/fields/), which is pretty easy to read to see what other fields are available. We're making all the form fields required, using an `EmailField` for the email so we can take advantage of the additional email formatting checks, and making the \\\"content\\\" field a larger `Textarea`.\\r\\n\\r\\n## Create the template\\r\\n\\r\\nNow we need to create the *template.html* page to display the contact form on our website. We're going to extend the base layout we created in the _[Hello Web App](https://hellowebbooks.com/learn-django/)_ tutorial, and then create the form using the form passed in from our view.\", \"id\": \"619333f7-f448-4798-83c6-bfbefc8afa09\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">contact.html</p>\\r\\n<pre><code class=\\\"django\\\">\\r\\n{% extends 'layouts/base.html' %}\\r\\n{% block title %}Contact - {{ block.super }}{% endblock %}\\r\\n\\r\\n{% block content %}\\r\\n&lt;h1&gt;Contact&lt;/h1&gt;\\r\\n&lt;form role=&quot;form&quot; action=&quot;&quot; method=&quot;post&quot;&gt;\\r\\n    {% csrf_token %}\\r\\n    {{ form.as_p }}\\r\\n    &lt;button type=&quot;submit&quot;&gt;Submit&lt;/button&gt;\\r\\n&lt;/form&gt;\\r\\n{% endblock %}\\r\\n</code></pre>\", \"id\": \"48642e57-7620-49ea-b085-2a3fd43fcd5b\"}, {\"type\": \"paragraph\", \"value\": \"At this point, we have all the pieces in place to display the form. Load */contact/* and check it out:\", \"id\": \"71511abc-006a-4788-a6ea-04ef1b7b5937\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/6/10/download.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"5bb9223c-bfa6-498a-b752-12b297ccbaac\"}, {\"type\": \"paragraph\", \"value\": \"Nice! Now let's start adding the logic in the back end to handle the information submitted by the user.\\r\\n\\r\\n## Set up our local email server...\\r\\n\\r\\nThis will be redundant for you if you've finished the _[Hello Web App](https://hellowebbooks.com/learn-django/)_ tutorial. In case you haven't, all you need to do to set up a local email server is add these lines to the bottom of your *settings.py*:\", \"id\": \"2aaf4ab8-541b-431c-8a28-1e40e3b1ccf2\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">settings.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\nEMAIL_BACKEND =\\r\\n  'django.core.mail.backends.console.EmailBackend'\\r\\nDEFAULT_FROM_EMAIL = 'testing@example.com'\\r\\nEMAIL_HOST_USER = ''\\r\\nEMAIL_HOST_PASSWORD = ''\\r\\nEMAIL_USE_TLS = False\\r\\nEMAIL_PORT = 1025\\r\\n</code></pre>\", \"id\": \"014627bd-d1ca-41ab-a474-67b54ac49fe3\"}, {\"type\": \"paragraph\", \"value\": \"This tells Django to output the \\\"email\\\" to your console, where you ran your `python manage.py runserver` command. We'll see what this looks like in a second.\\r\\n\\r\\n## Add the email logic\\r\\n\\r\\nLet's fill out the rest of the email logic. Here's the view from before, now filled in:\", \"id\": \"d984540c-7e6d-4c9b-8ede-fa0e3b243366\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">views.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\n# new imports that go at the top of the file\\r\\nfrom django.core.mail import EmailMessage\\r\\nfrom django.shortcuts import redirect\\r\\nfrom django.template.loader import get_template\\r\\n\\r\\n# our view\\r\\ndef contact(request):\\r\\n    form_class = ContactForm\\r\\n\\r\\n    # new logic!\\r\\n    if request.method == 'POST':\\r\\n        form = form_class(data=request.POST)\\r\\n\\r\\n        if form.is_valid():\\r\\n            contact_name = request.POST.get(\\r\\n                'contact_name'\\r\\n            , '')\\r\\n            contact_email = request.POST.get(\\r\\n                'contact_email'\\r\\n            , '')\\r\\n            form_content = request.POST.get('content', '')\\r\\n\\r\\n            # Email the profile with the\\r\\n            # contact information\\r\\n            template =\\r\\n                get_template('contact_template.txt')\\r\\n            context = {\\r\\n                'contact_name': contact_name,\\r\\n                'contact_email': contact_email,\\r\\n                'form_content': form_content,\\r\\n            }\\r\\n            content = template.render(context)\\r\\n\\r\\n            email = EmailMessage(\\r\\n                \\\"New contact form submission\\\",\\r\\n                content,\\r\\n                \\\"Your website\\\" +'<hi@weddinglovely.com>',\\r\\n                ['youremail@gmail.com'],\\r\\n                headers = {'Reply-To': contact_email }\\r\\n            )\\r\\n            email.send()\\r\\n            return redirect('contact')\\r\\n\\r\\n    return render(request, 'contact.html', {\\r\\n        'form': form_class,\\r\\n    })\\r\\n</code></pre>\\r\\n\\r\\n<p>Phew, a lot of logic! If you read the it from top to bottom, here's what's happening:</p>\\r\\n\\r\\n<ul>\\r\\n    <li>If the form was submitted:\\r\\n        <ul>\\r\\n            <li>Apply the information from the form to the form class we set up before.</li>\\r\\n            <li>Make sure that everything is valid (no missing fields, etc.)</li>\\r\\n            <li>Take the form information and put it in variables.</li>\\r\\n            <li>Stick the form information into a contact form template (which'll we will create in a second)</li>\\r\\n            <li>Create an email message using that contact template, and send the message.</li>\\r\\n            <li>Redirect to our contact page (not ideal, we'll go into why below.)</li>\\r\\n        </ul>\\r\\n    </li>\\r\\n    <li>Otherwise, just create the template with a blank form.</li>\\r\\n</ul>\", \"id\": \"7e1fdd7a-bd49-4dcf-a4db-c1a7d0f70d6b\"}, {\"type\": \"paragraph\", \"value\": \"## Create a template form for your email\\r\\n\\r\\nBefore we can test our logic, we need to create an email template. Our email template is going to be simple, just showing the sections that our user filled out. Create a new file in your templates directory (`touch contact_template.txt`) and fill it in with the info below:\", \"id\": \"44da7c39-4117-4098-8cb2-5ec9ebe76fb4\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">contact_template.txt</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\nContact Name:\\r\\n{{ contact_name }}\\r\\n\\r\\nEmail:\\r\\n{{ contact_email }}\\r\\n\\r\\nContent:\\r\\n{{ form_content|safe|striptags }}\\r\\n</code></pre>\", \"id\": \"8a039856-3140-413a-a91f-2fc199303f58\"}, {\"type\": \"paragraph\", \"value\": \"## Improve the form (optional)\\r\\n\\r\\nIn the screenshot of the form above, we can see that the labels of the form aren't very \\\"pretty\\\" \\u2014 for example, just saying \\\"Contact name\\\" which is very impersonal.\\r\\n\\r\\nDjango creates these names automatically from your field names, but we can set our own pretty label names in the form definition in *forms.py*. Update your code to the below:\", \"id\": \"5cbb5258-b6a2-481e-92a2-dbd246040eac\"}, {\"type\": \"html\", \"value\": \"<p class=\\\"code-page\\\">forms.py</p>\\r\\n<pre><code class=\\\"python\\\">\\r\\nclass ContactForm(forms.Form):\\r\\n    contact_name = forms.CharField(required=True)\\r\\n    contact_email = forms.EmailField(required=True)\\r\\n    content = forms.CharField(\\r\\n        required=True,\\r\\n        widget=forms.Textarea\\r\\n    )\\r\\n\\r\\n    # the new bit we're adding\\r\\n    def __init__(self, *args, **kwargs):\\r\\n        super(ContactForm, self).__init__(*args, **kwargs)\\r\\n        self.fields['contact_name'].label = \\\"Your name:\\\"\\r\\n        self.fields['contact_email'].label = \\\"Your email:\\\"\\r\\n        self.fields['content'].label =\\r\\n            \\\"What do you want to say?\\\"\\r\\n</code></pre>\", \"id\": \"0f2e5b77-c343-4b77-9e57-411e20e1c304\"}, {\"type\": \"paragraph\", \"value\": \"We've added the bit the starts with `__init__`, which might look a bit confusing. If you ignore the first two lines, the rest are pretty easy to read \\u2014 we're just grabbing the relevant fields in our form, and updating the label. [You can see more information about updating form fields and attributes here in this excellent post.](http://www.pydanny.com/overloading-form-fields.html)\\r\\n\\r\\nOnce we've reloaded our form, we can see the new labels:\", \"id\": \"6c51d49f-8224-4611-9721-d305776ca8fb\"}, {\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/6/10/new-form.png\\\" alt=\\\"\\\"/>\\r\\n    <figcaption>(Of course, this is minus any pretty CSS styling we need to do.)</figcaption>\\r\\n</figure>\\r\\n\\r\\n<p>Once we stick in some test information and submit the form, we can see the \\\"email\\\" in our console:</p>\\r\\n\\r\\n<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/6/10/console.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"c65dd6a5-fcb7-4bbf-bd4b-ae69ca98a1ee\"}, {\"type\": \"paragraph\", \"value\": \"## Set up our live email server (optional)\\r\\n\\r\\nThe local email server will output \\\"emails\\\" to your local server, so you can confirm everything is working locally \\u2014 but when your web app is live, you obviously want those emails to actually land in your email inbox, rather than the server output.\\r\\n\\r\\nYou can do this by setting up something like [Sendgrid](https://sendgrid.com/) or [Mandrill](http://mandrill.com/) \\u2014 freemium email servers where you should just need to sign up for an account, and set the details of your account in your settings.py.\\r\\n\\r\\n[Sendgrid has a great short walkthrough here.](https://sendgrid.com/docs/Integrate/Frameworks/django.html) If you're at the point in _[Hello Web App](https://hellowebbooks.com/learn-django/)_ where we've set up a production settings file, you can stick the email server stuff in there, and keep your local/test emails (using the Django console) in your normal *settings.py* file. This way you can \\\"send emails\\\" as you're developing your app, but you don't have to worry about going over the daily email limit that these email delivery products have in their freemium accounts.\\r\\n\\r\\n## Things that could be improved\\r\\n\\r\\nI mentioned above that we're, upon successful form submission, redirecting to our app homepage. That would be really confusing to the user, because there is no success message. We have two options here:\\r\\n\\r\\n* **We could set up a separate template that just says \\\"Success!\\\" that we redirect to after successful submission.** The easiest, but adding these kind of templates tends to clutter up your templates directory.\\r\\n* **Better, we could utilize the Django messages framework.** In your base template file, you can add a \\\"messages\\\" block, and then when you redirect to a page, you could pass along a message (an alert, an error, a warning, an info message, etc.) that'll pop into the top of any page. It's what I use for my production web apps, and I'll probably write a longer article about how to integrate messages soon. [In the meanwhile, check out the Django documentation on the messages framework here.](https://docs.djangoproject.com/en/1.8/ref/contrib/messages/)\\r\\n\\r\\n## Your contact form is complete!\\r\\n\\r\\nYou now have a working contact form that allows visitors to your web app to email you messages, and hopefully you learned some new skills about creating forms in Django and working with email.\\r\\n\\r\\nIf you haven't taken a look at my book, _[Hello Web App](https://hellowebbooks.com/learn-django/)_, teaching beginner web app development using Django yet, I highly encourage you to: [https://hellowebbooks.com/learn-django/](https://hellowebbooks.com/learn-django/])\\r\\n\\r\\nThanks everyone, and happy to answer any questions in the comments!\", \"id\": \"cf2bad8e-a122-428f-85ad-ee55fe03d5c4\"}]", "date": "2015-06-10T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/6/10/download.png", "categories": [3, 7, 8]}}, {"model": "blog.postpage", "pk": 53, "fields": {"excerpt": "I'll be running workshops on the Hello Web App material at two events in May. If you're in these areas and are on the fence about writing web apps, this'll be a great opportunity to walk through the Hello Web App content (plus you'll get a copy of the book to keep at the end!)", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"full\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/4/13/workshops.png\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"3607443f-49cb-4e70-969f-c669ad179cc6\"}, {\"type\": \"paragraph\", \"value\": \"I'll be running workshops on the Hello Web App material at two events in May. If you're in these areas and are on the fence about writing web apps, this'll be a great opportunity to walk through the Hello Web App content (plus you'll get a copy of the book to keep at the end!)\\r\\n\\r\\nFirst up: [Refresh Portland, May 21st](http://rfrshpdx.org/build-a-web-app-workshop/). This is a half-day afternoon workshop for $125, and we'll be getting beers after too. Also, on the 20th I'll also be giving a [talk about the book writing process too](http://rfrshpdx.org/so-you-want-to-write-a-book/)!\\r\\n\\r\\nThen I'll be at [DjangoCon EU](http://2015.djangocon.eu/event/django-web-designers/) in Cardiff, Wales, giving a workshop on the Open Day (May 31st.) This is a completely free workshop, open to non-conference attendees as well. \\r\\n\\r\\nHope you can join me for an in-person workshop!\", \"id\": \"b6909618-10fc-41fc-88c8-84c513c50708\"}]", "date": "2015-04-13T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/4/13/workshops.png", "categories": [1, 8]}}, {"model": "blog.postpage", "pk": 54, "fields": {"excerpt": "Curious about building web apps? I interviewed recent programmers about their experiences learning to code and where they are now. Please welcome Nicole Ziemlak, recent graduate of Hackbright Academy in San Francisco...", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/4/29/nicole-small.jpeg\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"3c51faaf-7789-4c96-a1e2-1d6766577499\"}, {\"type\": \"paragraph\", \"value\": \"*Curious about building web apps? I interviewed recent programmers about their experiences learning to code and where they are now. Please welcome Nicole Ziemlak, recent graduate of [Hackbright Academy](http://hackbrightacademy.com/) in San Francisco.*\\r\\n\\r\\n## Hi Nicole \\u2014 what's your background?\\r\\n\\r\\nI majored in literature and creative writing in college, and then taught high school and GRE test prep for a couple years before eventually moving to San Francisco. **I'd always been interested in technology from a consumer's perspective, but being surrounded by so many developers inspired me to try creating my own programs.** I took a job at a non-profit organization that partnered with some major players in the industry (e.g. Microsoft, Intuit, Symantec), hoping that I would be able to teach myself programming on my own and maybe move into a more technical role. \\r\\n\\r\\n## What inspired you to learn programming?\\r\\n\\r\\nI started teaching myself the basics of a few programming languages (Python, Ruby, Java) as well as some basic web development (HTML, CSS, Javascript) using free online resources such as [Codecademy](http://codecademy.com/) and language-specific tutorials. **The problem was that every time I'd get to the end of one of these tutorials, I found I had enough knowledge to write very simple programs, but I knew nothing about how to create a web app.** I didn't even fully understand what a framework like Django or Rails was, and the tutorials on them seemed to expect more cohesive knowledge from the beginning--knowledge that I hadn't learned through the tutorials I was following. \\r\\n\\r\\nIn my search for resources that could bridge that gap between programming knowledge and a fully-fledged web application, I stumbled upon coding bootcamps. There are quite a few in San Francisco, so I attended a few info sessions and started my applications. When I went to visit Hackbright Academy, I knew I had found my top choice: this program had great placement statistics; the instruction was based in Python, which was my favorite of the languages I'd been learning; and the cohort was entirely female. The gender disparity in tech is something that both fascinates and frustrates me to no end, and Hackbright seemed like the best way to find a network of talented, intelligent women that would all be working in the same male-dominated field. \\r\\n\\r\\n## Tell me a little bit about the Hackbright Academy experience!\\r\\n\\r\\nI was accepted into Hackbright's Winter 2015 cohort and we spent the first 5 weeks learning Python, Javascript, SQL, and Flask, while building small programs that knitted everything together. I was particularly enamored with Flask, and so when we began the 4 week period for our individual projects, I decided to teach myself Django, which I'd heard a bit about through Python-focused job descriptions. **I used the Django docs and as many online tutorials as I could get my hands on to figure out how to set up a web app from scratch.**\\r\\n\\r\\n## Anything cool you've built or would like to mention?\\r\\n\\r\\nMy final project is a recipe management app called [Chomp!](http://chompbang.com/) and you can check out my code and a fairly extensive walkthrough in my [Github README](https://github.com/imnikkiz/Chomp). I just accepted a position as a Software Engineer at [Minted](http://www.minted.com/) and am looking forward to learning about programming larger-scale web apps on the job. \\r\\n\\r\\n## Are you happy you learned how to program?\\r\\n\\r\\n**Overall, I am so glad I challenged myself to learn how to code.** While I'm still looking for my first job as a software engineer, I've spent the last couple of weeks interviewing at exciting, innovative companies where I'll be working on the technologies I used to just passively consume. **I now have the tools to create and build anything I can dream up.**\\r\\n\\r\\n*Thanks Nicole! Hackbright Academy is a great resource for those that are looking for a complete software engineering education. [Learn more about Hackbright Academy here](http://hackbrightacademy.com/).* \\r\\n\\r\\n*[See my previous interview with Nicole Zuckerman here](http://hellowebapp.com/news/why-learn-how-to-build-web-apps-interview-nicole-zuckerman).*\", \"id\": \"d0faef97-9373-4cfa-9361-cdde2e51b61d\"}]", "date": "2015-04-29T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/4/29/nicole.jpeg", "categories": [6]}}, {"model": "blog.postpage", "pk": 55, "fields": {"excerpt": "Curious about building web apps? I interviewed recent programmers about their experiences learning to code and where they are now. First up: Nicole Zuckerman, recent graduate of Hackbright Academy in San Francisco...", "featured": false, "body": "[{\"type\": \"html\", \"value\": \"<figure class=\\\"caption\\\">\\r\\n    <img src=\\\"/static/images/blog/2015/4/22/nicole.jpeg\\\" alt=\\\"\\\"/>\\r\\n</figure>\", \"id\": \"e320fbb0-d7c3-44d2-9336-c852ff519d6b\"}, {\"type\": \"paragraph\", \"value\": \"*Curious about building web apps? I interviewed recent programmers about their experiences learning to code and where they are now. First up: Nicole Zuckerman, recent graduate of [Hackbright Academy](http://hackbrightacademy.com/) in San Francisco.*\\r\\n\\r\\n## Hi Nicole \\u2014 what's your background?\\r\\n\\r\\nI've got a BA and MA in English Literature and Women's Studies. I worked in publishing for around 5 years (college textbooks), going from a proofreader to an accuracy checker for math textbooks (up to/including calculus), then became a project manager, and ultimately a program director for a workflow of publishing books. **Basically, entirely non-technical**, except for the fact that when I was a project manager I coded manuscript in something resembling html/xml... which was probably my favorite part of that job, even though it seems super boring to me now when I can, instead, make computers do things! \\r\\n\\r\\n## What inspired you to learn programming?\\r\\n\\r\\nI have generally felt, for most of my adult life, that geeks of a feather tend to flock together. I knew a bunch of friends who were software developers, and **when I would gripe about how non-inspiring my work was, they would say \\\"You love language and you love logic, I think you'd love what I do\\\" but I never believed I could**. I thought you had to be wicked smart, and have been doing it since you were in footie pajamas, and I fit neither of those categories.\\r\\n\\r\\nBut when my desire for stability lost out, finally, to my need for a job that I enjoyed, I finally decided I would at least give it a shot. I'd apply to a school, I'd play with it a little, and if I was terrible at it or hated it, then at least I'd know. So I tried some exercises on [Codecademy](http://codecademy.com/), and found that it was okay although I didn't get why you would bother with these things, and I applied to Hackbright.\\r\\n\\r\\nHonestly, the interview I had probably played a fairly large role into my desire to go for it. I was given a puzzle of sorts, a problem with a set of limitations, and described how I would solve it. Then we made the problem harder, more restrictions, etc, and talked about how I could solve it better. **That kind of problem-solving was really fun for me, and something I didn't realize you could have a job doing** \\u2014 figuring out how bubble sort (the algorithm) works without ever having heard of such a thing. **When I got in, I was elated, and determined to do this for my career.**\\r\\n\\r\\n## Tell me a little bit about the Hackbright Academy experience!\\r\\n\\r\\nI was convinced I was the worst in the class during the first half of the course, the least prepared. I'd never heard of these concepts before doing the pre-work; things like for loops and Object-Oriented Programming were entirely alien to me. Some people get these things right away, and some take time to process the implications before getting it; I was in the latter category, but once I understood the why of a thing, I really got it in a fundamental way. **It turns out I was as well prepared as anyone else in the class was, and that I was doing great**, though I always have the highest expectations of myself and you'll never be able to convince me that I'm killing it. \\r\\n\\r\\nI believe that if I'd done any other program, I wouldn't be nearly as strong in my understanding as I am right now. The all-female student base meant I didn't assume that anyone else innately had more knowledge than I did, so I had to just roll up my sleeves and get things done myself. I am so glad I chose Hackbright.\\r\\n\\r\\n**Probably the thing that tied everything together, for me, and made me feel like I could actually do this as a job, was the project component**, the second half of the course. Instead of making these toy projects that seemed arbitrary and limited, I decided what the problem was, the use case, the solution, and implemented it from start to finish. This part, for me, made the prospect of a career in this stuff real. To be honest, I had little interest in the front end of things, and without prodding from instructors and designers I know, I would probably not have styled a darned thing on my project. **I was way more interested in the back end; how do I handle data? What does it mean? How do I make sense of these arbitrary collections of signals? That part fascinated me. It still does.**\\r\\n\\r\\n## Anything cool you've built or would like to mention?\\r\\n\\r\\nI don't feel like I've built anything particularly mind-blowing, but it's worth it to me to list out the things I've accomplished, so I can properly appreciate what I've done in the short 2 years and change I've been working on this stuff. So I'll list them here, for myself as much as for anyone else:\\r\\n\\r\\nHackbright project: An in-browser implementation of Android'd 'Swipe' keyboard. Instead of typing discreet taps on a screen like you would a real life keyboard, Putting your finger down over a letter, moving it over the keyboard across countless letters to your next chosen letter, etc. I describe it as \\\"Wiggle wiggle wiggle, Word!\\\" and **honestly, the fact that I made it work (even if my accuracy wasn't as high as I'd want it) is still kinda like magic.**\\r\\n\\r\\nAt Eventbrite, I spent a hackathon working with another engineer to see if we could automatically run full end-to-end tests concurrently, headless, whenever someone committed and pushed to our main test branch. We didn't quite finish it, but the fact that this stuff was pretty much entirely non-pythonic and mostly about understanding deeper command-line and computer-related things, made me pretty proud of myself anyway.\\r\\n\\r\\nI just recently helped run a tutorial at Pycon about web security, which was a topic I never would have thought I'd understand well, a year ago. I am still not amazing at it, but I know a lot of the common pitfalls, and **I have developed a fine appreciation for the hilarity of the mistakes that make it through to the public. It turns out that most of the time the secret to having a safe web-app is to trust Django to do the right thing, and not get in its way. Who knew?**\\r\\n\\r\\nAt Sosh, I recently wrote the entire back end for an iPad application, in 3 weeks. It's entirely for the merchants who work with us, to make their lives easier and make Sosh incalculably valuable to them, and **I was pretty pleased with the fact that I did it all by myself, in my first month after joining the company.**\\r\\n\\r\\n## Overall, are you happy with deciding to learn how to program?\\r\\n\\r\\n**Deciding to learn to program was hands-down one of the best decisions I've made.** It was a terrifying risk at the time, setting my previous career aside for this huge unknown; would I like it? would I be good at it? would I know enough to be useful? It turns out, I got exactly the right combination of answers out of it: **I love it, I know enough to be useful, and although I'm not as skilled as I want to be, I'm learning all the time, and I'll get there** \\u2014 there's joy in that, too. This was a decision that sparked a monumental change in my life, and it worked out shockingly well. **I couldn't be happier that I took the chance.**\\r\\n\\r\\n*Thanks Nicole! Hackbright Academy is a great resource for those that are looking for a complete software engineering education. [Learn more about Hackbright Academy here](http://hackbrightacademy.com/).*\", \"id\": \"91276353-d4e8-48ea-985e-b5a122ec2288\"}]", "date": "2015-04-22T08:00:00Z", "header_image": null, "header_image_link": "/images/blog/2015/4/22/nicole-large.jpeg", "categories": [6]}}, {"model": "blog.blogcategory", "pk": 1, "fields": {"name": "Announcements", "slug": "announcements"}}, {"model": "blog.blogcategory", "pk": 2, "fields": {"name": "Production", "slug": "production"}}, {"model": "blog.blogcategory", "pk": 3, "fields": {"name": "Tutorial", "slug": "tutorial"}}, {"model": "blog.blogcategory", "pk": 4, "fields": {"name": "Case Study", "slug": "casestudy"}}, {"model": "blog.blogcategory", "pk": 5, "fields": {"name": "Design", "slug": "design"}}, {"model": "blog.blogcategory", "pk": 6, "fields": {"name": "Interview", "slug": "interview"}}, {"model": "blog.blogcategory", "pk": 7, "fields": {"name": "Development", "slug": "development"}}, {"model": "blog.blogcategory", "pk": 8, "fields": {"name": "Hello Web App", "slug": "hello-web-app"}}, {"model": "blog.blogcategory", "pk": 9, "fields": {"name": "Hello Web Design", "slug": "hello-web-design"}}, {"model": "blog.blogcategory", "pk": 10, "fields": {"name": "Zines", "slug": "zines"}}]